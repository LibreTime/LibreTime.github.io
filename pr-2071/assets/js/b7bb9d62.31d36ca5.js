"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2025],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=i,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||a;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},73053:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const a={title:"LibreTime API usage"},o=void 0,s={unversionedId:"developer-manual/legacy-api",id:"version-3.0.0-alpha.13/developer-manual/legacy-api",title:"LibreTime API usage",description:"We're in the process of rewriting LibreTime's API. This page contains the instructions for the current version, written in PHP.",source:"@site/versioned_docs/version-3.0.0-alpha.13/developer-manual/legacy-api.md",sourceDirName:"developer-manual",slug:"/developer-manual/legacy-api",permalink:"/pr-2071/docs/developer-manual/legacy-api",draft:!1,editUrl:"https://github.com/libretime/libretime/blob/main/docs/versioned_docs/version-3.0.0-alpha.13/developer-manual/legacy-api.md",tags:[],version:"3.0.0-alpha.13",frontMatter:{title:"LibreTime API usage"},sidebar:"tutorialSidebar",previous:{title:"Development environment",permalink:"/pr-2071/docs/developer-manual/environment"},next:{title:"Widgets",permalink:"/pr-2071/docs/developer-manual/widgets"}},l={},p=[],u={toc:p};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"We're in the process of rewriting LibreTime's API. This page contains the instructions for the current version, written in PHP.")),(0,i.kt)("p",null,"The LibreTime API enables many types of information about the broadcast schedule and configuration to be retrieved from the LibreTime server. Other than the live-info and week-info data fetched by website widgets (see the chapter ",(0,i.kt)("em",{parentName:"p"},"Exporting the schedule"),"), all API requests must be authenticated using the secret API key stored in the file ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/libretime/api_client.cfg")," on the LibreTime server. This key is autogenerated during LibreTime installation and should be unique for each server."),(0,i.kt)("p",null,"If you intend to use the LibreTime API across a public network, for security reasons it is highly recommended that all API requests are sent over encrypted https: and that the web server is configured to accept requests to the api/ directory from specific host names or IP addresses only."),(0,i.kt)("p",null,"The format of API requests is:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://libretime.example.com/api/api-action/format/json/api_key/XXXXXX\n")),(0,i.kt)("p",null,"where api-action is the type of request and XXXXXX is the secret API key. Available actions include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"on-air-light - return true if the station is on air"),(0,i.kt)("li",{parentName:"ul"},"status - get the status of LibreTime components and resource usage"),(0,i.kt)("li",{parentName:"ul"},"version - returns the version of LibreTime installed"),(0,i.kt)("li",{parentName:"ul"},"get-files-without-silan-value - list files for which silence detection has not yet been performed"),(0,i.kt)("li",{parentName:"ul"},"get-stream-setting - gets the settings of LibreTime output streams"),(0,i.kt)("li",{parentName:"ul"},"get-stream-parameters - gets the parameters of LibreTime output streams")),(0,i.kt)("p",null,"For example, using the action ",(0,i.kt)("em",{parentName:"p"},"get-stream-setting")," returns the following output for the first configured stream:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{"keyname":"s1_type","value":"ogg","type":"string"},\n\n{"keyname":"s1_host","value":"streaming.example.com","type":"string"},\n\n{"keyname":"s1_port","value":"8000","type":"integer"},\n\n{"keyname":"s1_mount","value":"main","type":"string"},\n\n{"keyname":"s1_url","value":"http:\\/\\/airtime.sourcefabric.org","type":"string"},\n\n{"keyname":"s1_description","value":"Airtime Radio! Stream #1","type":"string"},\n\n{"keyname":"s1_genre","value":"Screamo","type":"string"},\n')),(0,i.kt)("p",null,"which is enough information to construct a player widget dynamically. (s1_url is the station's homepage, not the stream URL). The same information is provided with an s2","_"," prefix for the second stream, and s3","_"," prefix for the third stream."),(0,i.kt)("p",null,"Some API requests require the directory ID number to be specified as ",(0,i.kt)("em",{parentName:"p"},"dir_id")," including:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"list-all-files - list files in the specified directory"),(0,i.kt)("li",{parentName:"ul"},"get-files-without-replay-gain - list files in the specified directory for which ReplayGain has not been calculated yet")),(0,i.kt)("p",null,"For example, using a request such as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"http://libretime.example.com/api/list-all-files/format/json/api_key/XXXXXX/dir_id/1/\n")),(0,i.kt)("p",null,"returns the full path to each media file in the LibreTime storage directory:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "files": [\n    "imported/1/Mark Ronson feat. Saigon/Here Comes the Fuzz/7-Diduntdidunt-unknown.flac",\n    "imported/1/Jimi Tenor & Tony Allen/Inspiration Information/3-Selfish Gene-128kbps.mp3"\n  ]\n}\n')))}c.isMDXComponent=!0}}]);