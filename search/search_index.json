{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to LibreTime LibreTime makes it easy to run your own online or terrestrial radio station. Check out some features and screenshots , then install it and start broadcasting! LibreTime is Free/Libre and Open Source Software (FLOSS). Among other things, this means that you have the freedom to: Run it royalty-free for as long as you like. Read and alter the code that makes it work (or hire someone to do this for you!) Contribute documentation, bug-fixes, etc. so that everyone in the community benefits. LibreTime is a fork of AirTime due to stalled development of the FLOSS version. For background on this, see this open letter to the Airtime community . If you are end-user of an already installed LibreTime instance we have a number of tutorials that can help you learn how to use the software. We also have how-to guides that contain step-by-step instructions for various common tasks. There are currently no companies offering turn-key LibreTime hosting so if you are interested in running it you will need to have some familiarity with running a linux server. You can always reach out to help from the community at our forum . You can also join our Mattermost instance and talk with other developers and users. Getting Started (for Developers and Admins) The easiest way to check out LibreTime for yourself is to run a local instance in a virtual machine. Assuming you already have Git, Vagrant and Virtualbox installed, just run: git clone https://github.com/libretime/libretime.git cd libretime vagrant up ubuntu-bionic If everything works out, you will find LibreTime on port 8080 , icecast on port 8000 and the docs on port 8888 . Of course, this setup isn't appropriate for production use. For that, check out our installation instructions . More information on the vagrant setup are in the docs .","title":"Home"},{"location":"#welcome-to-libretime","text":"LibreTime makes it easy to run your own online or terrestrial radio station. Check out some features and screenshots , then install it and start broadcasting! LibreTime is Free/Libre and Open Source Software (FLOSS). Among other things, this means that you have the freedom to: Run it royalty-free for as long as you like. Read and alter the code that makes it work (or hire someone to do this for you!) Contribute documentation, bug-fixes, etc. so that everyone in the community benefits. LibreTime is a fork of AirTime due to stalled development of the FLOSS version. For background on this, see this open letter to the Airtime community . If you are end-user of an already installed LibreTime instance we have a number of tutorials that can help you learn how to use the software. We also have how-to guides that contain step-by-step instructions for various common tasks. There are currently no companies offering turn-key LibreTime hosting so if you are interested in running it you will need to have some familiarity with running a linux server. You can always reach out to help from the community at our forum . You can also join our Mattermost instance and talk with other developers and users.","title":"Welcome to LibreTime"},{"location":"#getting-started-for-developers-and-admins","text":"The easiest way to check out LibreTime for yourself is to run a local instance in a virtual machine. Assuming you already have Git, Vagrant and Virtualbox installed, just run: git clone https://github.com/libretime/libretime.git cd libretime vagrant up ubuntu-bionic If everything works out, you will find LibreTime on port 8080 , icecast on port 8000 and the docs on port 8888 . Of course, this setup isn't appropriate for production use. For that, check out our installation instructions . More information on the vagrant setup are in the docs .","title":"Getting Started (for Developers and Admins)"},{"location":"database/","text":"Database LibreTime is designed to work with a PostgreSQL database server running locally. LibreTime uses PropelORM to interact with the ZendPHP components and create the database. Modifying the Database If you are a developer seeking to add new columns to the database here are the steps. Modify airtime_mvc/build/schema.xml with any changes. Run dev_tools/propel_generate.sh Update the upgrade.sql under airtime_mvc/application/controllers/upgrade_sql/VERSION for example ALTER TABLE imported_podcast ADD COLUMN album_override boolean default 'f' NOT NULL; Viewing the Database and Data One new tool that you can use to interact with and directly view the LibreTime database and tables is Postage It provides a graphical interface that can show the LibreTime tables and easily modify the data inside. It runs as a local GUI client. Here are some brief instructions for how to get starting using it as a developer with a vagrant virtual machine. Download and install release from their github page - Additional instructions here Setup port-forwarding for the vagrant VM - check the VirtualBox Settings for the VM -> Network -> Advanced -> Port Forwarding -> Forward HostPort 5550 to GuestPort 5432 Modify PostgreSQL to accept connections from outside localhost -> edit /etc/postgresql/VERSION#/main/postgresql.conf - uncomment and modify the listen_address to be listen_addresses = '*' you may also need to edit pg_hba.conf in the same directory and allow Ipv4 connections from your localhost. I modified it to all as security wasn't a concern. Setup a Postgres username/password for super user in Ubuntu etc use sudo -u postgres psql postgres # \\password postgres Enter new password: Startup Postage by running postage and edit the postage-connections.conf and set the port to 5550 and save it. Then type in the username postgres and password you set above. Launch and select the airtime database to view the copy running on your vagrant box. To see the data/schema in a particular table click Schemas->Tables->table_name and then DesignTable or EditData This can provide a easier way to view how LibreTime composes its tables than the CLI to postgresql. Description of Tables and their Purposes TODO","title":"Database"},{"location":"database/#database","text":"LibreTime is designed to work with a PostgreSQL database server running locally. LibreTime uses PropelORM to interact with the ZendPHP components and create the database.","title":"Database"},{"location":"database/#modifying-the-database","text":"If you are a developer seeking to add new columns to the database here are the steps. Modify airtime_mvc/build/schema.xml with any changes. Run dev_tools/propel_generate.sh Update the upgrade.sql under airtime_mvc/application/controllers/upgrade_sql/VERSION for example ALTER TABLE imported_podcast ADD COLUMN album_override boolean default 'f' NOT NULL;","title":"Modifying the Database"},{"location":"database/#viewing-the-database-and-data","text":"One new tool that you can use to interact with and directly view the LibreTime database and tables is Postage It provides a graphical interface that can show the LibreTime tables and easily modify the data inside. It runs as a local GUI client. Here are some brief instructions for how to get starting using it as a developer with a vagrant virtual machine. Download and install release from their github page - Additional instructions here Setup port-forwarding for the vagrant VM - check the VirtualBox Settings for the VM -> Network -> Advanced -> Port Forwarding -> Forward HostPort 5550 to GuestPort 5432 Modify PostgreSQL to accept connections from outside localhost -> edit /etc/postgresql/VERSION#/main/postgresql.conf - uncomment and modify the listen_address to be listen_addresses = '*' you may also need to edit pg_hba.conf in the same directory and allow Ipv4 connections from your localhost. I modified it to all as security wasn't a concern. Setup a Postgres username/password for super user in Ubuntu etc use sudo -u postgres psql postgres # \\password postgres Enter new password: Startup Postage by running postage and edit the postage-connections.conf and set the port to 5550 and save it. Then type in the username postgres and password you set above. Launch and select the airtime database to view the copy running on your vagrant box. To see the data/schema in a particular table click Schemas->Tables->table_name and then DesignTable or EditData This can provide a easier way to view how LibreTime composes its tables than the CLI to postgresql.","title":"Viewing the Database and Data"},{"location":"database/#description-of-tables-and-their-purposes","text":"TODO","title":"Description of Tables and their Purposes"},{"location":"documentation/","text":"Documentation The LibreTime documentation site is generated with mkdocs . To get started contributing to this project, fork it on Github. Then install mkdocs and clone this repo locally: sudo brew install python # For OSX users sudo aptitude install python-pip # For Debian/Ubuntu users sudo pip install mkdocs git clone https://github.com/libretime/libretime cd libretime git remote add sandbox https://github.com/<username>/libretime # URL for your fork mkdocs build --clean mkdocs serve Your local LibreTime docs site should now be available for browsing: http://localhost:8888/ . When you find a typo, an error, unclear or missing explanations or instructions, open a new terminal and start editing. Your changes should be reflected automatically on the local server. Find the page you\u2019d like to edit; everything is in the docs/ directory. Make your changes, commit and push them, and start a pull request: git checkout -b fix_typo vi docs/index.md # Add/edit/remove whatever you see fit. Be bold! mkdocs build --clean; mkdocs serve # Go check your changes. We\u2019ll wait... git diff # Make sure there aren\u2019t any unintended changes. git commit -am\u201dFixed typo.\u201d # Useful commit message are a good habit. git push sandbox fix_typo Visit your fork on Github and start a PR.","title":"Documentation"},{"location":"documentation/#documentation","text":"The LibreTime documentation site is generated with mkdocs . To get started contributing to this project, fork it on Github. Then install mkdocs and clone this repo locally: sudo brew install python # For OSX users sudo aptitude install python-pip # For Debian/Ubuntu users sudo pip install mkdocs git clone https://github.com/libretime/libretime cd libretime git remote add sandbox https://github.com/<username>/libretime # URL for your fork mkdocs build --clean mkdocs serve Your local LibreTime docs site should now be available for browsing: http://localhost:8888/ . When you find a typo, an error, unclear or missing explanations or instructions, open a new terminal and start editing. Your changes should be reflected automatically on the local server. Find the page you\u2019d like to edit; everything is in the docs/ directory. Make your changes, commit and push them, and start a pull request: git checkout -b fix_typo vi docs/index.md # Add/edit/remove whatever you see fit. Be bold! mkdocs build --clean; mkdocs serve # Go check your changes. We\u2019ll wait... git diff # Make sure there aren\u2019t any unintended changes. git commit -am\u201dFixed typo.\u201d # Useful commit message are a good habit. git push sandbox fix_typo Visit your fork on Github and start a PR.","title":"Documentation"},{"location":"faq/","text":"Frequently Asked Questions What is LibreTime? LibreTime is a community managed fork of the AirTime project. It is managed by a friendly inclusive community of stations from around the globe that use, document and improve LibreTime. Can I upgrade to LibreTime? In theory you can update any pre 3.0 version of AirTime to LibreTime 3.0.0 and above. More information on Upgrading is in the docs. LibreTime is complex software, as such it is close to impossible to guarantee that every upgrade path works as intended. This means you should trial the update on a parallel test infrastructure to minimize possible downtime. Please let the community know if you encounter issues with the update process. Why are Cue-In/Out points wrong in some tracks? / What's with silan? The silan silence detection is currently outdated on almost all distributions. The older versions report clearly wrong information and may segfault at the worst. Versions starting with 0.3.3 (and some patched 0.3.2 builds) are much better but still need thorough testing. Please see the release notes for up to date mitigation scenarios and details on the issues. Why did you fork AirTime? See this open letter to the Airtime community .","title":"F.A.Q."},{"location":"faq/#frequently-asked-questions","text":"What is LibreTime? LibreTime is a community managed fork of the AirTime project. It is managed by a friendly inclusive community of stations from around the globe that use, document and improve LibreTime. Can I upgrade to LibreTime? In theory you can update any pre 3.0 version of AirTime to LibreTime 3.0.0 and above. More information on Upgrading is in the docs. LibreTime is complex software, as such it is close to impossible to guarantee that every upgrade path works as intended. This means you should trial the update on a parallel test infrastructure to minimize possible downtime. Please let the community know if you encounter issues with the update process. Why are Cue-In/Out points wrong in some tracks? / What's with silan? The silan silence detection is currently outdated on almost all distributions. The older versions report clearly wrong information and may segfault at the worst. Versions starting with 0.3.3 (and some patched 0.3.2 builds) are much better but still need thorough testing. Please see the release notes for up to date mitigation scenarios and details on the issues. Why did you fork AirTime? See this open letter to the Airtime community .","title":"Frequently Asked Questions"},{"location":"features/","text":"Features Web-based remote station management - authorized personnel can add programme material, create playlists or smart blocks, and stream in live, all via a web interface. Automation - LibreTime has a scheduler function that enables users to create shows with content for playback at the exact date and time specified. Playlists, smart blocks and remote stream URLs can be used multiple times. Solid playout - LibreTime uses the open source Liquidsoap streaming language for reliable and precise playback to multiple outputs. Open, extensible architecture - stations are free to extend and alter all parts of the program code, under the GNU AGPLv3 license. Screenshots","title":"Features"},{"location":"features/#features","text":"Web-based remote station management - authorized personnel can add programme material, create playlists or smart blocks, and stream in live, all via a web interface. Automation - LibreTime has a scheduler function that enables users to create shows with content for playback at the exact date and time specified. Playlists, smart blocks and remote stream URLs can be used multiple times. Solid playout - LibreTime uses the open source Liquidsoap streaming language for reliable and precise playback to multiple outputs. Open, extensible architecture - stations are free to extend and alter all parts of the program code, under the GNU AGPLv3 license.","title":"Features"},{"location":"features/#screenshots","text":"","title":"Screenshots"},{"location":"freeipa/","text":"You can configure LibreTime to delegate all authentication to a FreeIPA server. This allows you users to use their existing FreeIPA credentials. For this to work you need to configure Apache to use mod_authnz_pam and mod_intercept_form_submit . Apache configuration After installing the needed modules you can set up Apache to intercept form logins and check them against pam. <Location /login> InterceptFormPAMService http-libretime InterceptFormLogin username InterceptFormPassword password InterceptFormLoginSkip admin InterceptFormPasswordRedact on InterceptFormLoginRealms INT.RABE.CH Require pam-account http-libretime </Location> <Location /> <RequireAny> <RequireAny> Require pam-account http-libretime Require all granted </RequireAny> <RequireAll> Require expr %{REQUEST_URI} =~ /(index.php|login|favicon.ico|js|css|locale)/ Require all granted </RequireAll> </RequireAny> </Location> PAM configuration The above configuration expects a PAM configuration for the http-libretime service. To confiure this you need to create the file /etc/pam.d/http-libretime with the following contents. auth required pam_sss.so account required pam_sss.so LDAP configuration LibreTime needs direct access to LDAP so it can fetch additional information. It does so with a system account that you need to set up beforehand. You can configure everything pertaining to how LibreTime accesses LDAP in /etc/airtime/airtime.conf . The default file has the following values you need to change. # # ---------------------------------------------------------------------- # L D A P # ---------------------------------------------------------------------- # # hostname: Hostname of LDAP server # # binddn: Complete DN of user used to bind to LDAP # # password: Password for binddn user # # account_domain: Domain part of username # # basedn: base search DN # # filter_field: Name of the uid field for searching # Usually uid, may be cn # # groupmap_*: Map LibreTime user types to LDAP groups # Lets LibreTime assign user types based on the # group a given user is in. # [ldap] hostname = ldap.example.org binddn = 'uid=libretime,cn=sysaccounts,cn=etc,dc=int,dc=example,dc=org' password = hackme account_domain = INT.EXAMPLE.ORG basedn = 'cn=users,cn=accounts,dc=int,dc=example,dc=org' filter_field = uid groupmap_guest = 'cn=guest,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_host = 'cn=host,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_program_manager = 'cn=program_manager,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_admin = 'cn=admins,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_superadmin = 'cn=superadmin,cn=groups,cn=accounts,dc=int,dc=example,dc=org' Enable FreeIPA auth After everything is set up properly you can enable FreeIPA auth in airtime.conf : [general] auth = LibreTime_Auth_Adaptor_FreeIpa You should now be able to use your FreeIPA credentials to log in to LibreTime.","title":"FreeIPA Authentication"},{"location":"freeipa/#apache-configuration","text":"After installing the needed modules you can set up Apache to intercept form logins and check them against pam. <Location /login> InterceptFormPAMService http-libretime InterceptFormLogin username InterceptFormPassword password InterceptFormLoginSkip admin InterceptFormPasswordRedact on InterceptFormLoginRealms INT.RABE.CH Require pam-account http-libretime </Location> <Location /> <RequireAny> <RequireAny> Require pam-account http-libretime Require all granted </RequireAny> <RequireAll> Require expr %{REQUEST_URI} =~ /(index.php|login|favicon.ico|js|css|locale)/ Require all granted </RequireAll> </RequireAny> </Location>","title":"Apache configuration"},{"location":"freeipa/#pam-configuration","text":"The above configuration expects a PAM configuration for the http-libretime service. To confiure this you need to create the file /etc/pam.d/http-libretime with the following contents. auth required pam_sss.so account required pam_sss.so","title":"PAM configuration"},{"location":"freeipa/#ldap-configuration","text":"LibreTime needs direct access to LDAP so it can fetch additional information. It does so with a system account that you need to set up beforehand. You can configure everything pertaining to how LibreTime accesses LDAP in /etc/airtime/airtime.conf . The default file has the following values you need to change. # # ---------------------------------------------------------------------- # L D A P # ---------------------------------------------------------------------- # # hostname: Hostname of LDAP server # # binddn: Complete DN of user used to bind to LDAP # # password: Password for binddn user # # account_domain: Domain part of username # # basedn: base search DN # # filter_field: Name of the uid field for searching # Usually uid, may be cn # # groupmap_*: Map LibreTime user types to LDAP groups # Lets LibreTime assign user types based on the # group a given user is in. # [ldap] hostname = ldap.example.org binddn = 'uid=libretime,cn=sysaccounts,cn=etc,dc=int,dc=example,dc=org' password = hackme account_domain = INT.EXAMPLE.ORG basedn = 'cn=users,cn=accounts,dc=int,dc=example,dc=org' filter_field = uid groupmap_guest = 'cn=guest,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_host = 'cn=host,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_program_manager = 'cn=program_manager,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_admin = 'cn=admins,cn=groups,cn=accounts,dc=int,dc=example,dc=org' groupmap_superadmin = 'cn=superadmin,cn=groups,cn=accounts,dc=int,dc=example,dc=org'","title":"LDAP configuration"},{"location":"freeipa/#enable-freeipa-auth","text":"After everything is set up properly you can enable FreeIPA auth in airtime.conf : [general] auth = LibreTime_Auth_Adaptor_FreeIpa You should now be able to use your FreeIPA credentials to log in to LibreTime.","title":"Enable FreeIPA auth"},{"location":"install/","text":"Installing LibreTime There two methods of installing LibreTime - Source or Ubuntu package . Source Requirements: LibreTime should generally be installed on a dedicated host running Ubuntu Server 18.04 LTS, have at least 1 GHz of processor power, at least 2 GB of system RAM, and static IP address. LibreTime is undergoing active development, and is currently in ALPHA. Make sure it is working for your needs well before you begin to use it in a live environment. Please review the release notes of the version you are planning on installing. The easiest way to install LibreTime is by cloning the repository using git, and then running the installer. If you don't have git installed already, run sudo apt install git -y Create a folder in your home directory for the download and change to it: cd ~ && mkdir LibreTime && cd LibreTime Clone the repo: git clone https://github.com/LibreTime/libretime.git Run the installer: sudo ./install -fiap After the installer is finished, follow the instructions to proceed to the setup wizard It's recommended to use the -fiap flag to install LibreTime on a fresh server install. This way, all dependencies will be installed and configured by the installer without needing user input. For those who plan to manually configure LibreTime, options for the installer are listed below: -h, --help, -? Display usage information -V, --version Display version information -v, --verbose More output -q, --quiet, --silent No output except errors -f, --force Turn off interactive prompts --distribution=DISTRIBUTION Linux distribution the installation is being run on --release=RELEASE Distribution release -d, --ignore-dependencies Don't install binary dependencies -w, --web-user=WEB_USER Set the apache web user. Defaults to www-data. Only change this setting if you've changed the default apache web user -r, --web-root=WEB_ROOT Set the web root for Airtime files This will copy the Airtime application files, but you will need to give your web user access to the given directory if it is not accessible --web-port=WEB_PORT Set what port the LibreTime interface should run on. -I, --in-place Set the current Airtime directory as the web root Note that you will need to give your web user permission to access this directory if it is not accessible -p, --postgres Create a default postgres user named 'airtime' with password 'airtime' -a, --apache Install apache and deploy a basic configuration for Airtime -i, --icecast Install Icecast 2 and deploy a basic configuration for Airtime --selinux Run restorecon on directories and files that need tagging to allow the WEB_USER access --no-postgres Skips all postgres related install tasks (Useful if you configure postgresql as part of another script / docker builds) --no-rabbitmq Skips all rabbitmq related install tasks. A great tutorial video on how to install LibreTime is here . Ubuntu Package LibreTime maintains amd64 .deb packages for Ubuntu 16.04 (Xenial) and 18.04 (Bionic). These can be downloaded here . Issues with installation of these packages should be reported to the LibretTime/libretime-debian-packaging repository. These are installed by running the following from the command line (the ./ in front of the libretime package is important): sudo apt install icecast2 ./libretime_<version>_amd64.deb <version> is replaced by the version of the package downloaded. Alternative OS installations Installation in Debian 9 and other Linux distributions is possible, but these are less tested. Plans are in the works for .rpm packages, as well as Docker and AWS images. If you would like to try LibreTime in a Docker image, odclive's (unofficial) image is a great place to start. Please note that the install script does not take care to ensure that any packages installed are set up in a secure manner. Please see the chapter on preparing the server for more details on how to set up a secure installation.","title":"Install"},{"location":"install/#installing-libretime","text":"There two methods of installing LibreTime - Source or Ubuntu package .","title":"Installing LibreTime"},{"location":"install/#source","text":"Requirements: LibreTime should generally be installed on a dedicated host running Ubuntu Server 18.04 LTS, have at least 1 GHz of processor power, at least 2 GB of system RAM, and static IP address. LibreTime is undergoing active development, and is currently in ALPHA. Make sure it is working for your needs well before you begin to use it in a live environment. Please review the release notes of the version you are planning on installing. The easiest way to install LibreTime is by cloning the repository using git, and then running the installer. If you don't have git installed already, run sudo apt install git -y Create a folder in your home directory for the download and change to it: cd ~ && mkdir LibreTime && cd LibreTime Clone the repo: git clone https://github.com/LibreTime/libretime.git Run the installer: sudo ./install -fiap After the installer is finished, follow the instructions to proceed to the setup wizard It's recommended to use the -fiap flag to install LibreTime on a fresh server install. This way, all dependencies will be installed and configured by the installer without needing user input. For those who plan to manually configure LibreTime, options for the installer are listed below: -h, --help, -? Display usage information -V, --version Display version information -v, --verbose More output -q, --quiet, --silent No output except errors -f, --force Turn off interactive prompts --distribution=DISTRIBUTION Linux distribution the installation is being run on --release=RELEASE Distribution release -d, --ignore-dependencies Don't install binary dependencies -w, --web-user=WEB_USER Set the apache web user. Defaults to www-data. Only change this setting if you've changed the default apache web user -r, --web-root=WEB_ROOT Set the web root for Airtime files This will copy the Airtime application files, but you will need to give your web user access to the given directory if it is not accessible --web-port=WEB_PORT Set what port the LibreTime interface should run on. -I, --in-place Set the current Airtime directory as the web root Note that you will need to give your web user permission to access this directory if it is not accessible -p, --postgres Create a default postgres user named 'airtime' with password 'airtime' -a, --apache Install apache and deploy a basic configuration for Airtime -i, --icecast Install Icecast 2 and deploy a basic configuration for Airtime --selinux Run restorecon on directories and files that need tagging to allow the WEB_USER access --no-postgres Skips all postgres related install tasks (Useful if you configure postgresql as part of another script / docker builds) --no-rabbitmq Skips all rabbitmq related install tasks. A great tutorial video on how to install LibreTime is here .","title":"Source"},{"location":"install/#ubuntu-package","text":"LibreTime maintains amd64 .deb packages for Ubuntu 16.04 (Xenial) and 18.04 (Bionic). These can be downloaded here . Issues with installation of these packages should be reported to the LibretTime/libretime-debian-packaging repository. These are installed by running the following from the command line (the ./ in front of the libretime package is important): sudo apt install icecast2 ./libretime_<version>_amd64.deb <version> is replaced by the version of the package downloaded.","title":"Ubuntu Package"},{"location":"install/#alternative-os-installations","text":"Installation in Debian 9 and other Linux distributions is possible, but these are less tested. Plans are in the works for .rpm packages, as well as Docker and AWS images. If you would like to try LibreTime in a Docker image, odclive's (unofficial) image is a great place to start. Please note that the install script does not take care to ensure that any packages installed are set up in a secure manner. Please see the chapter on preparing the server for more details on how to set up a secure installation.","title":"Alternative OS installations"},{"location":"testing/","text":"Testing LibreTime MVC The MVC tests are based on PHPUnit and may be found in airtime_mvc/tests . You can run the tests in you working copy as described below or let travis run them for you on pushes. Prepare environment PHPUnit will need to be able to access the database and be allowed to create the libretime_test database. On a clean postgresql install this may be set up as follows. psql -c 'CREATE DATABASE libretime;' -U postgres psql -c \"CREATE USER libretime WITH PASSWORD 'libretime';\" -U postgres psql -c 'GRANT CONNECT ON DATABASE libretime TO libretime;' -U postgres psql -c 'ALTER USER libretime CREATEDB;' -U postgres In this case the libretime database is only used for the initial connection over which the libretime_test database is created. You may need to tweak the exact commands needed to setup postgresql depending on the distro you installed this to. On Ubuntu the above can be acheived as follows. sudo -u postgres psql -c 'CREATE DATABASE libretime;' sudo -u postgres psql -c \"CREATE USER libretime WITH PASSWORD 'libretime';\" sudo -u postgres psql -c 'GRANT CONNECT ON DATABASE libretime TO libretime;' sudo -u postgres psql -c 'ALTER USER libretime CREATEDB;' Install PHPUnit PHPUnit should have already been installed when you ran composer install . If you have not done so, now is the time to do so. Run the tests # run all tests cd airtime_mvc/tests ../../vendor/bin/phpunit # run a subset of tests ../../vendor/bin/phpunit --filter testEditReatingShowInstance Python The python tests are run through nosetest. To prepare your env you should install it. # Debian/Ubuntu apt-get install python-nose # CentOS yum install -y python-nose In most cases you need to install deps before the tests can be run. Airtime Analyzer cd python_apps/airtime_analyzer nosetests","title":"Testing"},{"location":"testing/#testing-libretime","text":"","title":"Testing LibreTime"},{"location":"testing/#mvc","text":"The MVC tests are based on PHPUnit and may be found in airtime_mvc/tests . You can run the tests in you working copy as described below or let travis run them for you on pushes.","title":"MVC"},{"location":"testing/#prepare-environment","text":"PHPUnit will need to be able to access the database and be allowed to create the libretime_test database. On a clean postgresql install this may be set up as follows. psql -c 'CREATE DATABASE libretime;' -U postgres psql -c \"CREATE USER libretime WITH PASSWORD 'libretime';\" -U postgres psql -c 'GRANT CONNECT ON DATABASE libretime TO libretime;' -U postgres psql -c 'ALTER USER libretime CREATEDB;' -U postgres In this case the libretime database is only used for the initial connection over which the libretime_test database is created. You may need to tweak the exact commands needed to setup postgresql depending on the distro you installed this to. On Ubuntu the above can be acheived as follows. sudo -u postgres psql -c 'CREATE DATABASE libretime;' sudo -u postgres psql -c \"CREATE USER libretime WITH PASSWORD 'libretime';\" sudo -u postgres psql -c 'GRANT CONNECT ON DATABASE libretime TO libretime;' sudo -u postgres psql -c 'ALTER USER libretime CREATEDB;'","title":"Prepare environment"},{"location":"testing/#install-phpunit","text":"PHPUnit should have already been installed when you ran composer install . If you have not done so, now is the time to do so.","title":"Install PHPUnit"},{"location":"testing/#run-the-tests","text":"# run all tests cd airtime_mvc/tests ../../vendor/bin/phpunit # run a subset of tests ../../vendor/bin/phpunit --filter testEditReatingShowInstance","title":"Run the tests"},{"location":"testing/#python","text":"The python tests are run through nosetest. To prepare your env you should install it. # Debian/Ubuntu apt-get install python-nose # CentOS yum install -y python-nose In most cases you need to install deps before the tests can be run.","title":"Python"},{"location":"testing/#airtime-analyzer","text":"cd python_apps/airtime_analyzer nosetests","title":"Airtime Analyzer"},{"location":"translating/","text":"While LibreTime is translatable software, it does not yet have a translation interface. Please let us know if you want to contribute to the translation effort so we can prioritize setting such an interface.","title":"Translating"},{"location":"uninstall/","text":"Uninstall LibreTime Hopefully it wasn't something that we did, but if you need to uninstall LibreTime for any reason, cd to the directory of the installer and run sudo ./uninstall and follow the prompts. If allowed, the installer will permanently delete all databases and uploaded content relative to LibreTime. If it was something we did, please open an issue request on our Github page, located here . Until we meet again, best of luck. <3 The LibreTime team","title":"Uninstall LibreTime"},{"location":"uninstall/#uninstall-libretime","text":"Hopefully it wasn't something that we did, but if you need to uninstall LibreTime for any reason, cd to the directory of the installer and run sudo ./uninstall and follow the prompts. If allowed, the installer will permanently delete all databases and uploaded content relative to LibreTime. If it was something we did, please open an issue request on our Github page, located here . Until we meet again, best of luck. <3 The LibreTime team","title":"Uninstall LibreTime"},{"location":"vagrant/","text":"The LibreTime Vagrant install is the fastet way to get LibreTime up and running in a way to hack on its source code or to test it locally. There are two supported providers: libvirt and VirtualBox. Prerequisites Git Vagrant Virtual Box You will need to install VirtualBox and may want to consider installing vagrant-vbguest to update the guest extensions to match your host system on vagrant up. vagrant plugin install vagrant-vbguest Libvirt Setting the libvirt provider up on (Ubuntu and Debian)[#Ubuntu and Debian] is straight forward, using the distribution provided packages. While on (Other Distributions)[#Other Distributions] it can be built from within vagrant. If you try run a libvirt provided box after using a VirtualBox one, you will receive an error: Error while activating network: Call to virNetworkCreate failed: internal error: Network is already in use by interface vboxnet0. This is fixed by stopping virtualbox and re-creating the vagrant box: sudo systemctl stop virtualbox vagrant destroy ubuntu-xenial vagrant up ubuntu-xenial --provider=libvirt Debian and Ubuntu sudo apt install vagrant vagrant-libvirt libvirt-daemon-system vagrant-mutate libvirt-dev sudo usermod -a -G libvirt $USER # Reboot vagrant box add bento/ubuntu-16.04 --provider=virtualbox vagrant mutate bento/ubuntu-16.04 libvirt vagrant up ubuntu-xenial --provider=libvirt Other Distributions You will need to install libvirt and vagrant-mutate and then run vagrant plugin install vagrant-libvirt sudo usermod -a -G libvirt $USER # Reboot vagrant plugin install vagrant-mutate vagrant box fetch bento/ubuntu-16.04 vagrant mutate bento/ubuntu-16.04 libvirt vagrant up ubuntu-xenial --provider=libvirt Starting LibreTime Vagrant To get started you clone the repo and run vagrant up . The command accepts a parameter to change the default provider if you have multiple installed. This can be done by appending --provider=virtualbox or --provider=libvirt as applicable. git clone https://github.com/libretime/libretime.git cd libretime vagrant up ubuntu-xenial If everything works out, you will find LibreTime on port 8080 , icecast on port 8000 and the docs on port 8888 . Once you reach the web setup GUI you can click through it using the default values. To connect to the vagrant machine you can run vagrant ssh ubuntu-xenial in the libretime directory. Alternative OS installations With the above instructions LibreTime is installed on Ubuntu Xenial Xerus. The Vagrant setup offers the option to choose a different operation system according to you needs. OS Command Comment Debian 10 vagrant up debian-buster Install on Debian Buster. Debian 9 vagrant up debian-stretch Install on current Debian Stretch. Needs manual intervention due to Liquidsoap 1.3.3. Ubuntu 18.04 vagrant up ubuntu-bionic Install on current Ubuntu Bionic Beaver. Ubuntu 16.04 vagrant up ubuntu-xenial Install on Ubuntu Xenial Xerus. CentOS vagrant up centos Extremely experimental install on 7.3 with native systemd support and activated SELinux. Needs manual intervention due to Liquidsoap 1.3.3. Troubleshooting If anything fails during the initial provisioning step you can try running vagrant provision to re-run the installer. If you only want to re-run parts of the installer, use --provision-with $step . The supported steps are prepare , install , install-mkdocs and start-mkdocs .","title":"Vagrant"},{"location":"vagrant/#prerequisites","text":"Git Vagrant","title":"Prerequisites"},{"location":"vagrant/#virtual-box","text":"You will need to install VirtualBox and may want to consider installing vagrant-vbguest to update the guest extensions to match your host system on vagrant up. vagrant plugin install vagrant-vbguest","title":"Virtual Box"},{"location":"vagrant/#libvirt","text":"Setting the libvirt provider up on (Ubuntu and Debian)[#Ubuntu and Debian] is straight forward, using the distribution provided packages. While on (Other Distributions)[#Other Distributions] it can be built from within vagrant. If you try run a libvirt provided box after using a VirtualBox one, you will receive an error: Error while activating network: Call to virNetworkCreate failed: internal error: Network is already in use by interface vboxnet0. This is fixed by stopping virtualbox and re-creating the vagrant box: sudo systemctl stop virtualbox vagrant destroy ubuntu-xenial vagrant up ubuntu-xenial --provider=libvirt","title":"Libvirt"},{"location":"vagrant/#debian-and-ubuntu","text":"sudo apt install vagrant vagrant-libvirt libvirt-daemon-system vagrant-mutate libvirt-dev sudo usermod -a -G libvirt $USER # Reboot vagrant box add bento/ubuntu-16.04 --provider=virtualbox vagrant mutate bento/ubuntu-16.04 libvirt vagrant up ubuntu-xenial --provider=libvirt","title":"Debian and Ubuntu"},{"location":"vagrant/#other-distributions","text":"You will need to install libvirt and vagrant-mutate and then run vagrant plugin install vagrant-libvirt sudo usermod -a -G libvirt $USER # Reboot vagrant plugin install vagrant-mutate vagrant box fetch bento/ubuntu-16.04 vagrant mutate bento/ubuntu-16.04 libvirt vagrant up ubuntu-xenial --provider=libvirt","title":"Other Distributions"},{"location":"vagrant/#starting-libretime-vagrant","text":"To get started you clone the repo and run vagrant up . The command accepts a parameter to change the default provider if you have multiple installed. This can be done by appending --provider=virtualbox or --provider=libvirt as applicable. git clone https://github.com/libretime/libretime.git cd libretime vagrant up ubuntu-xenial If everything works out, you will find LibreTime on port 8080 , icecast on port 8000 and the docs on port 8888 . Once you reach the web setup GUI you can click through it using the default values. To connect to the vagrant machine you can run vagrant ssh ubuntu-xenial in the libretime directory.","title":"Starting LibreTime Vagrant"},{"location":"vagrant/#alternative-os-installations","text":"With the above instructions LibreTime is installed on Ubuntu Xenial Xerus. The Vagrant setup offers the option to choose a different operation system according to you needs. OS Command Comment Debian 10 vagrant up debian-buster Install on Debian Buster. Debian 9 vagrant up debian-stretch Install on current Debian Stretch. Needs manual intervention due to Liquidsoap 1.3.3. Ubuntu 18.04 vagrant up ubuntu-bionic Install on current Ubuntu Bionic Beaver. Ubuntu 16.04 vagrant up ubuntu-xenial Install on Ubuntu Xenial Xerus. CentOS vagrant up centos Extremely experimental install on 7.3 with native systemd support and activated SELinux. Needs manual intervention due to Liquidsoap 1.3.3.","title":"Alternative OS installations"},{"location":"vagrant/#troubleshooting","text":"If anything fails during the initial provisioning step you can try running vagrant provision to re-run the installer. If you only want to re-run parts of the installer, use --provision-with $step . The supported steps are prepare , install , install-mkdocs and start-mkdocs .","title":"Troubleshooting"},{"location":"manual/","text":"What is LibreTime? LibreTime is the open broadcast software for scheduling and remote station management. Web browser access to the station's media library, multi-file upload and automatic metadata import features are coupled with a collaborative on-line scheduling calendar and playlist management. The scheduling calendar is managed through an easy-to-use interface and triggers playout with sub-second precision. LibreTime has been intended to provide a solution for a wide range of broadcast projects, from community to public and commercial stations. The scalability of LibreTime allows implementation in a number of scenarios, ranging from an unmanned broadcast unit accessed remotely through the Internet, to a local network of machines accessing a central LibreTime storage system. LibreTime supports the playout of lossy compressed audio files in both MP3 and AAC formats and the open, royalty-free equivalent Ogg Vorbis . It also supports playout of lossless FLAC and WAV format audio files. LibreTime manages the Liquidsoap stream generator at the heart of the system. Liquidsoap generates streams from files in the LibreTime library and any remote input streams that you specify. Available stream output formats include Ogg Vorbis, Ogg Opus, MP3, and AAC. The library is indexed in a PostgreSQL database to enable searching. Live shows can be recorded automatically with Ecasound , using the sound card line input. News editors, DJs and station controllers can use LibreTime to build playlists or smart blocks and manage media files (upload, edit metadata, manage advertisements) at the station or via the Internet. The LibreTime administration interface is designed to work with any web browser, on any desktop or mobile platform with a minimum display size of 1280x768 pixels. LibreTime looks its best on a high definition display of 1920x1080 pixels. The recommended web browsers are Mozilla Firefox 25 or Google Chrome 30 (or later versions). Apple Safari 6 (or later) is also supported. International UTF-8 metadata in media files is supported throughout, and the LibreTime interface can be localized into any language or dialect using the standard GNU gettext utility. Localizations that are installed by default include Austrian, Brazilian, British, Canadian, Chinese, Czech, French, German, Greek, Hungarian, Italian, Korean, Polish, Russian, Spanish and USA. See the chapter Interface localization for details of how to update a translation or add a new localization. The scheduler in LibreTime has a calendar view, organized by months, weeks and days. Here the program editors can schedule playlists and shows for their broadcast station. In some scenarios, the transmitter is situated outside the reach of the broadcaster and all program management has to be maintained through the web interface. Possible reasons for this scenario might be of a pragmatic nature (running many stations from one central office due to limited human resources) or an emergency (running a transmitter in a crisis area without putting staff at risk). LibreTime workflow This typical workflow is intended to clarify the difference between the various components that make up a complete LibreTime system. There are media files on a storage server, which include metadata in their tags (title, creator, genre and so on). This storage server might be accessed directly via studio workstations on the local network. The LibreTime media-monitor keeps track of files being added, renamed, moved or removed from storage, and reads their metadata using the Mutagen library. A PostgreSQL database contains the location of those media files and their metadata. This means you can search for and playlist a set of media files according to the specific metadata that you require, or use a 'smart block' to select the files for you. The database also contains details of specified remote input streams. Pypo, the Python Playout engine, downloads media from the storage up to 24 hours ahead of playout and checks it for average level (with ReplayGain tools) and leading or trailing silence (with Silan). At playout time, the media to be broadcast is sent to Liquidsoap. Liquidsoap takes individual media files and remote input streams, and assembles them into a continuous output stream. This stream can be sent to a sound card (e.g. for a broadcast mixer, on the way to an FM or DAB transmitter) or to a streaming server for IP network distribution, over the LAN, local WiFi or the Internet. You can stream to a sound card and up to three different stream distribution servers with the same LibreTime server, if you wish. Icecast ( http://www.icecast.org/ ) is the default stream distribution server, and there is also support for SHOUTcast ( http://www.shoutcast.com ), but in theory you could stream from Liquidsoap to any online service. If a suitable Liquidsoap output is not available for your streaming service of choice, you can send audio from Liquidsoap to a separate encoding or streaming machine via a sound card or relay stream. Monit monitors the health of pypo, media-monitor and Liquidsoap, and reports the status of these services to LibreTime. RabbitMQ pushes messages from LibreTime to media-monitor and pypo about changes to media files and the playout schedule. LibreTime manages all of these components, and provides an easy, multi-user web interface to the system. It enables your station staff, depending on the permissions you have granted them, to: a) upload media files to the storage server via the Add Media page b) automatically import file metadata into the PostgreSQL database c) search for and download media files, and edit the metadata of individual files, if required, on the Library page d) create and edit playlists of media files or create smart blocks of content based on metadata, edit cue points and fades, and audition them. Playlists and smart blocks are also saved in the database, and can be searched for e) schedule colour-coded broadcast shows (which can contain playlists, smart blocks, pre-recorded complete shows, timed remote input streams, or be live) for specific dates and times on the Calendar page. Regular shows can be scheduled by the day of the week or month, and can be linked to share content f) automatically record live shows at specific times and dates (in 256 kbps Ogg Vorbis format by default) from the sound card input with Ecasound, upload them to the storage server and import them into the database g) manage presenter, staff and guest access to LibreTime, and contact details, via the Manage Users page h) see what is about to be played by Liquidsoap on the Now Playing page, with support for last-minute changes to the content i) upload media files from LibreTime to a third-party hosting service, such as SoundCloud j) audition available output streams from the server using the Listen button k) check the status and resource usage of system components on the Status page l) export the broadcast schedule to external sites via the Schedule API m) see logs on the Playout History page and view graphs on the Listener Stats page n) configure the LibreTime system on the Preferences , Media Folders and Streams pages. Example studio broadcast system In the diagram of an FM radio station below, LibreTime is hosted on a server connected to the local network, with direct soundcard access. Liquidsoap outputs streams to both the transmitter, via the main studio mixer, and streaming media servers. The machine running LibreTime is behind a firewall because it is also connected to the Internet for remote access by media contributors. This enables LibreTime to offer password-protected access to the media library and scheduling from both inside and outside the studio building. Example web broadcast system In the diagram below, LibreTime is hosted on a remote web server, and has no soundcard. There does not need to be a centralised studio, although LibreTime can enable remote studios to stream in to Liquidsoap at authorised times. Optionally, the outgoing Icecast stream can be relayed to a transmitter.","title":"What is LibreTime?"},{"location":"manual/#what-is-libretime","text":"LibreTime is the open broadcast software for scheduling and remote station management. Web browser access to the station's media library, multi-file upload and automatic metadata import features are coupled with a collaborative on-line scheduling calendar and playlist management. The scheduling calendar is managed through an easy-to-use interface and triggers playout with sub-second precision. LibreTime has been intended to provide a solution for a wide range of broadcast projects, from community to public and commercial stations. The scalability of LibreTime allows implementation in a number of scenarios, ranging from an unmanned broadcast unit accessed remotely through the Internet, to a local network of machines accessing a central LibreTime storage system. LibreTime supports the playout of lossy compressed audio files in both MP3 and AAC formats and the open, royalty-free equivalent Ogg Vorbis . It also supports playout of lossless FLAC and WAV format audio files. LibreTime manages the Liquidsoap stream generator at the heart of the system. Liquidsoap generates streams from files in the LibreTime library and any remote input streams that you specify. Available stream output formats include Ogg Vorbis, Ogg Opus, MP3, and AAC. The library is indexed in a PostgreSQL database to enable searching. Live shows can be recorded automatically with Ecasound , using the sound card line input. News editors, DJs and station controllers can use LibreTime to build playlists or smart blocks and manage media files (upload, edit metadata, manage advertisements) at the station or via the Internet. The LibreTime administration interface is designed to work with any web browser, on any desktop or mobile platform with a minimum display size of 1280x768 pixels. LibreTime looks its best on a high definition display of 1920x1080 pixels. The recommended web browsers are Mozilla Firefox 25 or Google Chrome 30 (or later versions). Apple Safari 6 (or later) is also supported. International UTF-8 metadata in media files is supported throughout, and the LibreTime interface can be localized into any language or dialect using the standard GNU gettext utility. Localizations that are installed by default include Austrian, Brazilian, British, Canadian, Chinese, Czech, French, German, Greek, Hungarian, Italian, Korean, Polish, Russian, Spanish and USA. See the chapter Interface localization for details of how to update a translation or add a new localization. The scheduler in LibreTime has a calendar view, organized by months, weeks and days. Here the program editors can schedule playlists and shows for their broadcast station. In some scenarios, the transmitter is situated outside the reach of the broadcaster and all program management has to be maintained through the web interface. Possible reasons for this scenario might be of a pragmatic nature (running many stations from one central office due to limited human resources) or an emergency (running a transmitter in a crisis area without putting staff at risk).","title":"What is LibreTime?"},{"location":"manual/#libretime-workflow","text":"This typical workflow is intended to clarify the difference between the various components that make up a complete LibreTime system. There are media files on a storage server, which include metadata in their tags (title, creator, genre and so on). This storage server might be accessed directly via studio workstations on the local network. The LibreTime media-monitor keeps track of files being added, renamed, moved or removed from storage, and reads their metadata using the Mutagen library. A PostgreSQL database contains the location of those media files and their metadata. This means you can search for and playlist a set of media files according to the specific metadata that you require, or use a 'smart block' to select the files for you. The database also contains details of specified remote input streams. Pypo, the Python Playout engine, downloads media from the storage up to 24 hours ahead of playout and checks it for average level (with ReplayGain tools) and leading or trailing silence (with Silan). At playout time, the media to be broadcast is sent to Liquidsoap. Liquidsoap takes individual media files and remote input streams, and assembles them into a continuous output stream. This stream can be sent to a sound card (e.g. for a broadcast mixer, on the way to an FM or DAB transmitter) or to a streaming server for IP network distribution, over the LAN, local WiFi or the Internet. You can stream to a sound card and up to three different stream distribution servers with the same LibreTime server, if you wish. Icecast ( http://www.icecast.org/ ) is the default stream distribution server, and there is also support for SHOUTcast ( http://www.shoutcast.com ), but in theory you could stream from Liquidsoap to any online service. If a suitable Liquidsoap output is not available for your streaming service of choice, you can send audio from Liquidsoap to a separate encoding or streaming machine via a sound card or relay stream. Monit monitors the health of pypo, media-monitor and Liquidsoap, and reports the status of these services to LibreTime. RabbitMQ pushes messages from LibreTime to media-monitor and pypo about changes to media files and the playout schedule. LibreTime manages all of these components, and provides an easy, multi-user web interface to the system. It enables your station staff, depending on the permissions you have granted them, to: a) upload media files to the storage server via the Add Media page b) automatically import file metadata into the PostgreSQL database c) search for and download media files, and edit the metadata of individual files, if required, on the Library page d) create and edit playlists of media files or create smart blocks of content based on metadata, edit cue points and fades, and audition them. Playlists and smart blocks are also saved in the database, and can be searched for e) schedule colour-coded broadcast shows (which can contain playlists, smart blocks, pre-recorded complete shows, timed remote input streams, or be live) for specific dates and times on the Calendar page. Regular shows can be scheduled by the day of the week or month, and can be linked to share content f) automatically record live shows at specific times and dates (in 256 kbps Ogg Vorbis format by default) from the sound card input with Ecasound, upload them to the storage server and import them into the database g) manage presenter, staff and guest access to LibreTime, and contact details, via the Manage Users page h) see what is about to be played by Liquidsoap on the Now Playing page, with support for last-minute changes to the content i) upload media files from LibreTime to a third-party hosting service, such as SoundCloud j) audition available output streams from the server using the Listen button k) check the status and resource usage of system components on the Status page l) export the broadcast schedule to external sites via the Schedule API m) see logs on the Playout History page and view graphs on the Listener Stats page n) configure the LibreTime system on the Preferences , Media Folders and Streams pages.","title":"LibreTime workflow"},{"location":"manual/#example-studio-broadcast-system","text":"In the diagram of an FM radio station below, LibreTime is hosted on a server connected to the local network, with direct soundcard access. Liquidsoap outputs streams to both the transmitter, via the main studio mixer, and streaming media servers. The machine running LibreTime is behind a firewall because it is also connected to the Internet for remote access by media contributors. This enables LibreTime to offer password-protected access to the media library and scheduling from both inside and outside the studio building.","title":"Example studio broadcast system"},{"location":"manual/#example-web-broadcast-system","text":"In the diagram below, LibreTime is hosted on a remote web server, and has no soundcard. There does not need to be a centralised studio, although LibreTime can enable remote studios to stream in to Liquidsoap at authorised times. Optionally, the outgoing Icecast stream can be relayed to a transmitter.","title":"Example web broadcast system"},{"location":"manual/about-this-manual/","text":"About this manual Copyright \u00a9 2011-2017 Sourcefabric z.\u00fa. Copyright \u00a9 2017 LibreTime Community This manual was written for Sourcefabric by Daniel James, using Booktype Pro. It has been converted to markdown and updated by the LibreTime Community. Please add your comments and contributions at: http://libretime.org/manual/ License All chapters in this manual are licensed with the GNU General Public License version 3 . This documentation is free documentation; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 3. This documentation is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this documentation; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. < http://fsf.org/ > Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \u201cThis License\u201d refers to version 3 of the GNU General Public License. \u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \u201cThe Program\u201d refers to any copyrightable work licensed under this License. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations. To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work. A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program. To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it. \u201cObject code\u201d means any non-source form of a work. A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d. c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \u201ccontributor version\u201d. A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS","title":"About This Manual"},{"location":"manual/about-this-manual/#about-this-manual","text":"Copyright \u00a9 2011-2017 Sourcefabric z.\u00fa. Copyright \u00a9 2017 LibreTime Community This manual was written for Sourcefabric by Daniel James, using Booktype Pro. It has been converted to markdown and updated by the LibreTime Community. Please add your comments and contributions at: http://libretime.org/manual/","title":"About this manual"},{"location":"manual/about-this-manual/#license","text":"All chapters in this manual are licensed with the GNU General Public License version 3 . This documentation is free documentation; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 3. This documentation is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this documentation; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.","title":"License"},{"location":"manual/about-this-manual/#gnu-general-public-license","text":"Version 3, 29 June 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. < http://fsf.org/ > Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU GENERAL PUBLIC LICENSE"},{"location":"manual/about-this-manual/#preamble","text":"The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"manual/about-this-manual/#terms-and-conditions","text":"","title":"TERMS AND CONDITIONS"},{"location":"manual/about-this-manual/#0-definitions","text":"\u201cThis License\u201d refers to version 3 of the GNU General Public License. \u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \u201cThe Program\u201d refers to any copyrightable work licensed under this License. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations. To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work. A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program. To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.","title":"0. Definitions."},{"location":"manual/about-this-manual/#1-source-code","text":"The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it. \u201cObject code\u201d means any non-source form of a work. A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work.","title":"1. Source Code."},{"location":"manual/about-this-manual/#2-basic-permissions","text":"All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.","title":"2. Basic Permissions."},{"location":"manual/about-this-manual/#3-protecting-users-legal-rights-from-anti-circumvention-law","text":"No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law."},{"location":"manual/about-this-manual/#4-conveying-verbatim-copies","text":"You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.","title":"4. Conveying Verbatim Copies."},{"location":"manual/about-this-manual/#5-conveying-modified-source-versions","text":"You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d. c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.","title":"5. Conveying Modified Source Versions."},{"location":"manual/about-this-manual/#6-conveying-non-source-forms","text":"You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.","title":"6. Conveying Non-Source Forms."},{"location":"manual/about-this-manual/#7-additional-terms","text":"\u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.","title":"7. Additional Terms."},{"location":"manual/about-this-manual/#8-termination","text":"You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.","title":"8. Termination."},{"location":"manual/about-this-manual/#9-acceptance-not-required-for-having-copies","text":"You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.","title":"9. Acceptance Not Required for Having Copies."},{"location":"manual/about-this-manual/#10-automatic-licensing-of-downstream-recipients","text":"Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.","title":"10. Automatic Licensing of Downstream Recipients."},{"location":"manual/about-this-manual/#11-patents","text":"A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \u201ccontributor version\u201d. A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.","title":"11. Patents."},{"location":"manual/about-this-manual/#12-no-surrender-of-others-freedom","text":"If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.","title":"12. No Surrender of Others' Freedom."},{"location":"manual/about-this-manual/#13-use-with-the-gnu-affero-general-public-license","text":"Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.","title":"13. Use with the GNU Affero General Public License."},{"location":"manual/about-this-manual/#14-revised-versions-of-this-license","text":"The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.","title":"14. Revised Versions of this License."},{"location":"manual/about-this-manual/#15-disclaimer-of-warranty","text":"THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.","title":"15. Disclaimer of Warranty."},{"location":"manual/about-this-manual/#16-limitation-of-liability","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.","title":"16. Limitation of Liability."},{"location":"manual/about-this-manual/#17-interpretation-of-sections-15-and-16","text":"If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS","title":"17. Interpretation of Sections 15 and 16."},{"location":"manual/airtime-api-authentication/","text":"The LibreTime API enables many types of information about the broadcast schedule and configuration to be retrieved from the LibreTime server. Other than the live-info and week-info data fetched by website widgets (see the chapter Exporting the schedule ), all API requests must be authenticated using the secret API key stored in the file /etc/airtime/api_client.cfg on the LibreTime server. This key is autogenerated during LibreTime installation and should be unique for each server. If you intend to use the LibreTime API across a public network, for security reasons it is highly recommended that all API requests are sent over encrypted https: and that the web server is configured to accept requests to the api/ directory from specific host names or IP addresses only. The format of API requests is: https://libretime.example.com/api/api-action/format/json/api_key/XXXXXX where api-action is the type of request and XXXXXX is the secret API key. Available actions include: on-air-light - return true if the station is on air status - get the status of LibreTime components and resource usage version - returns the version of LibreTime installed get-files-without-silan-value - list files for which silence detection has not yet been performed get-stream-setting - gets the settings of LibreTime output streams get-stream-parameters - gets the parameters of LibreTime output streams For example, using the action get-stream-setting returns the following output for the first configured stream: {\"keyname\":\"s1_type\",\"value\":\"ogg\",\"type\":\"string\"}, {\"keyname\":\"s1_host\",\"value\":\"streaming.example.com\",\"type\":\"string\"}, {\"keyname\":\"s1_port\",\"value\":\"8000\",\"type\":\"integer\"}, {\"keyname\":\"s1_mount\",\"value\":\"airtime_128\",\"type\":\"string\"}, {\"keyname\":\"s1_url\",\"value\":\"http:\\/\\/airtime.sourcefabric.org\",\"type\":\"string\"}, {\"keyname\":\"s1_description\",\"value\":\"Airtime Radio! Stream #1\",\"type\":\"string\"}, {\"keyname\":\"s1_genre\",\"value\":\"Screamo\",\"type\":\"string\"}, which is enough information to construct a player widget dynamically. (s1_url is the station's homepage, not the stream URL). The same information is provided with an s2_ prefix for the second stream, and s3_ prefix for the third stream. Some API requests require the directory ID number to be specified as dir_id including: list-all-files - list files in the specified directory get-files-without-replay-gain - list files in the specified directory for which ReplayGain has not been calculated yet For example, using a request such as: http://libretime.example.com/api/list-all-files/format/json/api_key/XXXXXX/dir_id/1/ returns the full path to each media file in the LibreTime storage directory: {\"files\":[ \"imported\\/1\\/Mark Ronson feat. Saigon\\/Here Comes the Fuzz\\/7-Diduntdidunt-unknown.flac\", \"imported\\/1\\/Jimi Tenor & Tony Allen\\/Inspiration Information\\/3-Selfish Gene-128kbps.mp3\", \"]}","title":"LibreTime API Authentication"},{"location":"manual/backing-up-the-server/","text":"The following shell commands can be used for database backup and restore on a running PostgreSQL server in an LibreTime system. You can dump the entire database to a zipped file with the combination of the pg_dumpall command and gzip . The pg_dumpall command is executed as the user postgres , by using the sudo command and the -u switch. It is separated from the gzip command with the pipe symbol. sudo -u postgres pg_dumpall | gzip -c > libretime-backup.gz This command can be automated to run on a regular basis using the standard cron tool on your server. When restoring a production database on a cleanly installed LibreTime system, it may be necessary to drop the empty database that was created during the new installation, by using the dropdb command. Again, this command is executed with sudo as the user postgres : sudo -u postgres dropdb airtime This dropdb command above is necessary to avoid 'already exists' errors on table creation when overwriting an empty LibreTime database in the next step. These errors might prevent some data from being restored, such as user account data. To restore, first unzip the backup file with gunzip , then use the psql command as the postgres user: gunzip libretime-backup.gz sudo -u postgres psql -f libretime-backup You should now be able to log in to the LibreTime web interface in the usual way. For safety reasons, your regular database backups should be kept in a directory which is backed up by your storage backup tool of choice; for example, the /srv/airtime/database_backups directory. This should ensure that a storage restore can be made along with a matching and complete version of the LibreTime database from the day that the storage backup was made. Storage backup Backing up the LibreTime database with pg_dumpall will not back up the LibreTime media storage server, which is likely to need a great deal more backup space. Creating a compressed file from hundreds of gigabytes of storage server contents is likely to take a very long time, and may have little benefit for the amount of CPU power used, if the media files are already stored in a highly compressed format. It is also impractical to copy very large backup files across the network on a daily basis. Instead, it is preferable to use an incremental backup technique to synchronize the production LibreTime server storage with a backup server each day or night. If the backup server also contains an LibreTime installation, it should be possible to switch playout to this second machine relatively quickly, in case of a hardware failure or other emergency on the production server. A standard incremental backup tool on GNU/Linux servers is rsync (http://rsync.samba.org/) ) which can be installed using the package manager of your GNU/Linux distribution. However, incremental backup alone cannot help in the scenario where a file which later proves to be important has been deleted by an administrator. For backups that can be rolled back to restore from an earlier date than the current backup, the tool rdiff-backup (http://www.nongnu.org/rdiff-backup/ ) can be deployed.","title":"Backing Up the Server"},{"location":"manual/backing-up-the-server/#storage-backup","text":"Backing up the LibreTime database with pg_dumpall will not back up the LibreTime media storage server, which is likely to need a great deal more backup space. Creating a compressed file from hundreds of gigabytes of storage server contents is likely to take a very long time, and may have little benefit for the amount of CPU power used, if the media files are already stored in a highly compressed format. It is also impractical to copy very large backup files across the network on a daily basis. Instead, it is preferable to use an incremental backup technique to synchronize the production LibreTime server storage with a backup server each day or night. If the backup server also contains an LibreTime installation, it should be possible to switch playout to this second machine relatively quickly, in case of a hardware failure or other emergency on the production server. A standard incremental backup tool on GNU/Linux servers is rsync (http://rsync.samba.org/) ) which can be installed using the package manager of your GNU/Linux distribution. However, incremental backup alone cannot help in the scenario where a file which later proves to be important has been deleted by an administrator. For backups that can be rolled back to restore from an earlier date than the current backup, the tool rdiff-backup (http://www.nongnu.org/rdiff-backup/ ) can be deployed.","title":"Storage backup"},{"location":"manual/calendar/","text":"The Calendar page of the LibreTime administration interface has three views: day , week and month , which can be switched using the grey buttons in the top right corner. By default, the month view is shown, with today's date highlighted by a pale grey background. In the top left corner of the page, you can go back or forward through the Calendar by clicking on the buttons which have a small grey triangle in a white circle. Click the today button to jump to today's date in the current view. (The today button will be greyed out if you are already viewing that date). In the day or week views, there is also a drop-down menu which allows you to set the resolution displayed for the calendar, ranging from one minute per row to sixty minutes per row. Adding a show Only Admins and Program Managers can use this feature. To add a new show to the Calendar, click the + New Show button in the top left corner of the page, or click on any future row or box in the Calendar which is empty. Either of these actions opens the Add this show box, which has seven sections, arranged vertically: What , Autoloading Playlist , When , Live Stream Input , Record & Rebroadcast , Who , and Style . Click the small orange triangle to the left of the section name if you wish to minimize or maximize it. What In the What box, enter the Name , public website URL , Genre and Description for the show that you are creating. Autoloading Playlist In this section, you can select a playlist that will be used for this show. The playlist must already be defined in your library. Auto Schedule Playlist needs to be checked for Select Playlist and Repeat AutoPlaylist Until Show is Full to be visible. When Next, in the When section, if you clicked on a date in the Calendar this should already be entered in the Date/Time Start field. To set another date for the show, click on the date in the Date/Time Start field and select the date that you require from the small pop-up calendar which will appear. Click on the adjacent time field to set the start time for the show, with the pop-up Hour and Minute box. The Minute values in the pop-up time boxes are rounded to the nearest five minutes. You can also adjust the times manually by clicking into the fields and typing. Repeat the process to set the Date/Time End fields. The Start Time can be Now or In the Future . A show that starts now, will start at the time save is pressed, while a future show will start at the time set. The Duration of the show will be displayed automatically, based on the start and end times you have set. By default, the Timezone of the show start and end times will be the timezone of the station, as set on the Preferences page on the System menu. You can specify an alternative time zone using the drop-down menu, if you wish. The time zone displayed in the Calendar when you log in depends on your personal settings. See 'Updating your own account' in the chapter Users for more details. LibreTime will only allow you to enter valid times for shows. If you attempt to schedule show times which would be impossible, by ending the show before it begins, LibreTime will highlight the error with a pink background. To schedule a regular show, check the Repeats? box, which will make a new section of the dialog appear. Optionally, click the Link: box to automatically schedule the same content in the repeated shows as in the original show. Then select either weekly , every 2 weeks , every 3 weeks , every 4 weeks or monthly from the Repeat Type drop-down menu. If you have selected a weekly option, check the boxes for the days of the week that you want to schedule the regular show on. If you have selected monthly , you have the option to Repeat By: day of the month (for example the 9th of each month) or day of the week (for example the second Wednesday of each month). Uncheck the No End? box and set the Date End for the regular show to finish, or leave the No End? box checked to schedule the show indefinitely. Live Stream Input The Live Stream Input section can be used to enable live input streams during the show, and also to configure authentication for them. If you check the Use LibreTime Authentication box, the DJs (presenters) of the show will be able to connect a live stream to LibreTime's Show Source Mount Point using their login name and password. See the chapter Stream Settings for details. If you check the Use Custom Authentication box instead, you can set a one-time username and password pair for live stream input to the show. For example, you may wish to create an authenticated live stream input for a particular remote news reporter, without providing any further access to your LibreTime server for that person. A reminder of the connection Host , Port and Mount for the live input stream to use is shown at the end of the Live Stream Input section. Record & Rebroadcast The Record & Rebroadcast section is currently not working, and so has been removed from the web interface. If this feature is important to you, please search for relevant issues in the LibreTime github repository and help us make it happen! Who In the Who section, type the first few letters of the name of the show's DJ (presenter) in the Search Users field to select a name from the LibreTime database, or check one of the DJs boxes in the vertical list below. This association of a DJ name with a particular show enables that presenter to add playout media to the show, and also to connect a live Show Source input stream (if that has been enabled), so it is important to get the DJ's name right. Style Show colours in the Calendar are set automatically, based on the Name of the show, so that individual shows can be easily identified in the Calendar . If you wish, you can select a Background Colour and Text Colour manually by clicking the boxes in the Style section. Click the coloured circle icon in the lower right corner to close this pop-up window. Optionally, you can upload a Show Logo by clicking the Browse button. Finally, click the Add this show button at the top or bottom of the box. The new show will now be displayed in the Calendar , with a regular slot if you have chosen to schedule one. Editing a show Show configuration and metadata can be changed at any time, except for Date/Time Start and Record from Line In? options, which are fixed after broadcast of that show commences. Click the show in the Calendar, and select Edit Show from the pop-up context menu. This opens the Update Show box, which is almost exactly the same as the Add this Show box. Click the + Update show button at the top or bottom of the box when you are done. Episodes of repeating shows also have an Instance Description field in which you can add details for that particular episode. Click the episode in the Calendar, click Edit on the pop-up menu, then click Edit this instance . After entering an Instance Description, click the + Update show button. Alternatively, individual shows can be clicked on and dragged to new days and times in the calendar. However, LibreTime will not allow you to drag a future show into the past, or drag and drop instances of a repeated show. In the Day and Week views, show length can be adjusted by clicking on the lower edge of the show box, and dragging the edge of the box upwards or downwards. The new show length is calculated automatically. Adding content to a show To add content to a show, click the show in any view on the Calendar, and select Schedule Tracks from the pop-up menu. Shows that do not yet contain any scheduled content are marked with a red exclamation mark icon, to the right of the show start and end times in the top bar. Shows partially filled with content have a yellow exclamation mark icon. During playout of the show, a green play icon will also be shown in the top bar. The Schedule Tracks action opens a window with the name of the show. Like when using the Now Playing page, you can search for content items and add them to the show schedule on the right side of the page. Refer to the Now Playing chapter for details. When your show has all the required content, click the OK button in the bottom right corner to close the window. Back in the Calendar , click the show and select View from the pop-up menu to view a list of content now included in the show. The Contents of Show window is a read-only interface featuring an orange bar which indicates how much media has been added to the show. Click the OK button in the bottom right corner, or the white x icon in the top right corner, to close the window. Removing content from a show To remove an individual item from a show, click on the show in the Calendar , and select Schedule Tracks from the pop-up menu. In the window which opens, click any item you wish to remove from the show, then click Delete on the pop-up menu, or check the box in the item's row then click the Remove icon at the top of the table. To remove all files and playlists from a show, click on the show in the Calendar , and select Clear Show from the pop-up menu. Deleting a forthcoming show To delete one forthcoming instance of a repeating show, click on the show in the Calendar , and select Delete , then Delete Instance from the pop-up menu. If you wish to delete all future instances of a repeating show, select Delete Instance and All Following from the pop-up menu. You cannot delete or remove content from shows that have already played out. These shows have only one option on the pop-up menu, which is View . Cancelling playout If you wish to cancel playout of a show while it is running, click on the show in the Calendar and select Cancel Show from the pop-up menu. LibreTime will ask you if you are sure about this action, as it cannot be undone.","title":"Calendar"},{"location":"manual/calendar/#adding-a-show","text":"Only Admins and Program Managers can use this feature. To add a new show to the Calendar, click the + New Show button in the top left corner of the page, or click on any future row or box in the Calendar which is empty. Either of these actions opens the Add this show box, which has seven sections, arranged vertically: What , Autoloading Playlist , When , Live Stream Input , Record & Rebroadcast , Who , and Style . Click the small orange triangle to the left of the section name if you wish to minimize or maximize it.","title":"Adding a show"},{"location":"manual/calendar/#what","text":"In the What box, enter the Name , public website URL , Genre and Description for the show that you are creating.","title":"What"},{"location":"manual/calendar/#autoloading-playlist","text":"In this section, you can select a playlist that will be used for this show. The playlist must already be defined in your library. Auto Schedule Playlist needs to be checked for Select Playlist and Repeat AutoPlaylist Until Show is Full to be visible.","title":"Autoloading Playlist"},{"location":"manual/calendar/#when","text":"Next, in the When section, if you clicked on a date in the Calendar this should already be entered in the Date/Time Start field. To set another date for the show, click on the date in the Date/Time Start field and select the date that you require from the small pop-up calendar which will appear. Click on the adjacent time field to set the start time for the show, with the pop-up Hour and Minute box. The Minute values in the pop-up time boxes are rounded to the nearest five minutes. You can also adjust the times manually by clicking into the fields and typing. Repeat the process to set the Date/Time End fields. The Start Time can be Now or In the Future . A show that starts now, will start at the time save is pressed, while a future show will start at the time set. The Duration of the show will be displayed automatically, based on the start and end times you have set. By default, the Timezone of the show start and end times will be the timezone of the station, as set on the Preferences page on the System menu. You can specify an alternative time zone using the drop-down menu, if you wish. The time zone displayed in the Calendar when you log in depends on your personal settings. See 'Updating your own account' in the chapter Users for more details. LibreTime will only allow you to enter valid times for shows. If you attempt to schedule show times which would be impossible, by ending the show before it begins, LibreTime will highlight the error with a pink background. To schedule a regular show, check the Repeats? box, which will make a new section of the dialog appear. Optionally, click the Link: box to automatically schedule the same content in the repeated shows as in the original show. Then select either weekly , every 2 weeks , every 3 weeks , every 4 weeks or monthly from the Repeat Type drop-down menu. If you have selected a weekly option, check the boxes for the days of the week that you want to schedule the regular show on. If you have selected monthly , you have the option to Repeat By: day of the month (for example the 9th of each month) or day of the week (for example the second Wednesday of each month). Uncheck the No End? box and set the Date End for the regular show to finish, or leave the No End? box checked to schedule the show indefinitely.","title":"When"},{"location":"manual/calendar/#live-stream-input","text":"The Live Stream Input section can be used to enable live input streams during the show, and also to configure authentication for them. If you check the Use LibreTime Authentication box, the DJs (presenters) of the show will be able to connect a live stream to LibreTime's Show Source Mount Point using their login name and password. See the chapter Stream Settings for details. If you check the Use Custom Authentication box instead, you can set a one-time username and password pair for live stream input to the show. For example, you may wish to create an authenticated live stream input for a particular remote news reporter, without providing any further access to your LibreTime server for that person. A reminder of the connection Host , Port and Mount for the live input stream to use is shown at the end of the Live Stream Input section.","title":"Live Stream Input"},{"location":"manual/calendar/#record-rebroadcast","text":"The Record & Rebroadcast section is currently not working, and so has been removed from the web interface. If this feature is important to you, please search for relevant issues in the LibreTime github repository and help us make it happen!","title":"Record &amp; Rebroadcast"},{"location":"manual/calendar/#who","text":"In the Who section, type the first few letters of the name of the show's DJ (presenter) in the Search Users field to select a name from the LibreTime database, or check one of the DJs boxes in the vertical list below. This association of a DJ name with a particular show enables that presenter to add playout media to the show, and also to connect a live Show Source input stream (if that has been enabled), so it is important to get the DJ's name right.","title":"Who"},{"location":"manual/calendar/#style","text":"Show colours in the Calendar are set automatically, based on the Name of the show, so that individual shows can be easily identified in the Calendar . If you wish, you can select a Background Colour and Text Colour manually by clicking the boxes in the Style section. Click the coloured circle icon in the lower right corner to close this pop-up window. Optionally, you can upload a Show Logo by clicking the Browse button. Finally, click the Add this show button at the top or bottom of the box. The new show will now be displayed in the Calendar , with a regular slot if you have chosen to schedule one.","title":"Style"},{"location":"manual/calendar/#editing-a-show","text":"Show configuration and metadata can be changed at any time, except for Date/Time Start and Record from Line In? options, which are fixed after broadcast of that show commences. Click the show in the Calendar, and select Edit Show from the pop-up context menu. This opens the Update Show box, which is almost exactly the same as the Add this Show box. Click the + Update show button at the top or bottom of the box when you are done. Episodes of repeating shows also have an Instance Description field in which you can add details for that particular episode. Click the episode in the Calendar, click Edit on the pop-up menu, then click Edit this instance . After entering an Instance Description, click the + Update show button. Alternatively, individual shows can be clicked on and dragged to new days and times in the calendar. However, LibreTime will not allow you to drag a future show into the past, or drag and drop instances of a repeated show. In the Day and Week views, show length can be adjusted by clicking on the lower edge of the show box, and dragging the edge of the box upwards or downwards. The new show length is calculated automatically.","title":"Editing a show"},{"location":"manual/calendar/#adding-content-to-a-show","text":"To add content to a show, click the show in any view on the Calendar, and select Schedule Tracks from the pop-up menu. Shows that do not yet contain any scheduled content are marked with a red exclamation mark icon, to the right of the show start and end times in the top bar. Shows partially filled with content have a yellow exclamation mark icon. During playout of the show, a green play icon will also be shown in the top bar. The Schedule Tracks action opens a window with the name of the show. Like when using the Now Playing page, you can search for content items and add them to the show schedule on the right side of the page. Refer to the Now Playing chapter for details. When your show has all the required content, click the OK button in the bottom right corner to close the window. Back in the Calendar , click the show and select View from the pop-up menu to view a list of content now included in the show. The Contents of Show window is a read-only interface featuring an orange bar which indicates how much media has been added to the show. Click the OK button in the bottom right corner, or the white x icon in the top right corner, to close the window.","title":"Adding content to a show"},{"location":"manual/calendar/#removing-content-from-a-show","text":"To remove an individual item from a show, click on the show in the Calendar , and select Schedule Tracks from the pop-up menu. In the window which opens, click any item you wish to remove from the show, then click Delete on the pop-up menu, or check the box in the item's row then click the Remove icon at the top of the table. To remove all files and playlists from a show, click on the show in the Calendar , and select Clear Show from the pop-up menu.","title":"Removing content from a show"},{"location":"manual/calendar/#deleting-a-forthcoming-show","text":"To delete one forthcoming instance of a repeating show, click on the show in the Calendar , and select Delete , then Delete Instance from the pop-up menu. If you wish to delete all future instances of a repeating show, select Delete Instance and All Following from the pop-up menu. You cannot delete or remove content from shows that have already played out. These shows have only one option on the pop-up menu, which is View .","title":"Deleting a forthcoming show"},{"location":"manual/calendar/#cancelling-playout","text":"If you wish to cancel playout of a show while it is running, click on the show in the Calendar and select Cancel Show from the pop-up menu. LibreTime will ask you if you are sure about this action, as it cannot be undone.","title":"Cancelling playout"},{"location":"manual/dashboard/","text":"Dashboard The Dashboard is divided into two sections a Library section divided between Tracks , Playlists , Smart Blocks , Webstreams , and Podcasts , with the Scheduled Shows dialog on the right. This page provides an overview of the right-hand interface. Check the links to see information about the other sections which provide the content that can be scheduled. The Scheduled Shows page provides a view of the content your station is will playout, or has already played out, which defaults to showing the 3 hours ahead. This page also enables you to make last-minute changes to running shows. If you've only just installed LibreTime, there might not be any content shown yet. Click the calendar and clock icons above the table to change the date and time range, then click the Find Shows button (with the magnifying glass icon) to the right. To display the content of a particular show, click Filter by Show and select the name of the show from the drop-down menu which will appear. On the left side of the page, the Start and End times, Duration and Title of each content item are shown. On the right, Creator , Album , Cue or Fade times and Mime type (file format) can also be shown. This information can help you to prepare voice tracks for insertion into the show, including time checks if you wish. Putting current time information i to voice tracks describing specific content can, of course, limit the re-usability of those voice tracks, unless you always broadcast a particular item at the same time of day. Click the Show/hide columns button on the right to configure the metadata displayed, by checking the boxes in the pop-up window. The row for the currently playing item is displayed with a bright green background. Any underbooked shows (shows with insufficient content to fill the time allowed) are displayed with a row indicating the length of the underbooking in minutes and seconds. These rows contain a red exclamation mark in the first column, and have a pink background. Removing content from a running show If a show is overbooked, which means the total playout duration is longer than the time allowed for the show, a brown row indicates that the item will be faded out when the show ends. A red row indicates that the item will not be played at all. The length of the overbooking is shown in minutes and seconds in the last row of the show. To remove the extra items from the end of an overbooked show, click the Scissors button at the top left of the table. Alternatively, check the boxes for items which have not yet completed playout, and click the Trashcan button, to the right of the Scissors, to remove them from the schedule. If you remove the currently playing item, playout will skip to the next item in the show automatically, so you should make sure you have enough items remaining in the show to avoid dead air. If you have a long schedule displayed, and you wish to skip to the currently playing item, click the button with the end arrow icon, to the right of the Trashcan . To cancel the current show completely, click the red button to the right again. A pop-up window will ask you to confirm the cancellation, as this action cannot be undone. Items which are no longer available have an exclamation mark icon in the second column. This may happen for media files which were part of previous shows, and were removed from LibreTime's library (main storage or watched folders) subsequently. Items which are included in forthcoming shows cannot be removed from the Library via the LibreTime interface. Adding content to a running show After you have found the items that you want using the search tools, you can then drag and drop them from the library table on the left side of the page into the shows on the right side, including the current playing show. If the current show has nothing playing out at the time, the new item will begin playing immediately. This manual triggering of playout can be used as a live assist technique, in which the LibreTime server's soundcard output is mixed with other sources such as microphones or telephone hybrids on its way to a transmitter, or a separate stream encoder. For instance, a live show's host may not wish to cut off a studio discussion in order to play music at a fixed time. You can also select multiple items using the Select menu button, just beneath the simple search field, which has the options to Select this page of search results, Deselect this page and Deselect all . Alternatively, use the checkboxes on the left side of the library table to select specific items. Then drag one of the items into the show to add all of the selected items, or click the Add to selected show button, which has a plus icon. If you wish, you can also use the Trashcan button to permanently remove items from LibreTime's library. Only admin users have permission to delete all items. To insert checkbox selected items at a specific time in the show schedule, click one of the songs in the schedule table. Then click the Add to selected show button in the library table. This will insert the library songs after the selected scheduled song. To add a single item at the insertion point, double-click on it in the library. There is no need to select or drag the item first. Right-clicking on a song in the schedule table will show a pop-up. This pop-up menu also enables you to audition the entire show in advance of playout, or remove the item that was clicked on from the show. Multiple insertion points can be enabled, so that the same item is inserted into the schedule at different times. For example, you may wish to play a news report every hour, or a station ident after every five music files.","title":"Dashboard"},{"location":"manual/dashboard/#dashboard","text":"The Dashboard is divided into two sections a Library section divided between Tracks , Playlists , Smart Blocks , Webstreams , and Podcasts , with the Scheduled Shows dialog on the right. This page provides an overview of the right-hand interface. Check the links to see information about the other sections which provide the content that can be scheduled. The Scheduled Shows page provides a view of the content your station is will playout, or has already played out, which defaults to showing the 3 hours ahead. This page also enables you to make last-minute changes to running shows. If you've only just installed LibreTime, there might not be any content shown yet. Click the calendar and clock icons above the table to change the date and time range, then click the Find Shows button (with the magnifying glass icon) to the right. To display the content of a particular show, click Filter by Show and select the name of the show from the drop-down menu which will appear. On the left side of the page, the Start and End times, Duration and Title of each content item are shown. On the right, Creator , Album , Cue or Fade times and Mime type (file format) can also be shown. This information can help you to prepare voice tracks for insertion into the show, including time checks if you wish. Putting current time information i to voice tracks describing specific content can, of course, limit the re-usability of those voice tracks, unless you always broadcast a particular item at the same time of day. Click the Show/hide columns button on the right to configure the metadata displayed, by checking the boxes in the pop-up window. The row for the currently playing item is displayed with a bright green background. Any underbooked shows (shows with insufficient content to fill the time allowed) are displayed with a row indicating the length of the underbooking in minutes and seconds. These rows contain a red exclamation mark in the first column, and have a pink background.","title":"Dashboard"},{"location":"manual/dashboard/#removing-content-from-a-running-show","text":"If a show is overbooked, which means the total playout duration is longer than the time allowed for the show, a brown row indicates that the item will be faded out when the show ends. A red row indicates that the item will not be played at all. The length of the overbooking is shown in minutes and seconds in the last row of the show. To remove the extra items from the end of an overbooked show, click the Scissors button at the top left of the table. Alternatively, check the boxes for items which have not yet completed playout, and click the Trashcan button, to the right of the Scissors, to remove them from the schedule. If you remove the currently playing item, playout will skip to the next item in the show automatically, so you should make sure you have enough items remaining in the show to avoid dead air. If you have a long schedule displayed, and you wish to skip to the currently playing item, click the button with the end arrow icon, to the right of the Trashcan . To cancel the current show completely, click the red button to the right again. A pop-up window will ask you to confirm the cancellation, as this action cannot be undone. Items which are no longer available have an exclamation mark icon in the second column. This may happen for media files which were part of previous shows, and were removed from LibreTime's library (main storage or watched folders) subsequently. Items which are included in forthcoming shows cannot be removed from the Library via the LibreTime interface.","title":"Removing content from a running show"},{"location":"manual/dashboard/#adding-content-to-a-running-show","text":"After you have found the items that you want using the search tools, you can then drag and drop them from the library table on the left side of the page into the shows on the right side, including the current playing show. If the current show has nothing playing out at the time, the new item will begin playing immediately. This manual triggering of playout can be used as a live assist technique, in which the LibreTime server's soundcard output is mixed with other sources such as microphones or telephone hybrids on its way to a transmitter, or a separate stream encoder. For instance, a live show's host may not wish to cut off a studio discussion in order to play music at a fixed time. You can also select multiple items using the Select menu button, just beneath the simple search field, which has the options to Select this page of search results, Deselect this page and Deselect all . Alternatively, use the checkboxes on the left side of the library table to select specific items. Then drag one of the items into the show to add all of the selected items, or click the Add to selected show button, which has a plus icon. If you wish, you can also use the Trashcan button to permanently remove items from LibreTime's library. Only admin users have permission to delete all items. To insert checkbox selected items at a specific time in the show schedule, click one of the songs in the schedule table. Then click the Add to selected show button in the library table. This will insert the library songs after the selected scheduled song. To add a single item at the insertion point, double-click on it in the library. There is no need to select or drag the item first. Right-clicking on a song in the schedule table will show a pop-up. This pop-up menu also enables you to audition the entire show in advance of playout, or remove the item that was clicked on from the show. Multiple insertion points can be enabled, so that the same item is inserted into the schedule at different times. For example, you may wish to play a news report every hour, or a station ident after every five music files.","title":"Adding content to a running show"},{"location":"manual/exporting-the-schedule/","text":"LibreTime has a feature which enables your station's show and schedule information to be displayed on remote websites. This feature is included in LibreTime because you would not usually invite the general public to access your LibreTime server directly. If you had very large numbers of people requesting data from the LibreTime server at once, the burst of network traffic might overload the server, potentially disrupting your broadcasts. If carried out maliciously, this network overload is known as a denial of service attack . Instead, your public-facing web server can retrieve the schedule information from the LibreTime API. This information can then be displayed on your broadcast station or affiliate websites by a content management system, such as Sourcefabric's Newscoop ( http://newscoop.sourcefabric.org/ ). It can be presented using Javascript widgets and styled with CSS, in any format that you require. The Broadcaster theme for Newscoop ( https://github.com/newscoop/theme-Broadcaster ) integrates these widgets with ready-to-use styles. There are two kinds of information that can be retrieved remotely from the LibreTime API without authentication; the metadata for the current show plus the following show (live-info), or the schedule for the current week and the week ahead (week-info). The week-info metadata includes show names, times, and individual show URLs on your public website. That way, the audience for your station can click through from the schedule information to find out more about a particular show, or download a previous show recording that you might have made available. If your LibreTime server was accessible at https://libretime.example.com the live show information could be retrieved by your web server using this URL: https://libretime.example.com/api/live-info/?callback The comma-separated text metadata returned to your web server might be something like this: ({\"env\":\"production\", \"schedulerTime\":\"2013-07-03 14:07:31\", \"previous\":{\"name\":\"Earth, Wind &amp; Fire - Boogie Wonderland\", \"starts\":\"2013-07-01 22:53:00\", \"ends\":\"2013-07-01 22:55:00\", \"type\":\"track\"}, \"current\":{\"name\":\"Deodato - Also Sprach Zarathustra\", \"starts\":\"2013-07-03 13:07:06\", \"ends\":\"2013-07-03 13:16:05\", \"media_item_played\":true, \"record\":0, \"type\":\"track\"}, \"next\":{\"id\":8, \"instance_id\":10, \"name\":\"Rock Show\", \"url\":\"https:\\/\\/rock.example.com\\/\", \"start_timestamp\":\"2013-07-03 14:00:00\", \"end_timestamp\":\"2013-07-03 15:00:00\", \"starts\":\"2013-07-03 14:00:00\", \"ends\":\"2013-07-03 15:00:00\", \"record\":0, \"type\":\"show\"}, \"currentShow\":[{\"start_timestamp\":\"2013-07-03 14:07:00\", \"0\":\"2013-07-03 13:07:00\", \"end_timestamp\":\"2013-07-03 15:00:00\", \"1\":\"2013-07-03 14:00:00\", \"name\":\"Funk Show\", \"2\":\"Funk Show\", \"id\":7, \"3\":7, \"instance_id\":9,\"4\":9, \"record\":0, \"5\":0, \"url\":\"https:\\/\\/funk.example.com\\/\", \"6\":\"\", \"starts\":\"2013-07-03 14:07:00\", \"7\":\"2013-07-03 13:07:00\", \"ends\":\"2013-07-03 15:00:00\", \"8\":\"2013-07-03 14:00:00\"}], \"nextShow\":[{\"id\":8, \"instance_id\":10, \"name\":\"Rock Show\", \"url\":\"https:\\/\\/rock.example.com\\/\", \"start_timestamp\":\"2013-07-03 15:00:00\", \"end_timestamp\":\"2013-07-03 16:00:00\", \"starts\":\"2013-07-03 15:00:00\", \"ends\":\"2013-07-03 16:00:00\", \"record\":0, \"type\":\"show\"}], \"timezone\":\"BST\", \"timezoneOffset\":\"3600\", \"AIRTIME_API_VERSION\":\"1.1\"}) The information for the current week's schedule could be retrieved using the URL: https://libretime.example.com/api/week-info/?callback In this case, the metadata returned would be in a different format from the above example, something like the following. To keep the example short, this particular schedule export only contains four shows on a Monday. A full weekly schedule export would contain a great deal more text. ({\"monday\":[ {\"start_timestamp\":\"2013-07-01 12:05:00\", \"end_timestamp\":\"2013-07-01 13:00:00\", \"name\":\"Elvis Show\", \"id\":2, \"instance_id\":2, \"record\":0, \"url\":\"https:\\/\\/elvis.example.com\\/\", \"starts\":\"2013-07-01 12:05:00\", \"ends\":\"2013-07-01 13:00:00\"}, {\"start_timestamp\":\"2013-07-01 13:00:00\", \"end_timestamp\":\"2013-07-01 14:00:00\", \"name\":\"News\", \"id\":3, \"instance_id\":4, \"record\":0, \"url\":\"https:\\/\\/news.example.com\\/\", \"starts\":\"2013-07-01 13:00:00\", \"ends\":\"2013-07-01 14:00:00\"}, {\"start_timestamp\":\"2013-07-01 14:00:00\", \"end_timestamp\":\"2013-07-01 15:00:00\", \"name\":\"Funk Show\", \"id\":4, \"instance_id\":6, \"record\":0, \"url\":\"https:\\/\\/funk.example.com\\/\", \"starts\":\"2013-07-01 14:00:00\", \"ends\":\"2013-07-01 15:00:00\"}, {\"start_timestamp\":\"2013-07-01 15:00:00\", \"end_timestamp\":\"2013-07-01 17:30:00\", \"name\":\"Rock Show\", \"id\":5, \"instance_id\":7, \"record\":0, \"url\":\"https:\\/\\/rock.example.com\\/\", \"starts\":\"2013-07-01 15:00:00\", \"ends\":\"2013-07-01 17:30:00\"}, ], \"tuesday\":[], \"wednesday\":[], \"thursday\":[], \"friday\":[], \"saturday\":[], \"sunday\":[], \"AIRTIME_API_VERSION\":\"1.1\"}) If you see the message You are not allowed to access this resource when attempting to display schedule information in your web browser, log in to the LibreTime administration interface, click System in the main menu, then Preferences . Set Allow Remote Websites To Access \"Schedule\" Info? to Enabled , click the Save button, then refresh the browser window opened on the schedule export URL. If you do not wish to make schedule information available to the public, set this option to Disabled instead. Caching schedule information If the LibreTime server is behind a firewall, or you want to protect the LibreTime server from large numbers of schedule requests, you may wish to cache the schedule information on a public-facing or intermediate server. You can then create a firewall rule that only allows the schedule server to connect to the LibreTime server, in addition to any remote users of the LibreTime web interface. Your system administrator can set up schedule caching on a standard Apache and PHP enabled web server with the curl program installed, using the following steps: Create a shell script on the schedule server (schedule.example.com) that polls the remote LibreTime server (libretime.example.com), and writes the metadata returned into a pair of local temporary files: sudo nano /usr/local/bin/libretime-schedule.sh The content of this file should be like the following script, replacing libretime.example.com with the name of your LibreTime server: #!/bin/sh curl -s \"https://libretime.example.com/api/live-info/?callback=***\" > /tmp/live-info curl -s \"https://libretime.example.com/api/week-info/?callback=***\" > /tmp/week-info Make the script executable: sudo chmod +x /usr/local/bin/libretime-schedule.sh Create an Apache VirtualHost configuration for the schedule server: sudo nano /etc/apache2/sites-available/schedule containing a definition like the following, replacing schedule.example.com with the name of your schedule server: <VirtualHost *:80> ServerName schedule.example.com DocumentRoot /var/www/schedule/ </VirtualHost> In the schedule server's DocumentRoot folder, create the folders api/live-info/ and api/week-info/ sudo mkdir -p /var/www/schedule/api/live-info/ sudo mkdir -p /var/www/schedule/api/week-info/ Create an index.php file in the api/live-info/ folder: sudo nano /var/www/schedule/api/live-info/index.php containing the following code: <?php $filename = '/tmp/live-info'; // define here the path and name of uploaded live-info file header('Content-Type: text/javascript'); header(\"Expires: Thu, 01 Jan 1970 00:00:00 GMT\"); header(\"Cache-Control: no-store, no-cache, must-revalidate\"); $callback = empty($_GET['callback']) ? null : $_GET['callback']; $content = file_get_contents($filename); $content = str_replace('***', $callback, $content); echo $content; ?> Create an index.php file in the api/week-info/ folder: sudo nano /var/www/schedule/api/week-info/index.php containing the following code: <?php $filename = '/tmp/week-info'; // define here the path and name of uploaded week-info file header('Content-Type: text/javascript'); header(\"Expires: Thu, 01 Jan 1970 00:00:00 GMT\"); header(\"Cache-Control: no-store, no-cache, must-revalidate\"); $callback = empty($_GET['callback']) ? null : $_GET['callback']; $content = file_get_contents($filename); $content = str_replace('***', $callback, $content); echo $content; ?> Enable the new configuration and reload the Apache web server: sudo a2ensite schedule sudo /etc/init.d/apache2 reload Create a cron job to run the shell script each minute: sudo nano /etc/cron.d/libretime-schedule containing the line: * * * * * www-data /usr/local/bin/libretime-schedule.sh The schedule server will now be serving the same show information as the LibreTime server, with a cache lifetime of one minute. You can adjust the cache lifetime by altering the frequency of the cron job that polls the LibreTime server. Pushing schedule information via FTP or SSH If there is no inbound access to the LibreTime server at all, an FTP script can be used to push cached schedule data from LibreTime to an external web server. The standard ftp command should be available on the LibreTime server and the external web server should have a suitably restricted FTP account set up. After following steps 1 and 2 above to export schedule data to a pair of temporary files on the LibreTime server, create a new script on the LibreTime server to automatically make the upload: sudo nano /usr/local/bin/upload-schedule-data.sh Replace host, user and password values with appropriate values for your external web server: #!/bin/sh HOST='website.example.com' USER='ftp_user' PASSWD='ftp_password' ftp -n -v $HOST << EOT user $USER $PASSWD ascii prompt put /tmp/airtime-week-info put /tmp/airtime-live-info bye EOT Then make the new script executable and create a cron job to launch it every minute, as in step 8 above. Steps 3 to 7 above should be carried out on the external web server so that it can convert the two temporary files uploaded via FTP into public schedule data. If you have secure shell access (SSH) to the remote web server, you could write a script to use the secure copy command (scp) instead of ftp.","title":"Exporting the Schedule"},{"location":"manual/exporting-the-schedule/#caching-schedule-information","text":"If the LibreTime server is behind a firewall, or you want to protect the LibreTime server from large numbers of schedule requests, you may wish to cache the schedule information on a public-facing or intermediate server. You can then create a firewall rule that only allows the schedule server to connect to the LibreTime server, in addition to any remote users of the LibreTime web interface. Your system administrator can set up schedule caching on a standard Apache and PHP enabled web server with the curl program installed, using the following steps: Create a shell script on the schedule server (schedule.example.com) that polls the remote LibreTime server (libretime.example.com), and writes the metadata returned into a pair of local temporary files: sudo nano /usr/local/bin/libretime-schedule.sh The content of this file should be like the following script, replacing libretime.example.com with the name of your LibreTime server: #!/bin/sh curl -s \"https://libretime.example.com/api/live-info/?callback=***\" > /tmp/live-info curl -s \"https://libretime.example.com/api/week-info/?callback=***\" > /tmp/week-info Make the script executable: sudo chmod +x /usr/local/bin/libretime-schedule.sh Create an Apache VirtualHost configuration for the schedule server: sudo nano /etc/apache2/sites-available/schedule containing a definition like the following, replacing schedule.example.com with the name of your schedule server: <VirtualHost *:80> ServerName schedule.example.com DocumentRoot /var/www/schedule/ </VirtualHost> In the schedule server's DocumentRoot folder, create the folders api/live-info/ and api/week-info/ sudo mkdir -p /var/www/schedule/api/live-info/ sudo mkdir -p /var/www/schedule/api/week-info/ Create an index.php file in the api/live-info/ folder: sudo nano /var/www/schedule/api/live-info/index.php containing the following code: <?php $filename = '/tmp/live-info'; // define here the path and name of uploaded live-info file header('Content-Type: text/javascript'); header(\"Expires: Thu, 01 Jan 1970 00:00:00 GMT\"); header(\"Cache-Control: no-store, no-cache, must-revalidate\"); $callback = empty($_GET['callback']) ? null : $_GET['callback']; $content = file_get_contents($filename); $content = str_replace('***', $callback, $content); echo $content; ?> Create an index.php file in the api/week-info/ folder: sudo nano /var/www/schedule/api/week-info/index.php containing the following code: <?php $filename = '/tmp/week-info'; // define here the path and name of uploaded week-info file header('Content-Type: text/javascript'); header(\"Expires: Thu, 01 Jan 1970 00:00:00 GMT\"); header(\"Cache-Control: no-store, no-cache, must-revalidate\"); $callback = empty($_GET['callback']) ? null : $_GET['callback']; $content = file_get_contents($filename); $content = str_replace('***', $callback, $content); echo $content; ?> Enable the new configuration and reload the Apache web server: sudo a2ensite schedule sudo /etc/init.d/apache2 reload Create a cron job to run the shell script each minute: sudo nano /etc/cron.d/libretime-schedule containing the line: * * * * * www-data /usr/local/bin/libretime-schedule.sh The schedule server will now be serving the same show information as the LibreTime server, with a cache lifetime of one minute. You can adjust the cache lifetime by altering the frequency of the cron job that polls the LibreTime server.","title":"Caching schedule information"},{"location":"manual/exporting-the-schedule/#pushing-schedule-information-via-ftp-or-ssh","text":"If there is no inbound access to the LibreTime server at all, an FTP script can be used to push cached schedule data from LibreTime to an external web server. The standard ftp command should be available on the LibreTime server and the external web server should have a suitably restricted FTP account set up. After following steps 1 and 2 above to export schedule data to a pair of temporary files on the LibreTime server, create a new script on the LibreTime server to automatically make the upload: sudo nano /usr/local/bin/upload-schedule-data.sh Replace host, user and password values with appropriate values for your external web server: #!/bin/sh HOST='website.example.com' USER='ftp_user' PASSWD='ftp_password' ftp -n -v $HOST << EOT user $USER $PASSWD ascii prompt put /tmp/airtime-week-info put /tmp/airtime-live-info bye EOT Then make the new script executable and create a cron job to launch it every minute, as in step 8 above. Steps 3 to 7 above should be carried out on the external web server so that it can convert the two temporary files uploaded via FTP into public schedule data. If you have secure shell access (SSH) to the remote web server, you could write a script to use the secure copy command (scp) instead of ftp.","title":"Pushing schedule information via FTP or SSH"},{"location":"manual/general/","text":"Settings On the Settings menu, click General to set your Station Name . This text is shown in your web browser's title bar when your station staff are logged into LibreTime, and optionally in stream metadata. You can also set a Station Description and Station Logo here. The Default Interface Language drop-down menu sets the default localization for your LibreTime instance, and the Station Timezone drop-down menu can be used to display local time at your station. LibreTime stores show times internally in UTC format (similar to Greenwich Mean Time ), but displays local time for the convenience of your station staff. You can also set the day of the week that you wish to start your station's weekly schedule on, which defaults to Sunday. The Track Type Default enables you to select a track type default for uploads. Initially, the Default Fade In and Default Fade Out times for automated fades are set to half a second, and the Default Crossfade Duration is set to zero seconds. Custom fade and crossfade times can be set for adjacent items in a playlist or static smart block. See the chapter Library for details. The Intro Autoloading Playlist enables you to select a playlist that will be scheduled at the beginning of every show that has enabled an autoloading playlist. This can be used for instance to insert a station ID or other announcements a the top of every show. The Outro Autoloading Playlist enables you to select a playlist that will be scheduled after the content of every show with an autoloading playlist. The Overwrite Podcast Episode Metatags option which is enabled by default causes LibreTime to override the Artist, Title & Album fields on any tracks downloaded from a podcast with information from the RSS feed. The Generate a smartblock and a playlist upon creation of a new podcast option when enabled will create a smartblock matching the newest episode of a podcast and a playlist containing that smartblock automatically upon adding a podcast to LibreTime. This can also be done manually by the generate smartblock and playlist button under a podcasts settings which is why it is disabled by default. You can enable live, read-only access to the LibreTime schedule calendar for your station's public website with the Public LibreTime API option, if you wish. (There is more about this feature in the Exporting the schedule chapter, in the Advanced Configuration section of this book). The Allowed CORS URLs is intended to deal with situations where you want a remote site with a different domain to access the API. This is relevant when there is a reverse proxy server in front of LibreTime. If you are using a reverse proxy, the URLs that will be used to access it should be added here. The Display login button on your Radio Page? will determine whether visitors to your site see a link to login. If this is disabled DJs and admins will need to goto http://SITEURL/login to be able to login. The Tune-In Settings section is intended for stations that have partnered with TuneIn to automatically push their now playing metadata to TuneIn. This hasn't been tested and also requires special credentials from TuneIn. The Dangerous Options section provides an administrator the ability to erase the entire LibreTime library. When you are done remember click the Save button at the top or bottom of the form. Individual LibreTime users can choose another interface localization when they log in, or set personal preferences for localization and time zone by clicking their username on the right side of the menu bar.","title":"General"},{"location":"manual/general/#settings","text":"On the Settings menu, click General to set your Station Name . This text is shown in your web browser's title bar when your station staff are logged into LibreTime, and optionally in stream metadata. You can also set a Station Description and Station Logo here. The Default Interface Language drop-down menu sets the default localization for your LibreTime instance, and the Station Timezone drop-down menu can be used to display local time at your station. LibreTime stores show times internally in UTC format (similar to Greenwich Mean Time ), but displays local time for the convenience of your station staff. You can also set the day of the week that you wish to start your station's weekly schedule on, which defaults to Sunday. The Track Type Default enables you to select a track type default for uploads. Initially, the Default Fade In and Default Fade Out times for automated fades are set to half a second, and the Default Crossfade Duration is set to zero seconds. Custom fade and crossfade times can be set for adjacent items in a playlist or static smart block. See the chapter Library for details. The Intro Autoloading Playlist enables you to select a playlist that will be scheduled at the beginning of every show that has enabled an autoloading playlist. This can be used for instance to insert a station ID or other announcements a the top of every show. The Outro Autoloading Playlist enables you to select a playlist that will be scheduled after the content of every show with an autoloading playlist. The Overwrite Podcast Episode Metatags option which is enabled by default causes LibreTime to override the Artist, Title & Album fields on any tracks downloaded from a podcast with information from the RSS feed. The Generate a smartblock and a playlist upon creation of a new podcast option when enabled will create a smartblock matching the newest episode of a podcast and a playlist containing that smartblock automatically upon adding a podcast to LibreTime. This can also be done manually by the generate smartblock and playlist button under a podcasts settings which is why it is disabled by default. You can enable live, read-only access to the LibreTime schedule calendar for your station's public website with the Public LibreTime API option, if you wish. (There is more about this feature in the Exporting the schedule chapter, in the Advanced Configuration section of this book). The Allowed CORS URLs is intended to deal with situations where you want a remote site with a different domain to access the API. This is relevant when there is a reverse proxy server in front of LibreTime. If you are using a reverse proxy, the URLs that will be used to access it should be added here. The Display login button on your Radio Page? will determine whether visitors to your site see a link to login. If this is disabled DJs and admins will need to goto http://SITEURL/login to be able to login. The Tune-In Settings section is intended for stations that have partnered with TuneIn to automatically push their now playing metadata to TuneIn. This hasn't been tested and also requires special credentials from TuneIn. The Dangerous Options section provides an administrator the ability to erase the entire LibreTime library. When you are done remember click the Save button at the top or bottom of the form. Individual LibreTime users can choose another interface localization when they log in, or set personal preferences for localization and time zone by clicking their username on the right side of the menu bar.","title":"Settings"},{"location":"manual/getting-started/","text":"Getting Started If the server is only being used for LibreTime and has a web browser installed, you can access the administration interface directly on that server by opening the address: http://localhost/ If you have set up LibreTime so that it can be accessed from other computers, you would use a domain name instead. For example: https://libretime.example.com/ You can log in for the first time with the user name admin and the password admin . Your browser should automatically focus on the Username field. You will see a link Reset password below the password field, which enables users to obtain a password reminder by email. You will need to have a mailserver configured to work with PHP for this to work. There is an issue open to add documentation for this ( #724 ). The E-mail address you enter must match the address stored in the database for your Username . The Master Panel The Master Panel is present at the top of every page of the LibreTime interface. On the left hand side, the Master Panel displays the details of the Previous file played out, the current file playing (with an orange progress bar and time elapsed/time remaining), and the details of the Next file due to play. It also displays the name and scheduled time of the current show, with a blue progress bar. Beneath this side of the Master Panel is the main navigation menu. We'll be looking at the contents of these menus in the following chapters of this book. On the right hand side of the Master Panel are the switches for the Source Streams , which enable you to switch from scheduled play to remote live sources, and back. (See the chapter Stream settings for details of this feature). The On Air indicator turns from dark grey to red whenever audio is being played out. Underneath this indicator is a Listen button, which opens a pop-up player that can be used to audition the available playout streams. There is also a clock indicating the Station time and time zone. Beneath the clock and just to the left, the name of the user currently logged in is displayed, and there is the link for you to Logout . Clicking the username link opens a page in which you can update your LibreTime password, contact details, language and time zone preferences. Click the Save button once you have made the changes that you require. Checking an Icecast server If you have installed an Icecast streaming media server, you can check that Icecast is running by opening its default server port of 8000 in your web browser. For example, on the server itself, you can use: http://localhost:8000 or from another machine, using the domain name of the Icecast server: http://streaming.example.com:8000 You should see the Icecast status page, with details of any connections that your LibreTime server has made to this Icecast server. If you have only just installed LibreTime, there may not be any media playing out yet. Reverse Proxy Connections In some deployments, the LibreTime server is deployed behind a reverse proxy, for example in containerization use-cases such as Docker and LXC. LibreTime makes extensive use of its API for some site functionality, which causes Cross-Origin Resource Sharing (CORS) to occur. By default, CORS requests are blocked by your browser and the origins need to be added to the Allowed CORS URLs block in General Settings . These origins should include any domains that will be used externally to connect to your reverse proxy that you want handled by LibreTime.","title":"Getting Started"},{"location":"manual/getting-started/#getting-started","text":"If the server is only being used for LibreTime and has a web browser installed, you can access the administration interface directly on that server by opening the address: http://localhost/ If you have set up LibreTime so that it can be accessed from other computers, you would use a domain name instead. For example: https://libretime.example.com/ You can log in for the first time with the user name admin and the password admin . Your browser should automatically focus on the Username field. You will see a link Reset password below the password field, which enables users to obtain a password reminder by email. You will need to have a mailserver configured to work with PHP for this to work. There is an issue open to add documentation for this ( #724 ). The E-mail address you enter must match the address stored in the database for your Username .","title":"Getting Started"},{"location":"manual/getting-started/#the-master-panel","text":"The Master Panel is present at the top of every page of the LibreTime interface. On the left hand side, the Master Panel displays the details of the Previous file played out, the current file playing (with an orange progress bar and time elapsed/time remaining), and the details of the Next file due to play. It also displays the name and scheduled time of the current show, with a blue progress bar. Beneath this side of the Master Panel is the main navigation menu. We'll be looking at the contents of these menus in the following chapters of this book. On the right hand side of the Master Panel are the switches for the Source Streams , which enable you to switch from scheduled play to remote live sources, and back. (See the chapter Stream settings for details of this feature). The On Air indicator turns from dark grey to red whenever audio is being played out. Underneath this indicator is a Listen button, which opens a pop-up player that can be used to audition the available playout streams. There is also a clock indicating the Station time and time zone. Beneath the clock and just to the left, the name of the user currently logged in is displayed, and there is the link for you to Logout . Clicking the username link opens a page in which you can update your LibreTime password, contact details, language and time zone preferences. Click the Save button once you have made the changes that you require.","title":"The Master Panel"},{"location":"manual/getting-started/#checking-an-icecast-server","text":"If you have installed an Icecast streaming media server, you can check that Icecast is running by opening its default server port of 8000 in your web browser. For example, on the server itself, you can use: http://localhost:8000 or from another machine, using the domain name of the Icecast server: http://streaming.example.com:8000 You should see the Icecast status page, with details of any connections that your LibreTime server has made to this Icecast server. If you have only just installed LibreTime, there may not be any media playing out yet.","title":"Checking an Icecast server"},{"location":"manual/getting-started/#reverse-proxy-connections","text":"In some deployments, the LibreTime server is deployed behind a reverse proxy, for example in containerization use-cases such as Docker and LXC. LibreTime makes extensive use of its API for some site functionality, which causes Cross-Origin Resource Sharing (CORS) to occur. By default, CORS requests are blocked by your browser and the origins need to be added to the Allowed CORS URLs block in General Settings . These origins should include any domains that will be used externally to connect to your reverse proxy that you want handled by LibreTime.","title":"Reverse Proxy Connections"},{"location":"manual/hd-audio-models/","text":"This listing is provided to help ensure that the correct model parameter is passed to the ALSA kernel module for an Intel HDA soundcard, if one is fitted to your LibreTime server. See the chapter Preparing the server in this book for more details. Model name Description ---------- ----------- ALC880 ====== 3stack 3-jack in back and a headphone out 3stack-digout 3-jack in back, a HP out and a SPDIF out 5stack 5-jack in back, 2-jack in front 5stack-digout 5-jack in back, 2-jack in front, a SPDIF out 6stack 6-jack in back, 2-jack in front 6stack-digout 6-jack with a SPDIF out ALC260 ====== N/A ALC262 ====== inv-dmic Inverted internal mic workaround ALC267/268 ========== inv-dmic Inverted internal mic workaround ALC269/270/275/276/28x/29x ====== laptop-amic Laptops with analog-mic input laptop-dmic Laptops with digital-mic input alc269-dmic Enable ALC269(VA) digital mic workaround alc271-dmic Enable ALC271X digital mic workaround inv-dmic Inverted internal mic workaround headset-mic Indicates a combined headset (headphone+mic) jack lenovo-dock Enables docking station I/O for some Lenovos dell-headset-multi Headset jack, which can also be used as mic-in dell-headset-dock Headset jack (without mic-in), and also dock I/O ALC66x/67x/892 ============== mario Chromebook mario model fixup asus-mode1 ASUS asus-mode2 ASUS asus-mode3 ASUS asus-mode4 ASUS asus-mode5 ASUS asus-mode6 ASUS asus-mode7 ASUS asus-mode8 ASUS inv-dmic Inverted internal mic workaround dell-headset-multi Headset jack, which can also be used as mic-in ALC680 ====== N/A ALC88x/898/1150 ====================== acer-aspire-4930g Acer Aspire 4930G/5930G/6530G/6930G/7730G acer-aspire-8930g Acer Aspire 8330G/6935G acer-aspire Acer Aspire others inv-dmic Inverted internal mic workaround no-primary-hp VAIO Z/VGC-LN51JGB workaround (for fixed speaker DAC) ALC861/660 ========== N/A ALC861VD/660VD ============== N/A CMI9880 ======= minimal 3-jack in back min_fp 3-jack in back, 2-jack in front full 6-jack in back, 2-jack in front full_dig 6-jack in back, 2-jack in front, SPDIF I/O allout 5-jack in back, 2-jack in front, SPDIF out auto auto-config reading BIOS (default) AD1882 / AD1882A ================ 3stack 3-stack mode 3stack-automute 3-stack with automute front HP (default) 6stack 6-stack mode AD1884A / AD1883 / AD1984A / AD1984B ==================================== desktop 3-stack desktop (default) laptop laptop with HP jack sensing mobile mobile devices with HP jack sensing thinkpad Lenovo Thinkpad X300 touchsmart HP Touchsmart AD1884 ====== N/A AD1981 ====== basic 3-jack (default) hp HP nx6320 thinkpad Lenovo Thinkpad T60/X60/Z60 toshiba Toshiba U205 AD1983 ====== N/A AD1984 ====== basic default configuration thinkpad Lenovo Thinkpad T61/X61 dell_desktop Dell T3400 AD1986A ======= 6stack 6-jack, separate surrounds (default) 3stack 3-stack, shared surrounds laptop 2-channel only (FSC V2060, Samsung M50) laptop-eapd 2-channel with EAPD (ASUS A6J) laptop-automute 2-channel with EAPD and HP-automute (Lenovo N100) ultra 2-channel with EAPD (Samsung Ultra tablet PC) samsung 2-channel with EAPD (Samsung R65) samsung-p50 2-channel with HP-automute (Samsung P50) AD1988/AD1988B/AD1989A/AD1989B ============================== 6stack 6-jack 6stack-dig ditto with SPDIF 3stack 3-jack 3stack-dig ditto with SPDIF laptop 3-jack with hp-jack automute laptop-dig ditto with SPDIF auto auto-config reading BIOS (default) Conexant 5045 ============= laptop-hpsense Laptop with HP sense (old model laptop) laptop-micsense Laptop with Mic sense (old model fujitsu) laptop-hpmicsense Laptop with HP and Mic senses benq Benq R55E laptop-hp530 HP 530 laptop test for testing/debugging purpose, almost all controls can be adjusted. Appearing only when compiled with $CONFIG_SND_DEBUG=y Conexant 5047 ============= laptop Basic Laptop config laptop-hp Laptop config for some HP models (subdevice 30A5) laptop-eapd Laptop config with EAPD support test for testing/debugging purpose, almost all controls can be adjusted. Appearing only when compiled with $CONFIG_SND_DEBUG=y Conexant 5051 ============= laptop Basic Laptop config (default) hp HP Spartan laptop hp-dv6736 HP dv6736 hp-f700 HP Compaq Presario F700 ideapad Lenovo IdeaPad laptop toshiba Toshiba Satellite M300 Conexant 5066 ============= laptop Basic Laptop config (default) hp-laptop HP laptops, e g G60 asus Asus K52JU, Lenovo G560 dell-laptop Dell laptops dell-vostro Dell Vostro olpc-xo-1_5 OLPC XO 1.5 ideapad Lenovo IdeaPad U150 thinkpad Lenovo Thinkpad STAC9200 ======== ref Reference board oqo OQO Model 2 dell-d21 Dell (unknown) dell-d22 Dell (unknown) dell-d23 Dell (unknown) dell-m21 Dell Inspiron 630m, Dell Inspiron 640m dell-m22 Dell Latitude D620, Dell Latitude D820 dell-m23 Dell XPS M1710, Dell Precision M90 dell-m24 Dell Latitude 120L dell-m25 Dell Inspiron E1505n dell-m26 Dell Inspiron 1501 dell-m27 Dell Inspiron E1705/9400 gateway-m4 Gateway laptops with EAPD control gateway-m4-2 Gateway laptops with EAPD control panasonic Panasonic CF-74 auto BIOS setup (default) STAC9205/9254 ============= ref Reference board dell-m42 Dell (unknown) dell-m43 Dell Precision dell-m44 Dell Inspiron eapd Keep EAPD on (e.g. Gateway T1616) auto BIOS setup (default) STAC9220/9221 ============= ref Reference board 3stack D945 3stack 5stack D945 5stack + SPDIF intel-mac-v1 Intel Mac Type 1 intel-mac-v2 Intel Mac Type 2 intel-mac-v3 Intel Mac Type 3 intel-mac-v4 Intel Mac Type 4 intel-mac-v5 Intel Mac Type 5 intel-mac-auto Intel Mac (detect type according to subsystem id) macmini Intel Mac Mini (equivalent with type 3) macbook Intel Mac Book (eq. type 5) macbook-pro-v1 Intel Mac Book Pro 1st generation (eq. type 3) macbook-pro Intel Mac Book Pro 2nd generation (eq. type 3) imac-intel Intel iMac (eq. type 2) imac-intel-20 Intel iMac (newer version) (eq. type 3) ecs202 ECS/PC chips dell-d81 Dell (unknown) dell-d82 Dell (unknown) dell-m81 Dell (unknown) dell-m82 Dell XPS M1210 auto BIOS setup (default) STAC9202/9250/9251 ================== ref Reference board, base config m1 Some Gateway MX series laptops (NX560XL) m1-2 Some Gateway MX series laptops (MX6453) m2 Some Gateway MX series laptops (M255) m2-2 Some Gateway MX series laptops m3 Some Gateway MX series laptops m5 Some Gateway MX series laptops (MP6954) m6 Some Gateway NX series laptops auto BIOS setup (default) STAC9227/9228/9229/927x ======================= ref Reference board ref-no-jd Reference board without HP/Mic jack detection 3stack D965 3stack 5stack D965 5stack + SPDIF 5stack-no-fp D965 5stack without front panel dell-3stack Dell Dimension E520 dell-bios Fixes with Dell BIOS setup dell-bios-amic Fixes with Dell BIOS setup including analog mic volknob Fixes with volume-knob widget 0x24 auto BIOS setup (default) STAC92HD71B* ============ ref Reference board dell-m4-1 Dell desktops dell-m4-2 Dell desktops dell-m4-3 Dell desktops hp-m4 HP mini 1000 hp-dv5 HP dv series hp-hdx HP HDX series hp-dv4-1222nr HP dv4-1222nr (with LED support) auto BIOS setup (default) STAC92HD73* =========== ref Reference board no-jd BIOS setup but without jack-detection intel Intel DG45* mobos dell-m6-amic Dell desktops/laptops with analog mics dell-m6-dmic Dell desktops/laptops with digital mics dell-m6 Dell desktops/laptops with both type of mics dell-eq Dell desktops/laptops alienware Alienware M17x auto BIOS setup (default) STAC92HD83* =========== ref Reference board mic-ref Reference board with power management for ports dell-s14 Dell laptop dell-vostro-3500 Dell Vostro 3500 laptop hp-dv7-4000 HP dv-7 4000 hp_cNB11_intquad HP CNB models with 4 speakers hp-zephyr HP Zephyr hp-led HP with broken BIOS for mute LED hp-inv-led HP with broken BIOS for inverted mute LED auto BIOS setup (default) STAC9872 ======== vaio VAIO laptop without SPDIF auto BIOS setup (default) Cirrus Logic CS4206/4207 ======================== mbp55 MacBook Pro 5,5 imac27 IMac 27 Inch auto BIOS setup (default) Cirrus Logic CS4208 =================== mba6 MacBook Air 6,1 and 6,2 gpio0 Enable GPIO 0 amp auto BIOS setup (default) VIA VT17xx/VT18xx/VT20xx ======================== auto BIOS setup (default)","title":"HD Audio Models"},{"location":"manual/help/","text":"The first entry on LibreTime's Help menu offers a Getting Started guide for new users. Further down, there is also a link to the online version of this User Manual . You can visit the LibreTime online support forum at https://discourse.libretime.org/c/get-help to ask for help from the community regarding your LibreTime setup. Bug reporting LibreTime needs your input to improve. If you think you've found a bug, please visit https://github.com/LibreTime/libretime . Create a bug report by selecting Issues , then New Issue . That way, the LibreTime team can keep track of your problem and notify you when it has been fixed. You can also suggest improvements and new features for LibreTime on that site. Other help The UNESCO publication Community Radio - A user's guide to the technology features a very comprehensive guide to setting up a community radio station. This guide is aimed at people thinking about setting up a radio station in India, but includes lots of practical advice that would be useful in any country.","title":"Help"},{"location":"manual/help/#bug-reporting","text":"LibreTime needs your input to improve. If you think you've found a bug, please visit https://github.com/LibreTime/libretime . Create a bug report by selecting Issues , then New Issue . That way, the LibreTime team can keep track of your problem and notify you when it has been fixed. You can also suggest improvements and new features for LibreTime on that site.","title":"Bug reporting"},{"location":"manual/help/#other-help","text":"The UNESCO publication Community Radio - A user's guide to the technology features a very comprehensive guide to setting up a community radio station. This guide is aimed at people thinking about setting up a radio station in India, but includes lots of practical advice that would be useful in any country.","title":"Other help"},{"location":"manual/history/","text":"History On the History menu, the Playout History page enables you to view a list of files played within a specific date and time range. This page is designed to help your station prepare reports for music royalty collection societies and regulatory agencies. Search results can be copied to the clipboard using the Copy button, exported as data in CSV format (comma separated values), exported as a document in PDF format, or displayed in a printer-friendly format using the Print button. (Your web browser must have an Adobe Flash plugin installed for these buttons to appear). Press the Esc key to return to the LibreTime interface once the print job is complete. This page has three tabs: Log Sheet , File Summary and Show Summary . On any of these tabs, you can select a date and time range by clicking the calendar and clock icons in the upper left corner of the page. Then click the search button, which has a magnifying glass icon, to the right. A list of files played during that date and time range will appear further down the page. In the Log Sheet tab, the playout history is sorted by Start Time and End Time by default. The number of times each file was played and the length of the files are shown in the File Summary tab. To make optimal use of this feature for royalty reporting purposes, music files must be tagged with Composer and Copyright metadata. The artist performing a piece of music may not be the original composer of the work, or the copyright holder of the sound recording. On the Show Summary tab, click the name of a show within the search range to expand its row and see its playout details. Manual logging If your station features playout from analogue sources such as turntables or microphones, there is no automatic metadata for LibreTime to collect from these inputs. To ensure that the playout history is complete, you can add log entries manually by clicking the + Create Entry button. This action opens a pop-up window with default fields of Start Time, End Time, Title and Creator. Click the Find button to automatically fill the Choose Show Instance menu with the names of shows that took place within the specified time range. Then click the Save button to enter the new item into the playout history. Log entries can also be manually deleted, using the button with the trashcan icon, to the right of the + Create Entry button. Pages of entries can be selected for deletion using the Select drop-down menu. History Templates The History Templates page on the History menu enables you to prepare reports with the exact content required by regulatory agencies in the territories that you are broadcasting to. You can begin creating a custom template by clicking the button New Log Sheet Template or the button New File Summary Template . Either of these actions opens a page in which you can name the new template, and add or remove elements from the list on the left. To add a new element from the list on the right, click the plus icon for the item you require. If the element you require is not listed, you can use the Add New Field box at the lower end of the right side column. Select string , boolean , integer , or float , depending on the type of data that you wish to log, and then click the + Add button. When the template is in the format you require, click the Save button, and Set Default Template if you wish. The new template will now be listed on the History Templates page. If you have set a new default template, any changes will be visible on the tabs of the Playout History page.","title":"Playout History"},{"location":"manual/history/#history","text":"On the History menu, the Playout History page enables you to view a list of files played within a specific date and time range. This page is designed to help your station prepare reports for music royalty collection societies and regulatory agencies. Search results can be copied to the clipboard using the Copy button, exported as data in CSV format (comma separated values), exported as a document in PDF format, or displayed in a printer-friendly format using the Print button. (Your web browser must have an Adobe Flash plugin installed for these buttons to appear). Press the Esc key to return to the LibreTime interface once the print job is complete. This page has three tabs: Log Sheet , File Summary and Show Summary . On any of these tabs, you can select a date and time range by clicking the calendar and clock icons in the upper left corner of the page. Then click the search button, which has a magnifying glass icon, to the right. A list of files played during that date and time range will appear further down the page. In the Log Sheet tab, the playout history is sorted by Start Time and End Time by default. The number of times each file was played and the length of the files are shown in the File Summary tab. To make optimal use of this feature for royalty reporting purposes, music files must be tagged with Composer and Copyright metadata. The artist performing a piece of music may not be the original composer of the work, or the copyright holder of the sound recording. On the Show Summary tab, click the name of a show within the search range to expand its row and see its playout details.","title":"History"},{"location":"manual/history/#manual-logging","text":"If your station features playout from analogue sources such as turntables or microphones, there is no automatic metadata for LibreTime to collect from these inputs. To ensure that the playout history is complete, you can add log entries manually by clicking the + Create Entry button. This action opens a pop-up window with default fields of Start Time, End Time, Title and Creator. Click the Find button to automatically fill the Choose Show Instance menu with the names of shows that took place within the specified time range. Then click the Save button to enter the new item into the playout history. Log entries can also be manually deleted, using the button with the trashcan icon, to the right of the + Create Entry button. Pages of entries can be selected for deletion using the Select drop-down menu.","title":"Manual logging"},{"location":"manual/history/#history-templates","text":"The History Templates page on the History menu enables you to prepare reports with the exact content required by regulatory agencies in the territories that you are broadcasting to. You can begin creating a custom template by clicking the button New Log Sheet Template or the button New File Summary Template . Either of these actions opens a page in which you can name the new template, and add or remove elements from the list on the left. To add a new element from the list on the right, click the plus icon for the item you require. If the element you require is not listed, you can use the Add New Field box at the lower end of the right side column. Select string , boolean , integer , or float , depending on the type of data that you wish to log, and then click the + Add button. When the template is in the format you require, click the Save button, and Set Default Template if you wish. The new template will now be listed on the History Templates page. If you have set a new default template, any changes will be visible on the tabs of the Playout History page.","title":"History Templates"},{"location":"manual/history-templates/","text":"TBD","title":"History Templates"},{"location":"manual/host-configuration/","text":"Host configuration The streaming host configuration for LibreTime is shown in the file /etc/airtime/liquidsoap.cfg which is automatically generated by the Streams page, found on the System menu of the LibreTime administration interface. For this reason, you would not normally edit the streaming configuration manually, as any changes are likely to be overwritten by the administration interface. Database and RabbitMQ hosts Optionally, you may wish to edit the file /etc/airtime/airtime.conf to set the PostgreSQL database host, and the username and password to connect to the database with: sudo nano /etc/airtime/airtime.conf You can also set options for RabbitMQ messaging, the LibreTime server and SoundCloud uploads in this file, although you should not normally need to adjust the defaults unless you are running a large LibreTime system distributed across multiple servers. To run the LibreTime server in demo mode, which changes the greeting on the login page and prevents user accounts from being created or modified, set the value of demo to 1. [database] host = localhost dbname = airtime dbuser = airtime dbpass = airtime [rabbitmq] host = 127.0.0.1 port = 5672 user = airtime password = XXXXXXXXXXXXXXXXXXXX vhost = /airtime [general] api_key = XXXXXXXXXXXXXXXXXXXXX web_server_user = www-data airtime_dir = /usr/share/airtime base_url = libretime.example.com base_port = 80 base_dir = / cache_ahead_hours = 1 [monit] monit_user = guest monit_password = airtime [soundcloud] connection_retries = 3 time_between_retries = 60 [demo] demo = 0 Save and close the file with Ctrl+O and Ctrl+X . In order to update the configuration used by the various components of LibreTime, run the following commands sudo systemctl restart airtime-liquidsoap sudo systemctl restart airtime-playout sudo systemctl restart airtime-celery sudo systemctl restart airtime_analyzer Changing the default PostgreSQL passwords Two of the most important passwords that should be changed immediately after installation are the passwords used by the PostgreSQL database. It is strongly recommended that you do this before exposing your server to the internet beyond your internal network. Login to PostgreSQL with sudo -u postgres psql . The PostgreSQL shell - postgres=# - means that you have logged in successfully. Change the admin password with ALTER USER postgres PASSWORD 'myPassword'; , where myPassword is the new password. Make sure to include the semicolon at the end! A response of ALTER ROLE means that the command ran successfully. Change the password for the airtime user with ALTER USER airtime WITH PASSWORD 'new_password'; A response of ALTER ROLE means that the command ran successfully. If all is successful, logout of PostgreSQL with \\q , go back to /etc/airtime/airtime.conf to edit the password in the config file, and restart all services mentioned in the previous section. API client configuration If you have changed the base_url , base_port or base_dir setting in /etc/airtime/airtime.conf from the defaults, you will probably also have to update the Hostname settings in the file /etc/airtime/api_client.cfg accordingly.** bin_dir = /usr/lib/airtime/api_clients api_key = 'XXXXXXXXXXXXXXXXXXXX' api_base = api host = libretime.example.com base_port = 80 base_dir = / Apache max file size configuration By default, the maximum upload file size is 500 MB, which may not be large enough for some stations, especially if they are uploading prerecorded shows. The setting for this is located in /etc/apache2/sites-available/airtime.config . Search for and update the following in megabytes: ; Maximum allowed size for uploaded files. upload_max_filesize = 40M ; Must be greater than or equal to upload_max_filesize post_max_size = 40M For quick reference, 1024 MB = 1 GB and 2048 MB = 2 GB, but most will be okay with rounding to the nearest thousand. After updating the config file, restart Apache by sudo systemctl apache restart . Playout and recorder settings Settings for pypo, the playout and recording engine used by LibreTime, are found in the file /etc/airtime/airtime.conf . After making changes to this file, you will have to issue the command: sudo systemctl restart airtime-playout for the changes to take effect. ############################################ # pypo - configuration # ############################################ # Set the type of client you are using. # Currently supported types: # 1) \"obp\" = Open Broadcast Platform # 2) \"airtime\" # api_client = airtime ############################################ # Cache Directories # # *include* trailing slash !! # ############################################ cache_dir = /var/tmp/airtime/pypo/cache/ file_dir = /var/tmp/airtime/pypo/files/ tmp_dir = /var/tmp/airtime/pypo/tmp/ ############################################ # Setup Directories # # Do *not* include trailing slash !! # ############################################ cache_base_dir = /var/tmp/airtime/pypo bin_dir = /usr/lib/airtime/pypo log_base_dir = /var/log/airtime pypo_log_dir = /var/log/airtime/pypo liquidsoap_log_dir = /var/log/airtime/pypo-liquidsoap ############################################ # Liquidsoap settings # ############################################ ls_host = 127.0.0.1 ls_port = 1234 ############################################ # RabbitMQ settings # ############################################ rabbitmq_host = localhost rabbitmq_user = airtime rabbitmq_password = XXXXXXXXXXXXXXXXXXXX rabbitmq_vhost = /airtime ############################################ # pypo preferences # ############################################ # Poll interval in seconds. # # This will rarely need to be changed because any schedule changes are # automatically sent to pypo immediately. # # This is how often the poll script downloads new schedules and files from the # server in the event that no changes are made to the schedule. # poll_interval = 3600# in seconds. # Push interval in seconds. # # This is how often the push script checks whether it has something new to # push to liquidsoap. # # It's hard to imagine a situation where this should be more than 1 second. # push_interval = 1# in seconds # 'pre' or 'otf'. 'pre' cues while playlist preparation # while 'otf' (on the fly) cues while loading into ls # (needs the post_processor patch) cue_style = pre","title":"Host Configuration"},{"location":"manual/host-configuration/#host-configuration","text":"The streaming host configuration for LibreTime is shown in the file /etc/airtime/liquidsoap.cfg which is automatically generated by the Streams page, found on the System menu of the LibreTime administration interface. For this reason, you would not normally edit the streaming configuration manually, as any changes are likely to be overwritten by the administration interface.","title":"Host configuration"},{"location":"manual/host-configuration/#database-and-rabbitmq-hosts","text":"Optionally, you may wish to edit the file /etc/airtime/airtime.conf to set the PostgreSQL database host, and the username and password to connect to the database with: sudo nano /etc/airtime/airtime.conf You can also set options for RabbitMQ messaging, the LibreTime server and SoundCloud uploads in this file, although you should not normally need to adjust the defaults unless you are running a large LibreTime system distributed across multiple servers. To run the LibreTime server in demo mode, which changes the greeting on the login page and prevents user accounts from being created or modified, set the value of demo to 1. [database] host = localhost dbname = airtime dbuser = airtime dbpass = airtime [rabbitmq] host = 127.0.0.1 port = 5672 user = airtime password = XXXXXXXXXXXXXXXXXXXX vhost = /airtime [general] api_key = XXXXXXXXXXXXXXXXXXXXX web_server_user = www-data airtime_dir = /usr/share/airtime base_url = libretime.example.com base_port = 80 base_dir = / cache_ahead_hours = 1 [monit] monit_user = guest monit_password = airtime [soundcloud] connection_retries = 3 time_between_retries = 60 [demo] demo = 0 Save and close the file with Ctrl+O and Ctrl+X . In order to update the configuration used by the various components of LibreTime, run the following commands sudo systemctl restart airtime-liquidsoap sudo systemctl restart airtime-playout sudo systemctl restart airtime-celery sudo systemctl restart airtime_analyzer","title":"Database and RabbitMQ hosts"},{"location":"manual/host-configuration/#changing-the-default-postgresql-passwords","text":"Two of the most important passwords that should be changed immediately after installation are the passwords used by the PostgreSQL database. It is strongly recommended that you do this before exposing your server to the internet beyond your internal network. Login to PostgreSQL with sudo -u postgres psql . The PostgreSQL shell - postgres=# - means that you have logged in successfully. Change the admin password with ALTER USER postgres PASSWORD 'myPassword'; , where myPassword is the new password. Make sure to include the semicolon at the end! A response of ALTER ROLE means that the command ran successfully. Change the password for the airtime user with ALTER USER airtime WITH PASSWORD 'new_password'; A response of ALTER ROLE means that the command ran successfully. If all is successful, logout of PostgreSQL with \\q , go back to /etc/airtime/airtime.conf to edit the password in the config file, and restart all services mentioned in the previous section.","title":"Changing the default PostgreSQL passwords"},{"location":"manual/host-configuration/#api-client-configuration","text":"If you have changed the base_url , base_port or base_dir setting in /etc/airtime/airtime.conf from the defaults, you will probably also have to update the Hostname settings in the file /etc/airtime/api_client.cfg accordingly.** bin_dir = /usr/lib/airtime/api_clients api_key = 'XXXXXXXXXXXXXXXXXXXX' api_base = api host = libretime.example.com base_port = 80 base_dir = /","title":"API client configuration"},{"location":"manual/host-configuration/#apache-max-file-size-configuration","text":"By default, the maximum upload file size is 500 MB, which may not be large enough for some stations, especially if they are uploading prerecorded shows. The setting for this is located in /etc/apache2/sites-available/airtime.config . Search for and update the following in megabytes: ; Maximum allowed size for uploaded files. upload_max_filesize = 40M ; Must be greater than or equal to upload_max_filesize post_max_size = 40M For quick reference, 1024 MB = 1 GB and 2048 MB = 2 GB, but most will be okay with rounding to the nearest thousand. After updating the config file, restart Apache by sudo systemctl apache restart .","title":"Apache max file size configuration"},{"location":"manual/host-configuration/#playout-and-recorder-settings","text":"Settings for pypo, the playout and recording engine used by LibreTime, are found in the file /etc/airtime/airtime.conf . After making changes to this file, you will have to issue the command: sudo systemctl restart airtime-playout for the changes to take effect. ############################################ # pypo - configuration # ############################################ # Set the type of client you are using. # Currently supported types: # 1) \"obp\" = Open Broadcast Platform # 2) \"airtime\" # api_client = airtime ############################################ # Cache Directories # # *include* trailing slash !! # ############################################ cache_dir = /var/tmp/airtime/pypo/cache/ file_dir = /var/tmp/airtime/pypo/files/ tmp_dir = /var/tmp/airtime/pypo/tmp/ ############################################ # Setup Directories # # Do *not* include trailing slash !! # ############################################ cache_base_dir = /var/tmp/airtime/pypo bin_dir = /usr/lib/airtime/pypo log_base_dir = /var/log/airtime pypo_log_dir = /var/log/airtime/pypo liquidsoap_log_dir = /var/log/airtime/pypo-liquidsoap ############################################ # Liquidsoap settings # ############################################ ls_host = 127.0.0.1 ls_port = 1234 ############################################ # RabbitMQ settings # ############################################ rabbitmq_host = localhost rabbitmq_user = airtime rabbitmq_password = XXXXXXXXXXXXXXXXXXXX rabbitmq_vhost = /airtime ############################################ # pypo preferences # ############################################ # Poll interval in seconds. # # This will rarely need to be changed because any schedule changes are # automatically sent to pypo immediately. # # This is how often the poll script downloads new schedules and files from the # server in the event that no changes are made to the schedule. # poll_interval = 3600# in seconds. # Push interval in seconds. # # This is how often the push script checks whether it has something new to # push to liquidsoap. # # It's hard to imagine a situation where this should be more than 1 second. # push_interval = 1# in seconds # 'pre' or 'otf'. 'pre' cues while playlist preparation # while 'otf' (on the fly) cues while loading into ls # (needs the post_processor patch) cue_style = pre","title":"Playout and recorder settings"},{"location":"manual/icecast-and-shoutcast/","text":"LibreTime supports direct connection to two popular streaming media servers, the open source Icecast ( http://www.icecast.org ) and the proprietary SHOUTcast ( http://www.shoutcast.com ). Apart from the software license, the main difference between these two servers is that Icecast supports simultaneous MP3, AAC, Ogg Vorbis or Ogg Opus streaming from LibreTime, whereas SHOUTcast supports MP3 and AAC streams but not Ogg Vorbis or Opus. The royalty-free Ogg Vorbis format has the advantage of better sound quality than MP3 at lower bitrates, which has a direct impact on the amount of bandwidth that your station will require to serve the same number of listeners. Ogg Opus also benefits from good sound quality at low bitrates, with the added advantage of lower latency than other streaming formats. Opus is now an IETF standard ( http://tools.ietf.org/html/rfc6716 ) and requires Icecast 2.4 or later to be installed on the streaming server. Ogg Vorbis playback is supported in Mozilla Firefox , Google Chrome and Opera browsers, via jPlayer ( http://jplayer.org/ ), and is also supported in several popular media players, including VideoLAN Client, also known as VLC ( http://www.videolan.org/vlc/ ). (See the chapter Stream player for your website on how to deliver jPlayer to your audience). Ogg Opus is relatively new and is supported natively in the very latest browsers, such as Mozilla Firefox 25.0, and media players including VLC 2.0.4 or later. Streaming MP3 below a bitrate of 128kbps is not recommended for music, because of a perceptible loss of high audio frequencies in the broadcast playout. A 96kbps or 64kbps MP3 stream may be acceptable for voice broadcasts if there is a requirement for compatibility with legacy hardware playback devices which do not support Ogg Vorbis or Opus streams. Because LibreTime supports simultaneous streaming in multiple formats, it is possible to offer one or more streams via your website, and another independent stream for direct connection from hardware players. You can test whether Ogg streams sound better at low bitrates for yourself, by using the LISTEN button in LibreTime's Master Panel to switch between streaming formats. Conversely, you may have a music station which wants to stream at 160kbps or 192kbps to offer a quality advantage over stations streaming at 128kbps or less. Since Ogg, AAC and MP3 formats use lossy compression, listeners will only hear the benefit of higher streaming bitrates if the media files in the LibreTime storage server are encoded at an equivalent bitrate, or higher. UTF-8 metadata in Icecast MP3 streams When sending metadata about your stream to an Icecast server in non-Latin alphabets, you may find that Icecast does not display the characters correctly for an MP3 stream, even though they are displayed correctly for an Ogg Vorbis stream. In the following screenshot, Russian characters are being displayed incorrectly in the Current Song field for the MP3 stream: The solution is to specify that the metadata for the MP3 mount point you are using should be interpreted using UTF-8 encoding. You can do this by adding the following stanza to the /etc/icecast2/icecast.xml file, where libretime.mp3 is the name of your mount point: <mount> <mount-name>/libretime.mp3</mount-name> <charset>UTF-8</charset> </mount> After saving the /etc/icecast2/icecast.xml file, you should restart the Icecast server: sudo invoke-rc.d icecast2 restart Restarting icecast2: Starting icecast2 Detaching from the console icecast2.","title":"Icecast and SHOUTcast"},{"location":"manual/icecast-and-shoutcast/#utf-8-metadata-in-icecast-mp3-streams","text":"When sending metadata about your stream to an Icecast server in non-Latin alphabets, you may find that Icecast does not display the characters correctly for an MP3 stream, even though they are displayed correctly for an Ogg Vorbis stream. In the following screenshot, Russian characters are being displayed incorrectly in the Current Song field for the MP3 stream: The solution is to specify that the metadata for the MP3 mount point you are using should be interpreted using UTF-8 encoding. You can do this by adding the following stanza to the /etc/icecast2/icecast.xml file, where libretime.mp3 is the name of your mount point: <mount> <mount-name>/libretime.mp3</mount-name> <charset>UTF-8</charset> </mount> After saving the /etc/icecast2/icecast.xml file, you should restart the Icecast server: sudo invoke-rc.d icecast2 restart Restarting icecast2: Starting icecast2 Detaching from the console icecast2.","title":"UTF-8 metadata in Icecast MP3 streams"},{"location":"manual/icecast-handover/","text":"In a typical radio station configuration, the live output from the broadcast studio and the scheduled output from LibreTime are mixed together before being sent further along the broadcast chain, to a transmitter or streaming media server on the Internet. (This may not be the case if your LibreTime server is remote from the studio, and you are using the Show Source Mount Point or Master Source Mount Point to mix live and scheduled content. See the Stream Settings chapter for details). If your Icecast server is hosted in a remote data centre, you may not have the option to handover the streaming media source manually, because you have no physical access to connect a broadcast mixer to the server. Disconnecting the stream and beginning another is less than ideal, because the audience's media players will also be disconnected when that happens. The Icecast server has a fallback-mount feature which can be used to move clients (media players used by listeners or viewers) from one source to another, as new sources become available. This makes it possible to handover from LibreTime output to a show from another source, and handover to LibreTime again once the other show has ended. To enable fallback mounts, edit the main Icecast configuration file to define the mount points you will use, and the relationship between them. sudo nano /etc/icecast2/icecast.xml The example section provided in the icecast.xml file is commented out by default. Before or after the commented section, add three mount point definitions. The default mount point used by LibreTime is /airtime_128 which is shown in the /etc/airtime/liquidsoap.cfg file. You must also define a mount point for the live source (called /live.ogg in this example) and a mount point for the public to connect to (called /stream.ogg in this example). <mount> <mount-name>/airtime_128</mount-name> <hidden>0</hidden> </mount> <mount> <mount-name>/live.ogg</mount-name> <fallback-mount>/airtime_128</fallback-mount> <fallback-override>1</fallback-override> <hidden>0</hidden> </mount> <mount> <mount-name>/stream.ogg</mount-name> <fallback-mount>/live.ogg</fallback-mount> <fallback-override>1</fallback-override> <hidden>0</hidden> </mount> These mount point definitions mean that a client connecting to a URL such as http://icecast.example.com:8000/stream.ogg will first fall back to the /live.ogg mount point if it is available. If not, the client will fall back in turn to the /airtime_128 mount point for LibreTime playout. Setting the value of to 1 (enabled) means that when the /live.ogg mount point becomes available again, the client will be re-connected to it. If you wish to hide the /airtime_128 and /live.ogg mount points from the public Icecast web interface, set the value of in each of these definitions to 1. Source configuration Connect the other source to the Icecast server with the same parameters defined in the /etc/airtime/liquidsoap.cfg file, except for the mount point. This should one of the mount points you have defined in the /etc/icecast2/icecast.xml file, such as /live.ogg in the example above. To configure Mixxx for streaming to Icecast, click Options , Preferences , then Live Broadcasting . For server Type , select the default of Icecast 2 when streaming to Debian or Ubuntu servers, as this is the current version of Icecast supplied with those GNU/Linux distributions. By default, Icecast streams are buffered to guard against network problems, which causes latency for remote listeners. When monitoring the stream from a remote location, you may have to begin the live stream a few seconds before the previous stream ends to enable a smooth transition.","title":"Icecast Handover"},{"location":"manual/icecast-handover/#source-configuration","text":"Connect the other source to the Icecast server with the same parameters defined in the /etc/airtime/liquidsoap.cfg file, except for the mount point. This should one of the mount points you have defined in the /etc/icecast2/icecast.xml file, such as /live.ogg in the example above. To configure Mixxx for streaming to Icecast, click Options , Preferences , then Live Broadcasting . For server Type , select the default of Icecast 2 when streaming to Debian or Ubuntu servers, as this is the current version of Icecast supplied with those GNU/Linux distributions. By default, Icecast streams are buffered to guard against network problems, which causes latency for remote listeners. When monitoring the stream from a remote location, you may have to begin the live stream a few seconds before the previous stream ends to enable a smooth transition.","title":"Source configuration"},{"location":"manual/icecast-statistics-with-piwik/","text":"Piwik ( http://piwik.org/ ) is an open source web analytics platform which supports Icecast's log format, in Piwik version 2.0 or later. For your convenience, packages of Piwik for Debian and Ubuntu are provided in the http://apt.sourcefabric.org repository. If you have already configured your LibreTime server for this repository, you can install the piwik package and its dependencies with the command: sudo apt-get install piwik php5-geoip php5-cli mysql-server For security reasons, you should set a strong root password for the MySQL server. If you have not set a MySQL root password already, you should be promoted to do this during the installation of the mysql-server package. Database and web server configuration Piwik uses a MySQL database which must be created manually before you can use the Piwik web interface. Log into the database management system with the root password that you set for the MySQL server: mysql -uroot -p Enter password: The server should respond with: Welcome to the MySQL monitor. Commands end with ; or \\g. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. mysql> At the mysql command prompt, create a database named piwik with the command: CREATE DATABASE piwik / !40100 DEFAULT CHARACTER SET utf8 /; Create a MySQL user and a strong password with access to the database previously created: CREATE USER piwik@localhost IDENTIFIED BY 'my-strong-password'; GRANT ALL PRIVILEGES ON piwik. to piwik@localhost; GRANT FILE ON .* TO piwik@localhost; QUIT Create a virtual host for the piwik web interface in /etc/apache2/sites-available/piwik-vhost.conf setting the ServerName as appropriate for your server: ServerName stats.example.com DocumentRoot /usr/share/piwik Include \"conf.d/piwik.conf\" Enable the virtual host and reload the web server: sudo a2ensite pwiki-vhost.conf sudo invoke-rc.d apache2 reload Open the ServerName that you set for Piwik in your browser. You should see the Piwik setup pages. Provide the MySQL database and Piwik Super User details when requested. If you intended to use Piwik for Icecast statistics only, you can skip the step JavaScript Tracking Code . Uncomment the last line in the crontab file /etc/cron.d/piwik and set your Piwik ServerName to enable automatic archiving every five minutes: 5 * * www-data [ -e /usr/share/piwik/misc/cron/archive.php ] && [ -x /usr/bin/php ] && /usr/bin/php /usr/share/piwik/misc/cron/archive.php -- \"url=http://stats.example.com/\" >/dev/null 2>&1 See http://piwik.org/docs/ for more details of Piwik installation and configuration. Configure Piwik for geolocation By default, Piwik uses browser language settings to guess the countries in which your station's audience is physically located. In order to satisfy broadcast regulators and music royalty collection societies, a more accurate method is required, based on the location of individual IP addresses. Edit the file /etc/php5/apache2/conf.d/20-geoip.ini to set the path to your Piwik installation: extension=geoip.so geoip.custom_directory=/usr/share/piwik/misc Then restart the web server for the change to take effect: sudo invoke-rc.d apache2 restart Download GeoLite data from MaxMind's website http://dev.maxmind.com/geoip/legacy/geolite/ under the Creative Commons Attribution-ShareAlike 3.0 Unported License , for example: wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz Unzip and set permissions on the data file, then move it to the misc directory under the Piwik install directory and rename it to GeoIPCity.dat : gunzip GeoLiteCity.dat.gz chmod 644 GeoLiteCity.dat sudo mv GeoLiteCity.dat /usr/share/piwik/misc/GeoIPCity.dat In the Piwik web interface click Settings in the top right corner, then Geolocation in the left side menu. Change the setting from Default to GeoIP (PECL) . Optionally, configure Setup automatic updates of GeoIP databases at the end of the Geolocation page. Importing an Icecast log file In addition to the JavaScript tracking code used for web analytics, Piwik includes a Python script which can import a server log file directly. This script accepts the parameter --log-format-name=icecast2 which enables support for the connection duration field logged by Icecast when a client disconnects. It is this field which enables stations to track the duration of individual audience connections, and calculate both the average connection duration and the 'aggregate tuning hours' figure required by some broadcast regulators. For an Icecast log file at /var/log/icecast2/access.log you can run the script as follows: python /usr/share/piwik/misc/log-analytics/import_logs.py --show-progress --url=http://stats.example.com --idsite=1 --recorders=8 --enable-http-errors --log-format-name=icecast2 --strip-query-string /var/log/icecast2/access.log where the parameters are: --url=http://stats.example.com The ServerName of your Piwik installation. --idsite=1 Number of the default site configured in Piwik. --recorders=8 How many threads to use while parsing the log file. To begin with, set this value to the number of CPU cores you can spare on the Piwik server. --enable-http-errors Collect statistics for errors, such as stream links not found. --strip-query-string Used because any characters requested by the client after the Icecast mounpoint URL can confuse the statistics. If the Piwik server is remote, you can use an additional parameter --token_auth= to authenticate the request. You can find the token to use for your installation by logging in to Piwik and clicking API in the main navigation menu at the top of the page. Further details of the import script are shown at http://piwik.org/docs/log-analytics-tool-how-to/ The script will report the number of records processed and the time that has been required to parse the Icecast log file. If the import script is taking too long to execute, there are performance and configuration tips in the https://github.com/piwik/piwik/blob/master/misc/log-analytics/README.md file. Open the Piwik dashboard in your browser, and you should now see a summary of the imported data, including the most popular streams (listed under Entry Pages ), Visits by Server Time , Referrer Websites and a Visitor Map .","title":"Icecast Statistics with Piwik"},{"location":"manual/icecast-statistics-with-piwik/#database-and-web-server-configuration","text":"Piwik uses a MySQL database which must be created manually before you can use the Piwik web interface. Log into the database management system with the root password that you set for the MySQL server: mysql -uroot -p Enter password: The server should respond with: Welcome to the MySQL monitor. Commands end with ; or \\g. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. mysql> At the mysql command prompt, create a database named piwik with the command: CREATE DATABASE piwik / !40100 DEFAULT CHARACTER SET utf8 /; Create a MySQL user and a strong password with access to the database previously created: CREATE USER piwik@localhost IDENTIFIED BY 'my-strong-password'; GRANT ALL PRIVILEGES ON piwik. to piwik@localhost; GRANT FILE ON .* TO piwik@localhost; QUIT Create a virtual host for the piwik web interface in /etc/apache2/sites-available/piwik-vhost.conf setting the ServerName as appropriate for your server: ServerName stats.example.com DocumentRoot /usr/share/piwik Include \"conf.d/piwik.conf\" Enable the virtual host and reload the web server: sudo a2ensite pwiki-vhost.conf sudo invoke-rc.d apache2 reload Open the ServerName that you set for Piwik in your browser. You should see the Piwik setup pages. Provide the MySQL database and Piwik Super User details when requested. If you intended to use Piwik for Icecast statistics only, you can skip the step JavaScript Tracking Code . Uncomment the last line in the crontab file /etc/cron.d/piwik and set your Piwik ServerName to enable automatic archiving every five minutes: 5 * * www-data [ -e /usr/share/piwik/misc/cron/archive.php ] && [ -x /usr/bin/php ] && /usr/bin/php /usr/share/piwik/misc/cron/archive.php -- \"url=http://stats.example.com/\" >/dev/null 2>&1 See http://piwik.org/docs/ for more details of Piwik installation and configuration.","title":"Database and web server configuration"},{"location":"manual/icecast-statistics-with-piwik/#configure-piwik-for-geolocation","text":"By default, Piwik uses browser language settings to guess the countries in which your station's audience is physically located. In order to satisfy broadcast regulators and music royalty collection societies, a more accurate method is required, based on the location of individual IP addresses. Edit the file /etc/php5/apache2/conf.d/20-geoip.ini to set the path to your Piwik installation: extension=geoip.so geoip.custom_directory=/usr/share/piwik/misc Then restart the web server for the change to take effect: sudo invoke-rc.d apache2 restart Download GeoLite data from MaxMind's website http://dev.maxmind.com/geoip/legacy/geolite/ under the Creative Commons Attribution-ShareAlike 3.0 Unported License , for example: wget http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz Unzip and set permissions on the data file, then move it to the misc directory under the Piwik install directory and rename it to GeoIPCity.dat : gunzip GeoLiteCity.dat.gz chmod 644 GeoLiteCity.dat sudo mv GeoLiteCity.dat /usr/share/piwik/misc/GeoIPCity.dat In the Piwik web interface click Settings in the top right corner, then Geolocation in the left side menu. Change the setting from Default to GeoIP (PECL) . Optionally, configure Setup automatic updates of GeoIP databases at the end of the Geolocation page.","title":"Configure Piwik for geolocation"},{"location":"manual/icecast-statistics-with-piwik/#importing-an-icecast-log-file","text":"In addition to the JavaScript tracking code used for web analytics, Piwik includes a Python script which can import a server log file directly. This script accepts the parameter --log-format-name=icecast2 which enables support for the connection duration field logged by Icecast when a client disconnects. It is this field which enables stations to track the duration of individual audience connections, and calculate both the average connection duration and the 'aggregate tuning hours' figure required by some broadcast regulators. For an Icecast log file at /var/log/icecast2/access.log you can run the script as follows: python /usr/share/piwik/misc/log-analytics/import_logs.py --show-progress --url=http://stats.example.com --idsite=1 --recorders=8 --enable-http-errors --log-format-name=icecast2 --strip-query-string /var/log/icecast2/access.log where the parameters are: --url=http://stats.example.com The ServerName of your Piwik installation. --idsite=1 Number of the default site configured in Piwik. --recorders=8 How many threads to use while parsing the log file. To begin with, set this value to the number of CPU cores you can spare on the Piwik server. --enable-http-errors Collect statistics for errors, such as stream links not found. --strip-query-string Used because any characters requested by the client after the Icecast mounpoint URL can confuse the statistics. If the Piwik server is remote, you can use an additional parameter --token_auth= to authenticate the request. You can find the token to use for your installation by logging in to Piwik and clicking API in the main navigation menu at the top of the page. Further details of the import script are shown at http://piwik.org/docs/log-analytics-tool-how-to/ The script will report the number of records processed and the time that has been required to parse the Icecast log file. If the import script is taking too long to execute, there are performance and configuration tips in the https://github.com/piwik/piwik/blob/master/misc/log-analytics/README.md file. Open the Piwik dashboard in your browser, and you should now see a summary of the imported data, including the most popular streams (listed under Entry Pages ), Visits by Server Time , Referrer Websites and a Visitor Map .","title":"Importing an Icecast log file"},{"location":"manual/interface-customization/","text":"Modifying the LibreTime interface The LibreTime administration interface, as a web application, is fully customizable using the same methods that you might use to modify a website. For instance, you may wish to increase certain font sizes or change the colours in the LibreTime interface to better suit staff users with impaired vision. To do this, open one of the CSS files in the /public/css/ directory under the LibreTime DocumentRoot directory in an editor such as nano : sudo nano /usr/share/airtime/public/css/styles.css To change the background colour of the administration interface from dark gray to white, the background: property of the body tag could be changed to #ffffff as follows: body { font-size: 62.5%; font-family:Arial, Helvetica, sans-serif; background: #ffffff; margin: 0; padding: 0; } Save the file with Ctrl+O , then refresh your browser to see the change to the interface background colour. Any custom changes that you make to the administration interface should be backed up before upgrading LibreTime to a newer version, otherwise they could be overwritten. If you have made improvements that you think might be useful to other LibreTime users, please contact LibreTime and tell us about them. Modifying the LibreTime Radio Page The background of the mini-site that appears when you visit the server's domain in your web browser can be changed by modifying the page's CSS file, located at /usr/share/airtime/php/airtime_mvc/public/css/radio-page/radio-page.css . html { background: url(\"img/background-testing-3.jpg\") no-repeat center center fixed; -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; background-size: cover; overflow-y: auto; } Place the new background image in the /usr/share/airtime/public/css/radio-page/img/ folder and change the background: entry's URL to point to the new image. The new image should be at least 1280 x 720 in pixel size to avoid being blurry. Modifying the Icecast interface If you have installed Icecast, in the directory /etc/icecast2/web/ you will find several XSLT and other files which are used to generate the Icecast web interface. If you are familiar with HTML you should be able to modify these pages, as they are well commented. You do have to be careful with syntax, because something as simple as a missing bracket can cause the Icecast web interface to break down. For example, you could change the status.xsl page: sudo nano /etc/icecast2/web/status.xsl Modifying the status.xsl page is a good place to start, because this is the default page that site visitors see when they browse port 8000 on your Icecast server. The most obvious change to make in the XSLT pages is the content of the <title> and <h2> tags, to announce the name of your station. You can also modify the style.css file in this directory to change colour and layout options. After saving the file with Ctrl+O, refresh your web browser, and the new look should now be visible.","title":"Interface Customization"},{"location":"manual/interface-customization/#modifying-the-libretime-interface","text":"The LibreTime administration interface, as a web application, is fully customizable using the same methods that you might use to modify a website. For instance, you may wish to increase certain font sizes or change the colours in the LibreTime interface to better suit staff users with impaired vision. To do this, open one of the CSS files in the /public/css/ directory under the LibreTime DocumentRoot directory in an editor such as nano : sudo nano /usr/share/airtime/public/css/styles.css To change the background colour of the administration interface from dark gray to white, the background: property of the body tag could be changed to #ffffff as follows: body { font-size: 62.5%; font-family:Arial, Helvetica, sans-serif; background: #ffffff; margin: 0; padding: 0; } Save the file with Ctrl+O , then refresh your browser to see the change to the interface background colour. Any custom changes that you make to the administration interface should be backed up before upgrading LibreTime to a newer version, otherwise they could be overwritten. If you have made improvements that you think might be useful to other LibreTime users, please contact LibreTime and tell us about them.","title":"Modifying the LibreTime interface"},{"location":"manual/interface-customization/#modifying-the-libretime-radio-page","text":"The background of the mini-site that appears when you visit the server's domain in your web browser can be changed by modifying the page's CSS file, located at /usr/share/airtime/php/airtime_mvc/public/css/radio-page/radio-page.css . html { background: url(\"img/background-testing-3.jpg\") no-repeat center center fixed; -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; background-size: cover; overflow-y: auto; } Place the new background image in the /usr/share/airtime/public/css/radio-page/img/ folder and change the background: entry's URL to point to the new image. The new image should be at least 1280 x 720 in pixel size to avoid being blurry.","title":"Modifying the LibreTime Radio Page"},{"location":"manual/interface-customization/#modifying-the-icecast-interface","text":"If you have installed Icecast, in the directory /etc/icecast2/web/ you will find several XSLT and other files which are used to generate the Icecast web interface. If you are familiar with HTML you should be able to modify these pages, as they are well commented. You do have to be careful with syntax, because something as simple as a missing bracket can cause the Icecast web interface to break down. For example, you could change the status.xsl page: sudo nano /etc/icecast2/web/status.xsl Modifying the status.xsl page is a good place to start, because this is the default page that site visitors see when they browse port 8000 on your Icecast server. The most obvious change to make in the XSLT pages is the content of the <title> and <h2> tags, to announce the name of your station. You can also modify the style.css file in this directory to change colour and layout options. After saving the file with Ctrl+O, refresh your web browser, and the new look should now be visible.","title":"Modifying the Icecast interface"},{"location":"manual/interface-localization/","text":"The LibreTime administration interface can be localized using the standard GNU gettext method. Using GitHub for this task means you don't have to tackle the whole of a localization yourself; just as much as you can manage. First, you should check if a localization is already under way for your locale of choice. The best way to do this is to take a look at the 'master' branch in the GitHub repository for LibreTime at https://github.com/LibreTime/libretime . You can also ask in the LibreTime development forum at https://discourse.libretime.org/ , where you might find community members who can help you with the translation. GNU gettext means using a .po file for each language or dialect, a specially formatted plain text file with groups of three or more lines, like this example from LibreTime's Korean localization: #: airtime_mvc/application/configs/navigation.php:57 msgid \"Media Folders\" msgstr \"\ubbf8\ub514\uc5b4 \ud3f4\ub354\" The first of these three lines starts with the hash symbol, and references where this string of text is found in the source code by its file name and line number. If this string is found more than once in the source code, you will see other reference lines here. The second line contains the msgid , which is the original version of the string. The third line contains the msgstr , which is the translation of that string for the localization that this particular .po file relates to. If you use the cross-platform program Poedit ( http://www.poedit.net/ ) to edit the .po file, this formatting of the text is hidden by an easy-to-use GUI. The poedit package can be installed on most GNU/Linux distributions using the standard software installer. Versions of Poedit for Mac and Windows are available for free download from the project's homepage. Before manually translating strings in Poedit from scratch, you should take a look at the online translation services available, such as Lingohub ( https://lingohub.com ) or Google's Translator Toolkit ( http://translate.google.com/toolkit/ ), which both support gettext .po files. If using automatic translation, you can then use Poedit to fine-tune the localization and fix any formatting errors. If you don't already have a GitHub account, you can sign up at https://github.com/signup/free . Once you have a GitHub account, you can fork a copy ( https://help.github.com/articles/fork-a-repo ) of the LibreTime project. Work for the next major version of the software is done in the master branch of each project, so that's the branch to checkout after you have made the initial git clone . In the locale code de_CH , for example, de represents the German language and the suffix _CH indicates the dialect spoken in Switzerland. Some languages have a wide variety of dialect localizations, which can be differentiated with a suffix in this way. You should update the header information in the .po file, which includes the language code and a country code, using one of the existing .po files as a guide. After forking the LibreTime git repository, make sure you're in the master branch: git branch devel * master Create a new locale directory (e.g. airtime_mvc/locale/de_CH/LC_MESSAGES/ for German as spoken in Switzerland): mkdir -p airtime_mvc/locale/de_CH/LC_MESSAGES/ Copy the template airtime.po file into the directory you just created: cp airtime_mvc_locale/template/airtime.po airtime_mvc/locale/de_CH/LC_MESSAGES and update the header information in the new copy of the airtime.po file using the nano editor: nano airtime_mvc/locale/de_CH/LC_MESSAGES/airtime.po For the example of Swiss German, the header of the file should now look like this: # SWISS GERMAN (de_CH) translation for LibreTime. # Copyright (C) 2013 Sourcefabric # This file is distributed under the same license as the LibreTime package. # Sourcefabric <contact@sourcefabric.org>, 2013. # msgid \"\" msgstr \"\" \"Project-Id-Version: LibreTime 3.0-Alpha\\n\" \"Report-Msgid-Bugs-To: https://discourse.libretime.org/\\n\" After using an online translation tool to begin a new localization, you can load the exported .po file into Poedit and complete your translation there. Enter the localization team's contact information and language into Poedit's Edit -> Preferences and Catalog -> Settings dialogs, which will be added to the .po file. When you save a .po file in Poedit, the corresponding binary .mo file will be compiled automatically. Finally, git add , git commit and git push these new .mo and .po files to your GitHub fork of the project, and send a git pull request ( https://help.github.com/articles/using-pull-requests ) to the LibreTime developers. The localization can then be added to a forthcoming LibreTime release. If you don't want to work with git, that's no problem - download a copy of the .po template file, edit the header, run it through an automatic translator and check it with Poedit. Then email your contribution to the LibreTime team as an attachment - it will be very welcome! However, learning to use git is a good idea, because it means you can work directly on the current source code, share the localization work with the LibreTime community, and avoid duplicated effort.","title":"Interface Localization"},{"location":"manual/listen/","text":"In the Master Panel, beneath the ON AIR indicator, you will find the LISTEN button. This button opens a pop-up Live stream window, which enables you to monitor the streams that have been configured previously in the Streams page on the System menu. In the Live stream window, a drop-down menu enables you to switch between the streams which are currently available. Both the streaming server and name of the stream are shown. Your station logo is shown in the top left corner of the window, if you have uploaded one via the Preferences page on the System menu. Beneath the drop-down menu for stream selection is an orange volume control bar. This volume control only adjusts the output level of the pop-up Live Stream window, not the output level of the LibreTime server itself. To adjust output level between muted and maximum, click on the corresponding place in the orange bar, with maximum level on the right side. Click on the left side speaker icon to mute the output. To display the URL of the stream you are monitoring, so that you can copy and paste it into an email or web page, click the Share button. Click the X icon to the right of the URL to return to the drop-down menu of available streams. When you have finished monitoring the streams, you can close the pop-up window in the normal way, depending on the browser you are using. In Firefox, you can close the window by clicking the X button in the top right corner. This action will not shut down the output from the LibreTime server, only the stream monitoring on your desktop computer or laptop.","title":"Listen"},{"location":"manual/listener-stats/","text":"The Listener Stats page on the Analytics menu shows graphs of listener connections to the configured streaming servers for the selected date and time range. On the right side, a green Status indicator shows OK if the connection to the streaming server is active. If the status indicator is red, check that the Admin User and Admin Password settings are correct under Additional Options for the named mount point, such as libretime_128 , on the Streams page of the Settings menu. By default, statistics for the last 24 hours of streaming are shown. To change this date and time range, click the calendar and clock icons in the lower left corner of the page, then click the magnifying glass icon. To choose which particular streams should have statistics displayed, click the check boxes for the individual colour-coded mount points, just below the graph.","title":"Listener Stats"},{"location":"manual/live-shows-with-mixxx/","text":"Mixxx is a cross-platform Open Source application for DJs, available from http://www.mixxx.org/ Installed on a desktop or laptop computer, Mixxx complements your LibreTime server to provide a complete system for both live and scheduled broadcasting. Although Mixxx has many features designed for dance music DJs that require beat matching and pitch independent time stretching, the program can be used for any kind of manually triggered broadcast playout, including live speech shows such as news or current affairs. Mixxx supports a wide variety of popular hardware control surfaces, which can be connected to your computer using a USB cable. A control surface might replace or augment an analogue mixer in your studio, depending on your live mixing and playout requirements. Sound cards If you wish to use LibreTime and Mixxx on the same machine, you will need two or more sound cards, as each program requires exclusive access to the sound hardware. Otherwise, you may see an error message that Mixxx cannot access the sound device. The solution is to configure Mixxx to use additional sound cards by clicking Options , Preferences , then Sound Hardware in the main Mixxx menu. Select devices other than the ALSA default of hw:0,0 for at least the Master and Headphones outputs. Then click the OK button. Sharing storage If you make the LibreTime server's storage directory /srv/airtime/stor/ accessible to a desktop machine as a read-only location, Mixxx will accept that location as its default music library when starting up for the first time. (This location can also be configured after installation by clicking Options , Preferences , then Library in the main Mixxx menu). You may need to adjust file and directory permissions so that the storage directory has read access from the desktop user account. Enabling write access directly to the storage server is not recommended, as this would allow desktop users to delete files which might be needed for playout later. If the filesystem path has been configured correctly, the metadata for the files in the LibreTime storage server will be displayed in the main window of the Mixxx interface. Individual files from the LibreTime storage server can then be added to either of Mixxx's live players with a right-click on the filename, or by using the appropriate hardware buttons on a control surface. Therefore it is possible to manage the station's storage archive remotely and collaboratively through LibreTime, while using Mixxx as the live playout client in multiple, remote studios. The LibreTime storage archive can be exported like any other file server share. The method that you implement would depend on the operating system of your desktop client machines, and whether they were on the same local network as the LibreTime server, or remote. For performance and redundancy reasons it is advisable to cache files required for a particular show on the client machine where Mixxx is installed. For example, for a GNU/Linux client machine, a nightly rsync download of new media in the archive would guard against network problems at playout time potentially disrupting a broadcast at a remote studio. Mixxx users can also record a show, and then upload it through the LibreTime web interface on a local or remote server for collaborative or user-generated broadcasts. Streaming from Mixxx into LibreTime Mixxx 1.9.0 or later includes a live streaming client which, like LibreTime, is compatible with the Icecast and SHOUTcast media servers. This feature can also be used to stream from Mixxx directly into LibreTime, using either the Show Source or Master Source . To configure Mixxx for streaming into LibreTime, click Options , Preferences , then Live Broadcasting on the main Mixxx menu. For server Type , select the default of Icecast 2 . For Host , Mount , Port , Login and Password , use the Input Stream Settings configured in the LibreTime Streams page, on LibreTime's System menu. See the chapter Stream settings for remote input connection details.","title":"Live Shows with Mixxx"},{"location":"manual/live-shows-with-mixxx/#sound-cards","text":"If you wish to use LibreTime and Mixxx on the same machine, you will need two or more sound cards, as each program requires exclusive access to the sound hardware. Otherwise, you may see an error message that Mixxx cannot access the sound device. The solution is to configure Mixxx to use additional sound cards by clicking Options , Preferences , then Sound Hardware in the main Mixxx menu. Select devices other than the ALSA default of hw:0,0 for at least the Master and Headphones outputs. Then click the OK button.","title":"Sound cards"},{"location":"manual/live-shows-with-mixxx/#sharing-storage","text":"If you make the LibreTime server's storage directory /srv/airtime/stor/ accessible to a desktop machine as a read-only location, Mixxx will accept that location as its default music library when starting up for the first time. (This location can also be configured after installation by clicking Options , Preferences , then Library in the main Mixxx menu). You may need to adjust file and directory permissions so that the storage directory has read access from the desktop user account. Enabling write access directly to the storage server is not recommended, as this would allow desktop users to delete files which might be needed for playout later. If the filesystem path has been configured correctly, the metadata for the files in the LibreTime storage server will be displayed in the main window of the Mixxx interface. Individual files from the LibreTime storage server can then be added to either of Mixxx's live players with a right-click on the filename, or by using the appropriate hardware buttons on a control surface. Therefore it is possible to manage the station's storage archive remotely and collaboratively through LibreTime, while using Mixxx as the live playout client in multiple, remote studios. The LibreTime storage archive can be exported like any other file server share. The method that you implement would depend on the operating system of your desktop client machines, and whether they were on the same local network as the LibreTime server, or remote. For performance and redundancy reasons it is advisable to cache files required for a particular show on the client machine where Mixxx is installed. For example, for a GNU/Linux client machine, a nightly rsync download of new media in the archive would guard against network problems at playout time potentially disrupting a broadcast at a remote studio. Mixxx users can also record a show, and then upload it through the LibreTime web interface on a local or remote server for collaborative or user-generated broadcasts.","title":"Sharing storage"},{"location":"manual/live-shows-with-mixxx/#streaming-from-mixxx-into-libretime","text":"Mixxx 1.9.0 or later includes a live streaming client which, like LibreTime, is compatible with the Icecast and SHOUTcast media servers. This feature can also be used to stream from Mixxx directly into LibreTime, using either the Show Source or Master Source . To configure Mixxx for streaming into LibreTime, click Options , Preferences , then Live Broadcasting on the main Mixxx menu. For server Type , select the default of Icecast 2 . For Host , Mount , Port , Login and Password , use the Input Stream Settings configured in the LibreTime Streams page, on LibreTime's System menu. See the chapter Stream settings for remote input connection details.","title":"Streaming from Mixxx into LibreTime"},{"location":"manual/media-folders/","text":"LibreTime's media library is inside the /srv/airtime/stor/ folder on your server, by default. Tracks are uploaded into the imported subdirectory and then a separate directory based upon the user ID # of the user who uploaded it and then into a folder based upon the artist. LibreTime unlike Airtime does not currently monitor the files for changes after they are uploaded. The media library is not designed to be edited directly after files are uploaded. This was done as part of a move towards enabling cloud-based file hosting. There are currently two works in progress to support filesystem imports and sync but neither of them have been finished as of the time of this writing. See #111 and #514 . In addition LibreTime does not write metadata changes back to the files. See #621","title":"Media Folders"},{"location":"manual/my-podcast/","text":"TBD","title":"My Podcast"},{"location":"manual/on-air-in-60-seconds/","text":"On Air in 60 Seconds Here's how you can use LibreTime to manage your broadcasts. Chapter names in this book are shown in italics , to help you find the details of each step (if you need to read more). Log in to your LibreTime server with your Username and Password ( Getting started ). Add your files to the LibreTime library by clicking Upload on the left menu, selecting the track type (ie. Music, Show Intros, Station IDs), then clicking on the the Drop files here or click to browse your computer area. You can drag and drop your files into this window too. The upload will start as soon as you drop a file ( Add media ). Create a show by clicking Calendar on the main menu, and then clicking the New Show button ( Calendar ). Only admins and program managers can add shows ( Users ). Set a name for your show in the What section of the box, and a date and time in the When section, then click the + Add this show button at the end of the page ( Calendar ). Add media to the new show by clicking the name of your show in the Calendar and selecting Schedule Tracks ( Calendar ). Search for the media in the left side of the pop-up window which will appear, and drag it into your show on the right side ( Now Playing ). You're on air! Click the Listen button to hear available streams.","title":"On Air in 60 seconds!"},{"location":"manual/on-air-in-60-seconds/#on-air-in-60-seconds","text":"Here's how you can use LibreTime to manage your broadcasts. Chapter names in this book are shown in italics , to help you find the details of each step (if you need to read more). Log in to your LibreTime server with your Username and Password ( Getting started ). Add your files to the LibreTime library by clicking Upload on the left menu, selecting the track type (ie. Music, Show Intros, Station IDs), then clicking on the the Drop files here or click to browse your computer area. You can drag and drop your files into this window too. The upload will start as soon as you drop a file ( Add media ). Create a show by clicking Calendar on the main menu, and then clicking the New Show button ( Calendar ). Only admins and program managers can add shows ( Users ). Set a name for your show in the What section of the box, and a date and time in the When section, then click the + Add this show button at the end of the page ( Calendar ). Add media to the new show by clicking the name of your show in the Calendar and selecting Schedule Tracks ( Calendar ). Search for the media in the left side of the pop-up window which will appear, and drag it into your show on the right side ( Now Playing ). You're on air! Click the Listen button to hear available streams.","title":"On Air in 60 Seconds"},{"location":"manual/playlists/","text":"Creating a new playlist You can create a new playlist on the toolbar of the Playlists page. At first, the new playlist will be shown as Untitled Playlist . Click the pencil icon on the right to give the playlist a name. Type the name you have chosen, then press the Enter key on your keyboard to save the new name. You can edit the name of the playlist later, by clicking on the pencil icon again. Click the link View / edit description to expand a box where you can enter a Description for the playlist, then click the Save button. Setting good quality metadata here will help you find the playlist using the search box later, so you should be as descriptive as possible. Adding content to a playlist With a playlist open, drag and drop items from the search results on the left into the playlist on the right. Jingles and voice tracks can be added before, after or between music items. After adding files to the playlist, the total playlist time is displayed in the top right corner. The duration of an individual file is shown in each row of the playlist in a white font, and beneath this figure the time since the beginning of the playlist is displayed in a smaller light grey font. This elapsed time figure can be used as a time check for voice tracks, although this option may limit the re-usability of the voice track. To audition a playlist file in your web browser, click the white triangle button on the left side of its row. (If the format of the file is not supported by your browser, the triangle in this button will be greyed out). If audition of the file format is supported, a pop-up window will open, with the playlist starting at the file you clicked. Click the small white x icon on the right hand side of each row to remove a file from the playlist. You can also drag and drop files to re-order them, or click the Shuffle button to re-order files automatically. To adjust start and end fades, click the playlist Fade button (two horizontal white arrows crossing in a grey rectangle), to the left of the Delete and Save buttons. This action opens a beige bar in which you can set the Fade in duration for the first item in this playlist, and the Fade out duration for the last item. This duration figure represents the length of the fade, in seconds and tenths of a second, not the time at which the fade takes place. The default fade duration is set in the Preferences page on the System menu. When your playlist is complete, click the New button in the top left corner to create another playlist, click the close icon (a white cross in a black circle) in the top right corner, or browse to another page of the LibreTime interface. If you want to edit the playlist content or metadata later, you can find it by Title , Creator , Last Modified date, Length , Owner or Year using one of the search tools on the Library page. Click the playlist in the search results list, and then click Edit from the pop-up menu. You can also Preview the entire playlist in a pop-up audition window, Duplicate or Delete one of your playlists from this menu.","title":"Playlists"},{"location":"manual/playlists/#creating-a-new-playlist","text":"You can create a new playlist on the toolbar of the Playlists page. At first, the new playlist will be shown as Untitled Playlist . Click the pencil icon on the right to give the playlist a name. Type the name you have chosen, then press the Enter key on your keyboard to save the new name. You can edit the name of the playlist later, by clicking on the pencil icon again. Click the link View / edit description to expand a box where you can enter a Description for the playlist, then click the Save button. Setting good quality metadata here will help you find the playlist using the search box later, so you should be as descriptive as possible.","title":"Creating a new playlist"},{"location":"manual/playlists/#adding-content-to-a-playlist","text":"With a playlist open, drag and drop items from the search results on the left into the playlist on the right. Jingles and voice tracks can be added before, after or between music items. After adding files to the playlist, the total playlist time is displayed in the top right corner. The duration of an individual file is shown in each row of the playlist in a white font, and beneath this figure the time since the beginning of the playlist is displayed in a smaller light grey font. This elapsed time figure can be used as a time check for voice tracks, although this option may limit the re-usability of the voice track. To audition a playlist file in your web browser, click the white triangle button on the left side of its row. (If the format of the file is not supported by your browser, the triangle in this button will be greyed out). If audition of the file format is supported, a pop-up window will open, with the playlist starting at the file you clicked. Click the small white x icon on the right hand side of each row to remove a file from the playlist. You can also drag and drop files to re-order them, or click the Shuffle button to re-order files automatically. To adjust start and end fades, click the playlist Fade button (two horizontal white arrows crossing in a grey rectangle), to the left of the Delete and Save buttons. This action opens a beige bar in which you can set the Fade in duration for the first item in this playlist, and the Fade out duration for the last item. This duration figure represents the length of the fade, in seconds and tenths of a second, not the time at which the fade takes place. The default fade duration is set in the Preferences page on the System menu. When your playlist is complete, click the New button in the top left corner to create another playlist, click the close icon (a white cross in a black circle) in the top right corner, or browse to another page of the LibreTime interface. If you want to edit the playlist content or metadata later, you can find it by Title , Creator , Last Modified date, Length , Owner or Year using one of the search tools on the Library page. Click the playlist in the search results list, and then click Edit from the pop-up menu. You can also Preview the entire playlist in a pop-up audition window, Duplicate or Delete one of your playlists from this menu.","title":"Adding content to a playlist"},{"location":"manual/podcasts/","text":"The Podcasts page The Podcasts page allows you add subscriptions to podcasts which are often used to syndicated audio files using a URL called a RSS feed. This allows your LibreTime instance to automatically download new shows from the web. In order to add a podcast you need to get the RSS feed. All podcasts available on iTunes have a RSS feed but it is sometimes hidden. See this issue on our github page #510 for more information. RSS feeds that do not end in .xml may be accepted by LibreTime but might fail to download episodes; in that case, download the episode using a podcast client such as gpodder and then manually upload and schedule the episode. Podcast feeds coming from Anchor.fm have been known to have this issue. The podcast interfaces provides you with the ability to generate Smartblocks that can be used in conjunction with Autoloading Playlists to schedule the newest episode of a podcast without human intervention. Video Tutorials How to schedule a podcast to play the latest episode automatically Dashboard The podcasts dashboard is similar to the tracks view, allowing you to add, edit, and remove podcasts by the toolbar, in addition to sorting by columns. Podcast feeds themselves cannot be searched (ie. to search for Background Briefing , as per the screenshot). To add a podcast, click on the + Add button on the toolbar and provide the podcast's RSS feed, which usually ends in .xml . Once the podcast's feed is recognized, the editor pane opens for the podcast. Editor In the podcasts editor, you can rename the podcast, update settings for the podcast, and manage episodes. A search box is available to search for episodes within the feed. To import an episode directly into LibreTime, double-click on an episode or select it and click + Import . The podcast will appear under tracks with the Podcast Name as the Album. To delete an episode from LibreTime, select the episode and click on the red trash can on the toolbar. If you would like LibreTime to automatically download the latest episodes of a podcast, make sure Download latest episodes is checked. This can be used in conjunction with Smartblocks and Playlists to automate downloading and scheduling shows that are received via. podcast feed.","title":"Podcasts"},{"location":"manual/podcasts/#the-podcasts-page","text":"The Podcasts page allows you add subscriptions to podcasts which are often used to syndicated audio files using a URL called a RSS feed. This allows your LibreTime instance to automatically download new shows from the web. In order to add a podcast you need to get the RSS feed. All podcasts available on iTunes have a RSS feed but it is sometimes hidden. See this issue on our github page #510 for more information. RSS feeds that do not end in .xml may be accepted by LibreTime but might fail to download episodes; in that case, download the episode using a podcast client such as gpodder and then manually upload and schedule the episode. Podcast feeds coming from Anchor.fm have been known to have this issue. The podcast interfaces provides you with the ability to generate Smartblocks that can be used in conjunction with Autoloading Playlists to schedule the newest episode of a podcast without human intervention.","title":"The Podcasts page"},{"location":"manual/podcasts/#video-tutorials","text":"How to schedule a podcast to play the latest episode automatically","title":"Video Tutorials"},{"location":"manual/podcasts/#dashboard","text":"The podcasts dashboard is similar to the tracks view, allowing you to add, edit, and remove podcasts by the toolbar, in addition to sorting by columns. Podcast feeds themselves cannot be searched (ie. to search for Background Briefing , as per the screenshot). To add a podcast, click on the + Add button on the toolbar and provide the podcast's RSS feed, which usually ends in .xml . Once the podcast's feed is recognized, the editor pane opens for the podcast.","title":"Dashboard"},{"location":"manual/podcasts/#editor","text":"In the podcasts editor, you can rename the podcast, update settings for the podcast, and manage episodes. A search box is available to search for episodes within the feed. To import an episode directly into LibreTime, double-click on an episode or select it and click + Import . The podcast will appear under tracks with the Podcast Name as the Album. To delete an episode from LibreTime, select the episode and click on the red trash can on the toolbar. If you would like LibreTime to automatically download the latest episodes of a podcast, make sure Download latest episodes is checked. This can be used in conjunction with Smartblocks and Playlists to automate downloading and scheduling shows that are received via. podcast feed.","title":"Editor"},{"location":"manual/preparing-media-for-ingest/","text":"Before uploading media to an LibreTime server, there are a number of factors which should be considered. Getting your ingest workflow right will save you a lot of time later. Metadata quality LibreTime automatically imports any metadata that is in the files' ID3 tags. If these tags are incorrect or are missing information, you will have to either edit the metadata manually, or suffer the consequences. For example, if the files have creator or genre metadata missing, it will be impossible to search for, create playlists or generate smart blocks according to these criteria until you add it. There are a number of programs available which can be used to correct mistakes or incomplete information in ID3 tags. On GNU/Linux, the program Ex Falso ( http://code.google.com/p/quodlibet/ \"http://sourceforge.net/projects/dr14tmeter/\")) can be useful for batch setting and editing ID3 tags before importing files into your LibreTime server. On a Debian or Ubuntu desktop machine, you can install this program with the command: sudo apt-get install exfalso After installation, you can run this program with the command: exfalso or from the desktop menu. The Tags From Path feature of this program is a particularly useful time saver if you have a large archive of untagged files. Sometimes there is useful creator or title information in the file name or directory path structure, which can be converted into an ID3 tag automatically. Metadata in legacy character sets LibreTime expects file tag metadata to be stored in the international UTF-8 character set. Programs such as Ex Falso (described above) encode metadata in UTF-8 by default. If you have an archive of files encoded with metadata in a legacy character set, such as the Cyrillic encoding Windows-1251 , you should convert these files before import. The program mid3iconv (part of the python-mutagen package in Debian and Ubuntu) can be used to batch convert the metadata character set of files on the command line. You can install python-mutagen with the command: sudo apt-get install python-mutagen For example, to preview the conversion of tags from Windows-1251 (CP1251) character set to UTF-8 for a whole archive of MP3 files, you could use the command: find . -name \"*.mp3\" -print0 | xargs -0 mid3iconv -e CP1251 -d -p in the base directory of the archive. The -d option specifies that the new tag should be printed to the server console (debug mode), and the -p option specifies a preview run. This preview will enable you to confirm that the metadata is being read and converted correctly before writing the new tags. To actually convert all of the tags and strip any legacy ID3v1 tag present from each file at the same time, you could use the command: find . -name \"*.mp3\" -print0 | xargs -0 mid3iconv -e CP1251 --remove-v1 The name of the original character set follows the -e option. Other legacy character sets that mid3iconv can convert to UTF-8 include: KOI8-R: Russian KOI8-U: Ukrainian GBK: Traditional Chinese GB2312: Simplified Chinese EUC-KR: Korean EUC-JP: Japanese CP1253: Greek CP1254: Turkish CP1255: Hebrew CP1256: Arabic Audio loudness On file ingest, LibreTime analyzes each Ogg Vorbis, MP3, AAC or FLAC file's loudness, and stores a ReplayGain value for that file in its database. At playout time, the ReplayGain value is provided to Liquidsoap so that gain can be automatically adjusted to provide an average output of -14 dBFS loudness (14 decibels below full scale). See http://www.replaygain.org/ for more details of ReplayGain. Because of this automatic gain adjustment, any files with average loudness higher than -14 dBFS will not sound louder than quieter files at playout time, but the lower crest factor in the louder files (their relatively low peak-to-average ratio) may be apparent in the output, making those files sound less dynamic. This may be an issue for contemporary popular music, which can average at -9 dBFS or louder before ReplayGain adjustment. (See http://www.soundonsound.com/sos/sep11/articles/loudness.htm for a detailed analysis of the problem). Your station's producers should therefore aim for 14dB between peak and average loudness to maintain the crest factor of their prepared material (also known as DR14 on some dynamic range meters, such as the command-line DR14 T.meter available from http://sourceforge.net/projects/dr14tmeter/ ). If the producers are working to a different loudness standard, the ReplayGain modifier in LibreTime's Stream Settings page can be adjusted to suit their material. Large transient peaks in otherwise quiet files should be avoided, to guard against the need for peak limiting when ReplayGain is applied to those quieter files. The vorbisgain command-line tool, available in the vorbisgain package in Debian/Ubuntu, can be used to indicate the ReplayGain of an individual Ogg Vorbis file before ingest into LibreTime. (A similar tool for MP3 files is available in the mp3gain package in Debian/Ubuntu). Here is an example of a very quiet file where the use of ReplayGain would make the output more than 17dB louder: $ vorbisgain -d Peter_Lawson-Three_Gymn.ogg Analyzing files... Gain | Peak | Scale | New Peak | Track ----------+------+-------+----------+------ +17.39 dB | 4536 | 7.40 | 33585 | Peter_Lawson-Three_Gymn.ogg And here is an example of a very loud file, with lower crest factor, where the output will be more than 7dB quieter with ReplayGain applied: $ vorbisgain -d Snoop_Dogg-Doggfather.ogg Analyzing files... Gain | Peak | Scale | New Peak | Track ----------+-------+-------+----------+------ -7.86 dB | 36592 | 0.40 | 14804 | Snoop_Dogg-Doggfather.ogg In the output from vorbisgain, Peak is the maximum sample value of the file before any ReplayGain has been applied, where a value of 32,767 represents full scale when decoding to signed 16 bit samples. Note that lossy compressed files can have peaks greater than full scale, due to encoding artifacts. The New Peak value for the Snoop Dogg file may be relatively low due to the hard limiting used in the mastering of that piece of music. Silence in media files Before importing media, it is good practice to check for any silent sections in the media files. While LibreTime compensates for leading and trailing silence with the use of automatic cue-in and cue-out points *, it may be preferable to trim these files to the intended length before upload. This is because media in the LibreTime library could potentially be re-used in many different systems. *Audacity is a cross-platform editor suitable for the task of trimming audio files, available from http://audacity.sourceforge.net/ Very quiet introductions or over-long fades can also lead to apparent gaps in your broadcast playout. Some audio CDs feature a 'hidden track' at the end, which in fact uses a long period of silence within the final track, rather than an actual separate track on the disc. This means that CD encoding programs will often encode both the hidden material and the silence in the media file. For example, the track Debra from the CD Midnite Vultures by Beck includes hidden material preceded by seven minutes of silence, as shown in the screen shot from Audacity below.","title":"Preparing Media for Ingest"},{"location":"manual/preparing-media-for-ingest/#metadata-quality","text":"LibreTime automatically imports any metadata that is in the files' ID3 tags. If these tags are incorrect or are missing information, you will have to either edit the metadata manually, or suffer the consequences. For example, if the files have creator or genre metadata missing, it will be impossible to search for, create playlists or generate smart blocks according to these criteria until you add it. There are a number of programs available which can be used to correct mistakes or incomplete information in ID3 tags. On GNU/Linux, the program Ex Falso ( http://code.google.com/p/quodlibet/ \"http://sourceforge.net/projects/dr14tmeter/\")) can be useful for batch setting and editing ID3 tags before importing files into your LibreTime server. On a Debian or Ubuntu desktop machine, you can install this program with the command: sudo apt-get install exfalso After installation, you can run this program with the command: exfalso or from the desktop menu. The Tags From Path feature of this program is a particularly useful time saver if you have a large archive of untagged files. Sometimes there is useful creator or title information in the file name or directory path structure, which can be converted into an ID3 tag automatically.","title":"Metadata quality"},{"location":"manual/preparing-media-for-ingest/#metadata-in-legacy-character-sets","text":"LibreTime expects file tag metadata to be stored in the international UTF-8 character set. Programs such as Ex Falso (described above) encode metadata in UTF-8 by default. If you have an archive of files encoded with metadata in a legacy character set, such as the Cyrillic encoding Windows-1251 , you should convert these files before import. The program mid3iconv (part of the python-mutagen package in Debian and Ubuntu) can be used to batch convert the metadata character set of files on the command line. You can install python-mutagen with the command: sudo apt-get install python-mutagen For example, to preview the conversion of tags from Windows-1251 (CP1251) character set to UTF-8 for a whole archive of MP3 files, you could use the command: find . -name \"*.mp3\" -print0 | xargs -0 mid3iconv -e CP1251 -d -p in the base directory of the archive. The -d option specifies that the new tag should be printed to the server console (debug mode), and the -p option specifies a preview run. This preview will enable you to confirm that the metadata is being read and converted correctly before writing the new tags. To actually convert all of the tags and strip any legacy ID3v1 tag present from each file at the same time, you could use the command: find . -name \"*.mp3\" -print0 | xargs -0 mid3iconv -e CP1251 --remove-v1 The name of the original character set follows the -e option. Other legacy character sets that mid3iconv can convert to UTF-8 include: KOI8-R: Russian KOI8-U: Ukrainian GBK: Traditional Chinese GB2312: Simplified Chinese EUC-KR: Korean EUC-JP: Japanese CP1253: Greek CP1254: Turkish CP1255: Hebrew CP1256: Arabic","title":"Metadata in legacy character sets"},{"location":"manual/preparing-media-for-ingest/#audio-loudness","text":"On file ingest, LibreTime analyzes each Ogg Vorbis, MP3, AAC or FLAC file's loudness, and stores a ReplayGain value for that file in its database. At playout time, the ReplayGain value is provided to Liquidsoap so that gain can be automatically adjusted to provide an average output of -14 dBFS loudness (14 decibels below full scale). See http://www.replaygain.org/ for more details of ReplayGain. Because of this automatic gain adjustment, any files with average loudness higher than -14 dBFS will not sound louder than quieter files at playout time, but the lower crest factor in the louder files (their relatively low peak-to-average ratio) may be apparent in the output, making those files sound less dynamic. This may be an issue for contemporary popular music, which can average at -9 dBFS or louder before ReplayGain adjustment. (See http://www.soundonsound.com/sos/sep11/articles/loudness.htm for a detailed analysis of the problem). Your station's producers should therefore aim for 14dB between peak and average loudness to maintain the crest factor of their prepared material (also known as DR14 on some dynamic range meters, such as the command-line DR14 T.meter available from http://sourceforge.net/projects/dr14tmeter/ ). If the producers are working to a different loudness standard, the ReplayGain modifier in LibreTime's Stream Settings page can be adjusted to suit their material. Large transient peaks in otherwise quiet files should be avoided, to guard against the need for peak limiting when ReplayGain is applied to those quieter files. The vorbisgain command-line tool, available in the vorbisgain package in Debian/Ubuntu, can be used to indicate the ReplayGain of an individual Ogg Vorbis file before ingest into LibreTime. (A similar tool for MP3 files is available in the mp3gain package in Debian/Ubuntu). Here is an example of a very quiet file where the use of ReplayGain would make the output more than 17dB louder: $ vorbisgain -d Peter_Lawson-Three_Gymn.ogg Analyzing files... Gain | Peak | Scale | New Peak | Track ----------+------+-------+----------+------ +17.39 dB | 4536 | 7.40 | 33585 | Peter_Lawson-Three_Gymn.ogg And here is an example of a very loud file, with lower crest factor, where the output will be more than 7dB quieter with ReplayGain applied: $ vorbisgain -d Snoop_Dogg-Doggfather.ogg Analyzing files... Gain | Peak | Scale | New Peak | Track ----------+-------+-------+----------+------ -7.86 dB | 36592 | 0.40 | 14804 | Snoop_Dogg-Doggfather.ogg In the output from vorbisgain, Peak is the maximum sample value of the file before any ReplayGain has been applied, where a value of 32,767 represents full scale when decoding to signed 16 bit samples. Note that lossy compressed files can have peaks greater than full scale, due to encoding artifacts. The New Peak value for the Snoop Dogg file may be relatively low due to the hard limiting used in the mastering of that piece of music.","title":"Audio loudness"},{"location":"manual/preparing-media-for-ingest/#silence-in-media-files","text":"Before importing media, it is good practice to check for any silent sections in the media files. While LibreTime compensates for leading and trailing silence with the use of automatic cue-in and cue-out points *, it may be preferable to trim these files to the intended length before upload. This is because media in the LibreTime library could potentially be re-used in many different systems. *Audacity is a cross-platform editor suitable for the task of trimming audio files, available from http://audacity.sourceforge.net/ Very quiet introductions or over-long fades can also lead to apparent gaps in your broadcast playout. Some audio CDs feature a 'hidden track' at the end, which in fact uses a long period of silence within the final track, rather than an actual separate track on the disc. This means that CD encoding programs will often encode both the hidden material and the silence in the media file. For example, the track Debra from the CD Midnite Vultures by Beck includes hidden material preceded by seven minutes of silence, as shown in the screen shot from Audacity below.","title":"Silence in media files"},{"location":"manual/preparing-the-server/","text":"Preparing the Server The following instructions assume that you have root access ( sudo on most distributions) to a GNU/Linux server, and are familiar with basic command line tasks. The recommended LibreTime server platform is Ubuntu Server 18.04 LTS. The server should have at least a 1GHz processor, 2GB of RAM, and a wired ethernet connection. A soundcard is only required if you plan to output audio directly to a mixing console instead of/in addition to using the onboard Icecast2 server. The LibreTime installation does not use much disk space, but you should allow plenty of storage capacity for the LibreTime library. A hot-swap RAID array is recommended for media storage to mitigate the effects of disk failure. You should also consider a UPS or other battery-powered system to offer some protection against short-term power failures. LibreTime depends on infrastructure and services that need to be configured properly for it to run smoothly. This chapter will go through the individual parts of a LibreTime install and help you assess how you need to manage them. Netplan Starting in Ubuntu 18.04 LTS, network settings are managed by the Netplan daemon (more info here ). The Netplan config file is written in yaml and located at /etc/netplan/... ; if no yaml file is present, create one with a name like ##-netcfg.yaml where ## is a number of your choice. An example Netplan config looks like this: network: version: 2 renderer: networkd ethernets: enp3s0: addresses: [192.168.88.8/24] gateway4: 192.168.88.1 nameservers: search: [lan] addresses: 192.168.88.1 In this example, enp3s0 is the name of your network card; check to see what your network card's name is by running ip -a or ifconfig . Spacing in Netplan config files is two (2) spaces per indent. Using tabs will prevent the Netplan config from starting correctly. List your desired static IP address under addresses in the XXX.XXX.XXX.XXX/YY format (for more information on this, see this subreddit thread ). If your subnet mask is 255.255.255.0 then your IP address will end in /24 , just like the example above. Set your DNS server under gateway4 (this will likely be your router's IP address) Set your gateway under nameservers -> addresses Once your Netplan config is set up correctly, run sudo netplan apply to update the configuration. Check that your IP address is set to the specified address with ifconfig and check to see if you are connected to the internet properly by pinging a known IP (ex. ping 1.1.1.1 , Cloudflare's server) or by running sudo apt update . If no errors appear, than your server's IP is configured correctly. Firewall LibreTime should only be run on a Server behind a firewall. This can either be a dedicated firewall in the network (like on some cloud providers) or a local firewall running iptables (as you would use on a root server or a local machine). Setting up a local firewall is done differently on all the supported distros. Debian FirewallD (CentOS) Ubuntu To quickly configure Ubuntu's firewall, ufw : sudo ufw enable sudo ufw allow 80/tcp sudo ufw allow 443/tcp sudo ufw allow 8000/tcp #only if streaming from your server sudo ufw allow 8001/tcp #only if DJs will be directly connecting to stream in ports, also include 8002/tcp sudo ufw status #to check setup There are a vast amount of ways to configure your network, firewall included. Choose the way that best fits your deployment and don't expose internal parts of your LibreTime install on the network. The following ports are relevant to LibreTime's core services and need to be opened to varying degrees. Port Description 80 Default unsecure web port. Needs to be open for the webserver to serve the LibreTime webinterface or if you enable TLS a redirect to the secure web port. 443 Default secure web port. This is where your LibreTime webinterface lives if you choose to configure TLS. 8000 Main Icecast instance. This is where your listeners connect if you plan on using your LibreTime server to directly serve such connections. You can also configure external Icecast or ShoutCast instances for this later. 8001 and 8002 Master and Show source input ports. Only open these ports if you plan on letting anyone use these features. The remaining parts of LibreTime might open additional ports that should not be accessible from any untrusted networks. You should consider how to configure their firewall access individually once you configure them. PostgreSQL You should set up PostgreSQL properly according to the instructions for your distro. Distro provided packages are fine for LibreTime as it does not have any specific version dependencies. Debian Ubuntu CentOS You should restrict access to the database and create a user specific to LibreTime. The default installer script creates a user with the password airtime , which is far too open and should be replaced with a self provided user and a secure password. See the PostgreSQL docs on roles and databases . Please take care to ensure that your database is properly backed up at regular intervals. LibreTime uses the database to store your schedule, settings, playout history and more. See backing up the server for more information on this. RabbitMQ LibreTime uses RabbitMQ interfacing various components like the main interface and parts of the system like the audio analyzer and podcast downloader as well as the playout system through a common message queue. Again, the version provided by your distro will probably work fine for all LibreTime is concerned. Debian/Ubuntu CentOS The install script sets airtime as the password on the default user. It is recommended to provide your own user using a secure password. You can use rabbitmqctl or the Management Plugin to manage your RabbitMQ users. There is no state in the RabbitMQ system that you need to backup but you want to ensure that your RabbitMQ configuration and user permissions are safe. RabbitMQ hostname RabbitMQ requires a fixed and resolvable hostname (see the docs ), which is normal for a server. For a desktop or laptop machine where the hostname changes frequently or is not resolvable, this issue may prevent RabbitMQ from starting. When using a desktop or laptop computer with a dynamic IP address, such as an address obtained from a wireless network, the rabbitmq-server daemon must not start up before the NetworkManager service or network.target . You may also choose to configure RabbitMQ to only listen on the loopback interface with a localhost node name. You can use environment variables or a configuration file to do this. See these links for more information: Networking and RabbitMQ Serverfault Instructions for Debian Services Once all of the services needed to run LibreTime are installed and configured, it is important that the server starts them during the boot process, to cut down on downtime, especially in live enviornments. Ubuntu 18.04 uses the systemctl command to manage services, so run the following commands to enable all LibreTime-needed services to run at boot: sudo systemctl enable airtime-liquidsoap sudo systemctl enable airtime-playout sudo systemctl enable airtime-celery sudo systemctl enable airtime_analyzer sudo systemctl enable apache2 sudo systemctl enable rabbitmq-server If an error is returned, try adding .service to the end of each command. For example: sudo systemctl enable apache2.service User groups If you plan to have LibreTime output audio directly to a mixing console or transmitter, the www-data user needs to be added to the audio user group using sudo adduser www-data audio . Otherwise, if an Icecast or Shoutcast server is going to be used without an analog audio output, this step can be omitted.","title":"Preparing the Server"},{"location":"manual/preparing-the-server/#preparing-the-server","text":"The following instructions assume that you have root access ( sudo on most distributions) to a GNU/Linux server, and are familiar with basic command line tasks. The recommended LibreTime server platform is Ubuntu Server 18.04 LTS. The server should have at least a 1GHz processor, 2GB of RAM, and a wired ethernet connection. A soundcard is only required if you plan to output audio directly to a mixing console instead of/in addition to using the onboard Icecast2 server. The LibreTime installation does not use much disk space, but you should allow plenty of storage capacity for the LibreTime library. A hot-swap RAID array is recommended for media storage to mitigate the effects of disk failure. You should also consider a UPS or other battery-powered system to offer some protection against short-term power failures. LibreTime depends on infrastructure and services that need to be configured properly for it to run smoothly. This chapter will go through the individual parts of a LibreTime install and help you assess how you need to manage them.","title":"Preparing the Server"},{"location":"manual/preparing-the-server/#netplan","text":"Starting in Ubuntu 18.04 LTS, network settings are managed by the Netplan daemon (more info here ). The Netplan config file is written in yaml and located at /etc/netplan/... ; if no yaml file is present, create one with a name like ##-netcfg.yaml where ## is a number of your choice. An example Netplan config looks like this: network: version: 2 renderer: networkd ethernets: enp3s0: addresses: [192.168.88.8/24] gateway4: 192.168.88.1 nameservers: search: [lan] addresses: 192.168.88.1 In this example, enp3s0 is the name of your network card; check to see what your network card's name is by running ip -a or ifconfig . Spacing in Netplan config files is two (2) spaces per indent. Using tabs will prevent the Netplan config from starting correctly. List your desired static IP address under addresses in the XXX.XXX.XXX.XXX/YY format (for more information on this, see this subreddit thread ). If your subnet mask is 255.255.255.0 then your IP address will end in /24 , just like the example above. Set your DNS server under gateway4 (this will likely be your router's IP address) Set your gateway under nameservers -> addresses Once your Netplan config is set up correctly, run sudo netplan apply to update the configuration. Check that your IP address is set to the specified address with ifconfig and check to see if you are connected to the internet properly by pinging a known IP (ex. ping 1.1.1.1 , Cloudflare's server) or by running sudo apt update . If no errors appear, than your server's IP is configured correctly.","title":"Netplan"},{"location":"manual/preparing-the-server/#firewall","text":"LibreTime should only be run on a Server behind a firewall. This can either be a dedicated firewall in the network (like on some cloud providers) or a local firewall running iptables (as you would use on a root server or a local machine). Setting up a local firewall is done differently on all the supported distros. Debian FirewallD (CentOS) Ubuntu To quickly configure Ubuntu's firewall, ufw : sudo ufw enable sudo ufw allow 80/tcp sudo ufw allow 443/tcp sudo ufw allow 8000/tcp #only if streaming from your server sudo ufw allow 8001/tcp #only if DJs will be directly connecting to stream in ports, also include 8002/tcp sudo ufw status #to check setup There are a vast amount of ways to configure your network, firewall included. Choose the way that best fits your deployment and don't expose internal parts of your LibreTime install on the network. The following ports are relevant to LibreTime's core services and need to be opened to varying degrees. Port Description 80 Default unsecure web port. Needs to be open for the webserver to serve the LibreTime webinterface or if you enable TLS a redirect to the secure web port. 443 Default secure web port. This is where your LibreTime webinterface lives if you choose to configure TLS. 8000 Main Icecast instance. This is where your listeners connect if you plan on using your LibreTime server to directly serve such connections. You can also configure external Icecast or ShoutCast instances for this later. 8001 and 8002 Master and Show source input ports. Only open these ports if you plan on letting anyone use these features. The remaining parts of LibreTime might open additional ports that should not be accessible from any untrusted networks. You should consider how to configure their firewall access individually once you configure them.","title":"Firewall"},{"location":"manual/preparing-the-server/#postgresql","text":"You should set up PostgreSQL properly according to the instructions for your distro. Distro provided packages are fine for LibreTime as it does not have any specific version dependencies. Debian Ubuntu CentOS You should restrict access to the database and create a user specific to LibreTime. The default installer script creates a user with the password airtime , which is far too open and should be replaced with a self provided user and a secure password. See the PostgreSQL docs on roles and databases . Please take care to ensure that your database is properly backed up at regular intervals. LibreTime uses the database to store your schedule, settings, playout history and more. See backing up the server for more information on this.","title":"PostgreSQL"},{"location":"manual/preparing-the-server/#rabbitmq","text":"LibreTime uses RabbitMQ interfacing various components like the main interface and parts of the system like the audio analyzer and podcast downloader as well as the playout system through a common message queue. Again, the version provided by your distro will probably work fine for all LibreTime is concerned. Debian/Ubuntu CentOS The install script sets airtime as the password on the default user. It is recommended to provide your own user using a secure password. You can use rabbitmqctl or the Management Plugin to manage your RabbitMQ users. There is no state in the RabbitMQ system that you need to backup but you want to ensure that your RabbitMQ configuration and user permissions are safe.","title":"RabbitMQ"},{"location":"manual/preparing-the-server/#rabbitmq-hostname","text":"RabbitMQ requires a fixed and resolvable hostname (see the docs ), which is normal for a server. For a desktop or laptop machine where the hostname changes frequently or is not resolvable, this issue may prevent RabbitMQ from starting. When using a desktop or laptop computer with a dynamic IP address, such as an address obtained from a wireless network, the rabbitmq-server daemon must not start up before the NetworkManager service or network.target . You may also choose to configure RabbitMQ to only listen on the loopback interface with a localhost node name. You can use environment variables or a configuration file to do this. See these links for more information: Networking and RabbitMQ Serverfault Instructions for Debian","title":"RabbitMQ hostname"},{"location":"manual/preparing-the-server/#services","text":"Once all of the services needed to run LibreTime are installed and configured, it is important that the server starts them during the boot process, to cut down on downtime, especially in live enviornments. Ubuntu 18.04 uses the systemctl command to manage services, so run the following commands to enable all LibreTime-needed services to run at boot: sudo systemctl enable airtime-liquidsoap sudo systemctl enable airtime-playout sudo systemctl enable airtime-celery sudo systemctl enable airtime_analyzer sudo systemctl enable apache2 sudo systemctl enable rabbitmq-server If an error is returned, try adding .service to the end of each command. For example: sudo systemctl enable apache2.service","title":"Services"},{"location":"manual/preparing-the-server/#user-groups","text":"If you plan to have LibreTime output audio directly to a mixing console or transmitter, the www-data user needs to be added to the audio user group using sudo adduser www-data audio . Otherwise, if an Icecast or Shoutcast server is going to be used without an analog audio output, this step can be omitted.","title":"User groups"},{"location":"manual/promoting-your-station/","text":"If you have an Icecast server, you can put a link to the Icecast status page (by default at port 8000) on your station's homepage, to provide an overview of available streams. See the chapter Interface customization for tips on theming the Icecast status page. You can also use Now Playing widgets (see the chapter Exporting the schedule ) or HTML5 stream players (see the chapter Stream player for your website ) to help grow your audience. On an Icecast server, you can uncomment the section in the /etc/icecast2/icecast.xml file to have your station automatically listed on the Icecast directory website http://dir.xiph.org which could help you pick up more listeners. <!-- Uncomment this if you want directory listings --> <directory> <yp-url-timeout>15</yp-url-timeout> <yp-url>http://dir.xiph.org/cgi-bin/yp-cgi</yp-url> </directory> The Indymedia stream directory at http://radio.indymedia.org/en/yp links to grassroots independent radio projects around the world. You can add your station to their list with an additional section, as follows: <directory> <yp-url-timeout>15</yp-url-timeout> <yp-url>http://radio.indymedia.org/cgi-bin/yp-cgi</yp-url> </directory> Another stream directory service is provided by the Liquidsoap Flows! site http://flows.liquidsoap.fm/ . The following section can be added to the file /usr/lib/airtime/pypo/bin/liquidsoap_scripts/ls_script.liq after add_skip_command(s) on line 174, for a stream named ' ourstation ': ourstation = register_flow( radio=\"Rock 'n Roll Radio\", website=\"http://radio.example.com/\", description=\"Canada's most rockin' radio!\", genre=\"Rock\", user=\"\", password=\"\", streams=[(\"ogg/128k\",\"http://streaming.example.com/libretime_128\")], ourstation) For the time being, a stream can be registered on the Liquidsoap Flows! site with any username and password. Authenticated services may be offered in future.","title":"Promoting Your Station"},{"location":"manual/radio-page/","text":"Radio page LibreTime includes a mini-site, which can be accessed at localhost (for local installations) or libretime.example.com (for installations to a server on a domain). The site includes your logo (set under Settings > General), the login button to the LibreTime interface, links for the schedule, station description, and podcast tabs, and a livestream player that runs of the stream from the built-in Icecast2 server. The currently playing artist and track are displayed. The schedule tab opens by default and shows a schedule for your station based on LibreTime's Calendar for the next 7 days. All times are presented in 12 hour format. The about tab includes your station name and a quick blurb about your station that can be set under Settings > General (more info here ). Tracks published wind up here, and can be played back on-demand. This is a great place for putting episodes of shows that have already played out on stream. The Subscribe button allows for listeners to subscribe to your podcast's RSS feed in a podcast client of their choice, such as Apple Podcasts. The background of the radio page can be changed; see instructions here . Image comes from CATS ON SYNTHESIZERS IN SPACE .","title":"Radio Page"},{"location":"manual/radio-page/#radio-page","text":"LibreTime includes a mini-site, which can be accessed at localhost (for local installations) or libretime.example.com (for installations to a server on a domain). The site includes your logo (set under Settings > General), the login button to the LibreTime interface, links for the schedule, station description, and podcast tabs, and a livestream player that runs of the stream from the built-in Icecast2 server. The currently playing artist and track are displayed. The schedule tab opens by default and shows a schedule for your station based on LibreTime's Calendar for the next 7 days. All times are presented in 12 hour format. The about tab includes your station name and a quick blurb about your station that can be set under Settings > General (more info here ). Tracks published wind up here, and can be played back on-demand. This is a great place for putting episodes of shows that have already played out on stream. The Subscribe button allows for listeners to subscribe to your podcast's RSS feed in a podcast client of their choice, such as Apple Podcasts. The background of the radio page can be changed; see instructions here . Image comes from CATS ON SYNTHESIZERS IN SPACE .","title":"Radio page"},{"location":"manual/recording-shows/","text":"Live show recording from the input of the server's sound card, if one is fitted, can be enabled in the Add Show box of Airtime's Calendar (see the Calendar chapter for details). During a recording, a red light is shown in the Master Panel, and the word Recording appears in a red font to the left of the show name. Before the first broadcast show scheduled for recording begins, you should check that the level of recording is sufficient to ensure a good signal to noise ratio, but not so high a level that clipping (distortion) occurs in the recorded file. You can perform this check using the command alsamixer on the Airtime server. This command opens a soundcard mixer application in the server console. Press the F4 key on your keyboard to set capture levels. Some experimentation may be required to find the correct control on the mixer, using the Left and Right arrow keys on your keyboard. Levels are set with the Up and Down arrows, and Capture is toggled with the Space bar. Capture dB gain should be set to 0.00, 0.00 initially. If you hear nothing at all in the recording, you may need to set the value of Input Source to Line , using the Up or Down arrows. Depending on the particular sound card and sockets you are using, you may have to enable other inputs, such as Digital or S/PDIF . If a test recording is too quiet, try raising the line output level of your broadcast mixer towards 0dB before increasing gain above 0dB on the sound card, in order to achieve the optimal gain structure. Using recordings After the recording has finished, you can find the recorded file in the Library , by searching for recorder . The file will be labelled with a Title containing a date and time stamp, as well as the name of the show. Click a file and select Edit Metadata from the pop-up menu to enter additional details of the recording which will help you find it in searches later, such as Album or Language . Then click the Save button. Cancelling a recording If you wish to cancel the recording of a live show, click on the show in the Calendar and select Cancel Current Show from the pop-up menu. Airtime will ask you if you are sure about this action, as it cannot be undone. The recorded show file in the Airtime library will be truncated if you click the OK button.","title":"Index"},{"location":"manual/recording-shows/#using-recordings","text":"After the recording has finished, you can find the recorded file in the Library , by searching for recorder . The file will be labelled with a Title containing a date and time stamp, as well as the name of the show. Click a file and select Edit Metadata from the pop-up menu to enter additional details of the recording which will help you find it in searches later, such as Album or Language . Then click the Save button.","title":"Using recordings"},{"location":"manual/recording-shows/#cancelling-a-recording","text":"If you wish to cancel the recording of a live show, click on the show in the Calendar and select Cancel Current Show from the pop-up menu. Airtime will ask you if you are sure about this action, as it cannot be undone. The recorded show file in the Airtime library will be truncated if you click the OK button.","title":"Cancelling a recording"},{"location":"manual/rights-and-royalties/","text":"Rights and Royalties If you're new to broadcasting, or have not streamed your station online before, reading the following brief explanation of compensation rules for songwriters, musicians and other copyright holders may save you a great deal of trouble later. Independent music radio on the Internet has faced royalty demands from SoundExchange in the USA, and similar organizations in other territories. These organizations are usually membership societies or government-sanctioned national authorities which are intended to collect money from broadcasters to compensate copyright holders. The royalty collection societies require payment before you can stream just about any music released commercially to the general public \u2014 whether you make any money out of streaming, or not. It's not so much the percentage of revenue demanded, but that there are usually annual minimum fees to pay, which can hurt small stations disproportionately. For example, in the UK, the MCPS-PRS Limited Online Music Licence covers non-commercial music streaming by groups and individuals, as long as their gross revenue is less then \u00a312,500 per year. The cost is on a sliding scale, up to \u00a31,120 plus 20% tax per year for delivering up to 450,000 individual streams or serving 25,000 files; after that, you have to apply for a full MCPS-PRS Online Music Licence. That doesn't sound too bad at first, but 25,000 files per year works out at less than four downloads per hour for a round-the-clock website. This particular licence only covers publishing (songwriter) rights, not recording (record label and musician's performance) rights, so you have to negotiate an additional licence from Phonographic Performance Limited (PPL) to play music online, including digital recordings converted from commercially released CDs, vinyl or tape. Typically, you have to provide full statistical details to the royalty society of all music streamed or downloaded from your site, which can be onerous. Even if your radio station is mostly speech, there are many limitations in the small print of these music licences. For instance, you can't use music for promotional purposes, and you can't stream a whole opera, without negotiating separate licences. Weirdly, you are not allowed to play a piece of music in a 'derogatory context' to the writer or performers; no drummer jokes allowed, then. However, the biggest pitfall is that these MCPS-PRS licences for publishing rights only cover listeners in the UK. For recording rights, PPL is a member of the IFPI reciprocal scheme for webcasters, which means its licenses cover listeners in some European countries, Australia, New Zealand and a few other countries, but not listeners in the USA or Canada. So if your Internet station picked up a significant number of listeners in countries not covered by the MCPS-PRS licences or the IFPI reciprocal scheme, you would have to pay for similar music licences in those countries as well. It's no wonder that many not-for-profit radio stations have disappeared from the virtual airwaves over the last few years, since not having the right licences could leave the operator liable to legal action. If you want to go down the commercial music route, check out the http://www.prsformusic.com and http://www.ppluk.com websites for UK licence details. In the USA, the http://www.soundexchange.com website currently quotes a 500 dollar minimum annual fee for non-commercial webcasters, plus a usage fee above a certain number of listener hours, for the right to stream music recordings to listeners. See the websites of ASCAP , BMI and SESAC for details of music publishing royalties payable by webcasters streaming to the USA. Free content streaming offers an alternative for DIY Internet radio. Since royalty collection societies like MCPS-PRS and SoundExchange can only represent the interests of their own members, it follows that if you are not a member, you can stream your own self-produced content without paying for their licences. If you state somewhere on your website that the stream is of your own copyrighted material, and is made available to the public under a specific licence, then no-one should misunderstand your intentions. You might be able to persuade other people to allow you to stream their content too, as long as they do not have a conflicting legal obligation, such as having previously joined one of the many royalty collection societies around the world. You can ask for permission to stream when website visitors upload their own music files to you via a HTML form, much as the likes of SoundCloud do. Or you can collect files licensed under an appropriate Creative Commons licence ( http://www.creativecommons.org ) or other free content licence. Explicit permission to stream on your particular server is always going to be the ideal, so think about your own terms and conditions before you accept files from third parties for streaming. How, for example, would you know if someone uploaded a file to your online radio station that unknown to you, had been ripped from a commercially released CD? That's the kind of thing that could get you in trouble with the licensing authorities and copyright holders.","title":"Rights and Royalties"},{"location":"manual/rights-and-royalties/#rights-and-royalties","text":"If you're new to broadcasting, or have not streamed your station online before, reading the following brief explanation of compensation rules for songwriters, musicians and other copyright holders may save you a great deal of trouble later. Independent music radio on the Internet has faced royalty demands from SoundExchange in the USA, and similar organizations in other territories. These organizations are usually membership societies or government-sanctioned national authorities which are intended to collect money from broadcasters to compensate copyright holders. The royalty collection societies require payment before you can stream just about any music released commercially to the general public \u2014 whether you make any money out of streaming, or not. It's not so much the percentage of revenue demanded, but that there are usually annual minimum fees to pay, which can hurt small stations disproportionately. For example, in the UK, the MCPS-PRS Limited Online Music Licence covers non-commercial music streaming by groups and individuals, as long as their gross revenue is less then \u00a312,500 per year. The cost is on a sliding scale, up to \u00a31,120 plus 20% tax per year for delivering up to 450,000 individual streams or serving 25,000 files; after that, you have to apply for a full MCPS-PRS Online Music Licence. That doesn't sound too bad at first, but 25,000 files per year works out at less than four downloads per hour for a round-the-clock website. This particular licence only covers publishing (songwriter) rights, not recording (record label and musician's performance) rights, so you have to negotiate an additional licence from Phonographic Performance Limited (PPL) to play music online, including digital recordings converted from commercially released CDs, vinyl or tape. Typically, you have to provide full statistical details to the royalty society of all music streamed or downloaded from your site, which can be onerous. Even if your radio station is mostly speech, there are many limitations in the small print of these music licences. For instance, you can't use music for promotional purposes, and you can't stream a whole opera, without negotiating separate licences. Weirdly, you are not allowed to play a piece of music in a 'derogatory context' to the writer or performers; no drummer jokes allowed, then. However, the biggest pitfall is that these MCPS-PRS licences for publishing rights only cover listeners in the UK. For recording rights, PPL is a member of the IFPI reciprocal scheme for webcasters, which means its licenses cover listeners in some European countries, Australia, New Zealand and a few other countries, but not listeners in the USA or Canada. So if your Internet station picked up a significant number of listeners in countries not covered by the MCPS-PRS licences or the IFPI reciprocal scheme, you would have to pay for similar music licences in those countries as well. It's no wonder that many not-for-profit radio stations have disappeared from the virtual airwaves over the last few years, since not having the right licences could leave the operator liable to legal action. If you want to go down the commercial music route, check out the http://www.prsformusic.com and http://www.ppluk.com websites for UK licence details. In the USA, the http://www.soundexchange.com website currently quotes a 500 dollar minimum annual fee for non-commercial webcasters, plus a usage fee above a certain number of listener hours, for the right to stream music recordings to listeners. See the websites of ASCAP , BMI and SESAC for details of music publishing royalties payable by webcasters streaming to the USA. Free content streaming offers an alternative for DIY Internet radio. Since royalty collection societies like MCPS-PRS and SoundExchange can only represent the interests of their own members, it follows that if you are not a member, you can stream your own self-produced content without paying for their licences. If you state somewhere on your website that the stream is of your own copyrighted material, and is made available to the public under a specific licence, then no-one should misunderstand your intentions. You might be able to persuade other people to allow you to stream their content too, as long as they do not have a conflicting legal obligation, such as having previously joined one of the many royalty collection societies around the world. You can ask for permission to stream when website visitors upload their own music files to you via a HTML form, much as the likes of SoundCloud do. Or you can collect files licensed under an appropriate Creative Commons licence ( http://www.creativecommons.org ) or other free content licence. Explicit permission to stream on your particular server is always going to be the ideal, so think about your own terms and conditions before you accept files from third parties for streaming. How, for example, would you know if someone uploaded a file to your online radio station that unknown to you, had been ripped from a commercially released CD? That's the kind of thing that could get you in trouble with the licensing authorities and copyright holders.","title":"Rights and Royalties"},{"location":"manual/secure-login-with-ssl/","text":"To increase the security of your server, you can enable encrypted access to the LibreTime administration interface, and direct your users towards this more secure login page. The main advantage of using this encryption is that your remote users' login names and passwords are not sent in plain text across the public Internet or untrusted local networks, such as shared Wi-Fi access points. The padlock icon in a web browser's address bar depends on the browser's recognition of an encryption certificate. Because the users of your LibreTime server will often be known to you personally, it is feasible to use a self-signed certificate for this purpose. Alternatively, you can pay a Certificate Authority to sign the certificate for you. LibreTime Pro servers are pre-configured with a certificate signed by a Certificate Authority which is automatically recognised by all popular browsers. Deploying a self-signed certificate The Debian/Ubuntu package ssl-cert creates a snakeoil certificate and key based on your server's hostname. This gratis certificate and key pair created under the /etc/ssl/certs / and /etc/ssl/private/ directories will not be recognised by users' browsers without manual intervention. You can install the ssl-cert package with the command: sudo apt-get install ssl-cert If the hostname of your server does not match the domain name you intend to use with the LibreTime virtual host, the user's browser will present an additional security warning. You can set the domain name of the certificate by editing the file /usr/share/ssl-cert/ssleay.cnf to replace the @HostName@ variable: commonName = @HostName@ with the domain name used by LibreTime: commonName = airtime.example.com Then save the file and regenerate the certificate with the command: sudo make-ssl-cert generate-default-snakeoil --force-overwrite You should enable additional Apache modules for page redirections, custom headers and secure access: sudo a2enmod alias headers ssl Next, edit the virtual host configuration for your LibreTime server to include a stanza for the https:// interface on port 443 and a redirect for logins from port 80: sudo nano /etc/apache2/sites-available/airtime-vhost.conf Using the following configuration for Apache 2.2 as a guide, replace airtime.example.com with the name of your server and admin@example.com with your email address. The older SSLv2 and SSLv3 protocols and SSL compression should be disabled, as they are generally believed to be insecure. You may wish to create a ServerAlias for users to access the administration interface over https:// if required. On port 80, Apache's alias module is used to set a Redirect permanent for the login page. Optionally, access could be denied to all sites except localhost and any other LibreTime servers on your network, so that unencrypted communication between LibreTime components can continue. <VirtualHost *:443> SSLEngine on SSLProtocol All -SSLv2 -SSLv3 SSLCompression off SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key Header always set Strict-Transport-Security \"max-age=31536000\" ServerName airtime.example.com #ServerAlias www.example.com ServerAdmin admin@example.com DocumentRoot /usr/share/airtime/php/airtime_mvc/public DirectoryIndex index.php <Directory /usr/share/airtime/php/airtime_mvc/public> Options -Indexes FollowSymLinks MultiViews AllowOverride all Order allow,deny Allow from all </Directory> </VirtualHost> <VirtualHost *:80> ServerName airtime.example.com ServerAdmin admin@example.com DocumentRoot /usr/share/airtime/php/airtime_mvc/public Redirect permanent /login https://airtime.example.com/login SetEnv APPLICATION_ENV \"production\" <Directory /usr/share/airtime/php/airtime_mvc/public> Options -Indexes FollowSymLinks MultiViews AllowOverride All Order allow,deny Allow from all </Directory> </VirtualHost> Save the file with Ctrl+O and exit the nano editor with Ctrl+X . Then restart Apache with the command: sudo service apache restart When attempting to log into your server via http:// in future, you should be redirected to https:// automatically. Importing a self-signed certificate into the browser The first time you access an LibreTime server with a self-signed certificate over https:// your browser will block the login page and display a security warning. In Mozilla Firefox , you can click Technical Details to confirm that the warning is due to the certificate being self-signed before clicking the Add Exception button. In Google Chrome , the button to click on the security warning page is Proceed Anyway . On the next page in Firefox, click the Get Certificate button to inspect the details of the self-signed certificate. If all is well, click the Confirm Security Exception button. You should now be able to proceed to the https:// login page. If the users of your LibreTime server wish to avoid going through these steps, or they do not trust the remote LibreTime server to be what it claims to be, it is also possible to import a trusted local copy of a certificate file into the browser. For example, in Firefox version 30 preferences, you can go into the Advanced section, click the Certificates tab, then click the View Certificates button. On the Servers tab of the Certificate Manager , there is an Import button which enables you to load a certificate file from the local computer. Mixed encrypted and unencrypted content Whether your certificate is self-signed or not, you will see browser security warnings whenever a https:// page is delivering unencrypted content, such as the stream from an Icecast server. In Firefox, an exclamation mark icon is displayed in the address bar of the Listen pop-up.","title":"Secure Login with SSL or TLS"},{"location":"manual/secure-login-with-ssl/#deploying-a-self-signed-certificate","text":"The Debian/Ubuntu package ssl-cert creates a snakeoil certificate and key based on your server's hostname. This gratis certificate and key pair created under the /etc/ssl/certs / and /etc/ssl/private/ directories will not be recognised by users' browsers without manual intervention. You can install the ssl-cert package with the command: sudo apt-get install ssl-cert If the hostname of your server does not match the domain name you intend to use with the LibreTime virtual host, the user's browser will present an additional security warning. You can set the domain name of the certificate by editing the file /usr/share/ssl-cert/ssleay.cnf to replace the @HostName@ variable: commonName = @HostName@ with the domain name used by LibreTime: commonName = airtime.example.com Then save the file and regenerate the certificate with the command: sudo make-ssl-cert generate-default-snakeoil --force-overwrite You should enable additional Apache modules for page redirections, custom headers and secure access: sudo a2enmod alias headers ssl Next, edit the virtual host configuration for your LibreTime server to include a stanza for the https:// interface on port 443 and a redirect for logins from port 80: sudo nano /etc/apache2/sites-available/airtime-vhost.conf Using the following configuration for Apache 2.2 as a guide, replace airtime.example.com with the name of your server and admin@example.com with your email address. The older SSLv2 and SSLv3 protocols and SSL compression should be disabled, as they are generally believed to be insecure. You may wish to create a ServerAlias for users to access the administration interface over https:// if required. On port 80, Apache's alias module is used to set a Redirect permanent for the login page. Optionally, access could be denied to all sites except localhost and any other LibreTime servers on your network, so that unencrypted communication between LibreTime components can continue. <VirtualHost *:443> SSLEngine on SSLProtocol All -SSLv2 -SSLv3 SSLCompression off SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key Header always set Strict-Transport-Security \"max-age=31536000\" ServerName airtime.example.com #ServerAlias www.example.com ServerAdmin admin@example.com DocumentRoot /usr/share/airtime/php/airtime_mvc/public DirectoryIndex index.php <Directory /usr/share/airtime/php/airtime_mvc/public> Options -Indexes FollowSymLinks MultiViews AllowOverride all Order allow,deny Allow from all </Directory> </VirtualHost> <VirtualHost *:80> ServerName airtime.example.com ServerAdmin admin@example.com DocumentRoot /usr/share/airtime/php/airtime_mvc/public Redirect permanent /login https://airtime.example.com/login SetEnv APPLICATION_ENV \"production\" <Directory /usr/share/airtime/php/airtime_mvc/public> Options -Indexes FollowSymLinks MultiViews AllowOverride All Order allow,deny Allow from all </Directory> </VirtualHost> Save the file with Ctrl+O and exit the nano editor with Ctrl+X . Then restart Apache with the command: sudo service apache restart When attempting to log into your server via http:// in future, you should be redirected to https:// automatically.","title":"Deploying a self-signed certificate"},{"location":"manual/secure-login-with-ssl/#importing-a-self-signed-certificate-into-the-browser","text":"The first time you access an LibreTime server with a self-signed certificate over https:// your browser will block the login page and display a security warning. In Mozilla Firefox , you can click Technical Details to confirm that the warning is due to the certificate being self-signed before clicking the Add Exception button. In Google Chrome , the button to click on the security warning page is Proceed Anyway . On the next page in Firefox, click the Get Certificate button to inspect the details of the self-signed certificate. If all is well, click the Confirm Security Exception button. You should now be able to proceed to the https:// login page. If the users of your LibreTime server wish to avoid going through these steps, or they do not trust the remote LibreTime server to be what it claims to be, it is also possible to import a trusted local copy of a certificate file into the browser. For example, in Firefox version 30 preferences, you can go into the Advanced section, click the Certificates tab, then click the View Certificates button. On the Servers tab of the Certificate Manager , there is an Import button which enables you to load a certificate file from the local computer.","title":"Importing a self-signed certificate into the browser"},{"location":"manual/secure-login-with-ssl/#mixed-encrypted-and-unencrypted-content","text":"Whether your certificate is self-signed or not, you will see browser security warnings whenever a https:// page is delivering unencrypted content, such as the stream from an Icecast server. In Firefox, an exclamation mark icon is displayed in the address bar of the Listen pop-up.","title":"Mixed encrypted and unencrypted content"},{"location":"manual/setting-the-server-time/","text":"Accurate time keeping on your server is vital for LibreTime performance. You can confirm that the date and time of your server are set correctly with the date command: date The server should respond with the date, time, time zone and year in a format similar to the following example: Tue Jul 2 15:08:57 BST 2013 If the time on your server is wrong, it is recommended that you take LibreTime off-air until the problem is fixed. Configuring NTP Although it is possible to set the date and time of the server manually, this is not recommended because the server clock can drift over time, compromising the accuracy of your broadcast schedule. If your LibreTime server is permanently connected to the Internet, you can synchronize your server to a time server with the ntp program. If ntp** is not yet installed, you can enter the following command on Debian or Ubuntu: sudo apt-get install ntp Optionally, open the ntp configuration file in the nano editor to add further time server names: sudo nano /etc/ntp.conf On Ubuntu GNU/Linux, the default time server is ntp.ubuntu.com , but there are many other time servers available on the public Internet, including the group of servers listed at http://www.pool.ntp.org/ for each country. Using a variety of NTP servers located closely to your LibreTime server should produce the most accurate results. For example, for a server in the United Kingdom you could use the following list: # You do need to talk to an NTP server or two (or three). server ntp.ubuntu.com server 0.uk.pool.ntp.org server 1.uk.pool.ntp.org server 2.uk.pool.ntp.org server 3.uk.pool.ntp.org Enter the server names you require, press Ctrl+O to write out the /etc/ntp.conf file, then Ctrl+X to exit nano . Restart the ntp service with: sudo invoke-rc.d ntp restart The server should respond: * Stopping NTP server ntpd [ OK ] * Starting NTP server ntpd [ OK ] Then use the ntpq -p command to confirm that ntp is working. This command should produce output similar to the following: ntpq -p remote refid st t when poll reach delay offset jitter ================================================================== europium. 193.79.237.14 2 u 28 64 3 39.571 12.600 3.590 norb.v4.c 46.227.200.72 3 u 28 64 3 47.856 -6.908 10.028 82.113.15 193.62.22.82 2 u 29 64 3 11.458 -0.513 2.629 ntppub.le 158.43.192.66 2 u 91 64 2 122.781 44.864 0.001 dns0.rmpl 195.66.241.3 2 u 27 64 3 22.171 1.464 4.242 Adjusting the server time zone The data centre which hosts your LibreTime server could be located anywhere in the world. Some servers are set to Coordinated Universal Time or UTC (similar to Greenwich Mean Time or GMT), regardless of their location. LibreTime uses UTC time in its database for scheduling purposes, independent of the server time zone. If the server time zone is not appropriate for integration with your station's other systems, on a Debian or Ubuntu server you can reconfigure the tzdata (time zone data) package with the command: sudo dpkg-reconfigure tzdata This command opens a menu in which you can select the continent that you require, by pressing the Enter key. The next step is to select your nearest city, again by pressing the Enter key. The appropriate time zone is selected according to the information that you have entered. The console output from the dpkg-reconfigure tzdata command will confirm the new setting: Current default time zone: 'Europe/London' Local time is now: Tue Jul 2 15:18:01 BST 2013. Universal Time is now: Tue Jul 2 14:18:01 UTC 2013.","title":"Setting the Server Time"},{"location":"manual/setting-the-server-time/#configuring-ntp","text":"Although it is possible to set the date and time of the server manually, this is not recommended because the server clock can drift over time, compromising the accuracy of your broadcast schedule. If your LibreTime server is permanently connected to the Internet, you can synchronize your server to a time server with the ntp program. If ntp** is not yet installed, you can enter the following command on Debian or Ubuntu: sudo apt-get install ntp Optionally, open the ntp configuration file in the nano editor to add further time server names: sudo nano /etc/ntp.conf On Ubuntu GNU/Linux, the default time server is ntp.ubuntu.com , but there are many other time servers available on the public Internet, including the group of servers listed at http://www.pool.ntp.org/ for each country. Using a variety of NTP servers located closely to your LibreTime server should produce the most accurate results. For example, for a server in the United Kingdom you could use the following list: # You do need to talk to an NTP server or two (or three). server ntp.ubuntu.com server 0.uk.pool.ntp.org server 1.uk.pool.ntp.org server 2.uk.pool.ntp.org server 3.uk.pool.ntp.org Enter the server names you require, press Ctrl+O to write out the /etc/ntp.conf file, then Ctrl+X to exit nano . Restart the ntp service with: sudo invoke-rc.d ntp restart The server should respond: * Stopping NTP server ntpd [ OK ] * Starting NTP server ntpd [ OK ] Then use the ntpq -p command to confirm that ntp is working. This command should produce output similar to the following: ntpq -p remote refid st t when poll reach delay offset jitter ================================================================== europium. 193.79.237.14 2 u 28 64 3 39.571 12.600 3.590 norb.v4.c 46.227.200.72 3 u 28 64 3 47.856 -6.908 10.028 82.113.15 193.62.22.82 2 u 29 64 3 11.458 -0.513 2.629 ntppub.le 158.43.192.66 2 u 91 64 2 122.781 44.864 0.001 dns0.rmpl 195.66.241.3 2 u 27 64 3 22.171 1.464 4.242","title":"Configuring NTP"},{"location":"manual/setting-the-server-time/#adjusting-the-server-time-zone","text":"The data centre which hosts your LibreTime server could be located anywhere in the world. Some servers are set to Coordinated Universal Time or UTC (similar to Greenwich Mean Time or GMT), regardless of their location. LibreTime uses UTC time in its database for scheduling purposes, independent of the server time zone. If the server time zone is not appropriate for integration with your station's other systems, on a Debian or Ubuntu server you can reconfigure the tzdata (time zone data) package with the command: sudo dpkg-reconfigure tzdata This command opens a menu in which you can select the continent that you require, by pressing the Enter key. The next step is to select your nearest city, again by pressing the Enter key. The appropriate time zone is selected according to the information that you have entered. The console output from the dpkg-reconfigure tzdata command will confirm the new setting: Current default time zone: 'Europe/London' Local time is now: Tue Jul 2 15:18:01 BST 2013. Universal Time is now: Tue Jul 2 14:18:01 UTC 2013.","title":"Adjusting the server time zone"},{"location":"manual/smartblocks/","text":"Creating a smart block Smart blocks are automatically filled with media files from the LibreTime library, according to the criteria that you specify. This feature is intended to save staff time, compared to selecting items for a playlist manually, and can be used to schedule shows that operate in a consistent format. To create a smart block, click the Smartblocks button on the left sidebar, and select New from the toolbar. Like a playlist, smart blocks can have a title and description, which you can edit. This helps you find relevant smart blocks in searches. Click the link Smart Block Options to display the criteria and modifiers for the smart block. The criteria can be any one of LibreTime's metadata categories, such as Title , Creator or Genre . The modifier depends on whether the metadata in question contains letters or numbers. For example, Title has modifiers including contains and starts with , whereas the modifiers for BPM include is greater than and is in the range . You can also set the smart block type . A Static smart block will save the criteria and generate the block content immediately. This enables you to edit the contents of the block in the Library page before adding it to a show. A Dynamic smart block will only save the criteria, and the specific content will be generated at the time the block is added to a show. After that, the content of the show can be changed or re-ordered in the Now Playing page. Click the plus button on the left to add OR criteria, such as Creator containing beck OR jimi . (The criteria are not case sensitive). For a static smart block, click the Generate button to see the results. Dynamic smart blocks do not display the Generate or Shuffle buttons. If you don't like the ordering which is generated, click the Shuffle button, or drag and drop the smart block contents into the order that you prefer. You can also remove items or add new items manually from the Library. Changes to static smart block contents are saved automatically when you add items, remove or re-order them, or click the Generate button. Click the Save button in the upper right corner to save any changes to smart block criteria. To add an AND criteria, such as Creator containing jimi AND BPM in the range 120 to 130 , click the plus button on the right. If you see the message 0 files meet the criteria in this case, it might mean that the files in the Library have not been tagged with BPM metadata. See the chapter Preparing media for ingest for tips on tagging content. By default, a smart block will not contain repeated items, which will limit the duration of the block if you do not have sufficient items meeting the specified criteria in your Library . To override the default behaviour, check the Allow Repeat Tracks box. The Sort tracks by menu offers the options of random , newest or oldest items first. In addition Smart Blocks by default will never overflow the Time Limit. For instance if you set a time limit of 1 hour. It will add tracks to the schedule until it can't add any more tracks without exceeding the hour. This is to prevent tracks from being cut-off because they exceed the time limit of a show. If you want a smartblock to schedule tracks until it is longer than the Time Limit you can check \"Allow last track to exceed time limit\". This will make LibreTime add tracks that meet the criteria until it equals or is longer than the time limit. This is helpful for avoiding dead air on shows that are being autoscheduled. If you have a large number of files which meet the criteria that you specify, you may wish to limit the duration of the smart block using the Limit to field, so that it fits within the show you have in mind. Select hours , minutes or items from the drop-down menu, and click the Generate button again, if it is a static smart block. Then click the Save button. Smart blocks can be added to shows in the same way as a manually created playlist is added. Smart blocks can also be added to one or more playlists. In the case of a playlist containing a static smart block, click Expand Static Block to view the contents. For a dynamic smart block, you can review the criteria and duration limit by clicking Expand Dynamic Block . Once created, smart blocks can be found under the Smartblocks tab and refined at any time. They can be re-opened by right-clicking on the smart block and selecting Edit from the pop-up menu.","title":"Smart Blocks"},{"location":"manual/smartblocks/#creating-a-smart-block","text":"Smart blocks are automatically filled with media files from the LibreTime library, according to the criteria that you specify. This feature is intended to save staff time, compared to selecting items for a playlist manually, and can be used to schedule shows that operate in a consistent format. To create a smart block, click the Smartblocks button on the left sidebar, and select New from the toolbar. Like a playlist, smart blocks can have a title and description, which you can edit. This helps you find relevant smart blocks in searches. Click the link Smart Block Options to display the criteria and modifiers for the smart block. The criteria can be any one of LibreTime's metadata categories, such as Title , Creator or Genre . The modifier depends on whether the metadata in question contains letters or numbers. For example, Title has modifiers including contains and starts with , whereas the modifiers for BPM include is greater than and is in the range . You can also set the smart block type . A Static smart block will save the criteria and generate the block content immediately. This enables you to edit the contents of the block in the Library page before adding it to a show. A Dynamic smart block will only save the criteria, and the specific content will be generated at the time the block is added to a show. After that, the content of the show can be changed or re-ordered in the Now Playing page. Click the plus button on the left to add OR criteria, such as Creator containing beck OR jimi . (The criteria are not case sensitive). For a static smart block, click the Generate button to see the results. Dynamic smart blocks do not display the Generate or Shuffle buttons. If you don't like the ordering which is generated, click the Shuffle button, or drag and drop the smart block contents into the order that you prefer. You can also remove items or add new items manually from the Library. Changes to static smart block contents are saved automatically when you add items, remove or re-order them, or click the Generate button. Click the Save button in the upper right corner to save any changes to smart block criteria. To add an AND criteria, such as Creator containing jimi AND BPM in the range 120 to 130 , click the plus button on the right. If you see the message 0 files meet the criteria in this case, it might mean that the files in the Library have not been tagged with BPM metadata. See the chapter Preparing media for ingest for tips on tagging content. By default, a smart block will not contain repeated items, which will limit the duration of the block if you do not have sufficient items meeting the specified criteria in your Library . To override the default behaviour, check the Allow Repeat Tracks box. The Sort tracks by menu offers the options of random , newest or oldest items first. In addition Smart Blocks by default will never overflow the Time Limit. For instance if you set a time limit of 1 hour. It will add tracks to the schedule until it can't add any more tracks without exceeding the hour. This is to prevent tracks from being cut-off because they exceed the time limit of a show. If you want a smartblock to schedule tracks until it is longer than the Time Limit you can check \"Allow last track to exceed time limit\". This will make LibreTime add tracks that meet the criteria until it equals or is longer than the time limit. This is helpful for avoiding dead air on shows that are being autoscheduled. If you have a large number of files which meet the criteria that you specify, you may wish to limit the duration of the smart block using the Limit to field, so that it fits within the show you have in mind. Select hours , minutes or items from the drop-down menu, and click the Generate button again, if it is a static smart block. Then click the Save button. Smart blocks can be added to shows in the same way as a manually created playlist is added. Smart blocks can also be added to one or more playlists. In the case of a playlist containing a static smart block, click Expand Static Block to view the contents. For a dynamic smart block, you can review the criteria and duration limit by clicking Expand Dynamic Block . Once created, smart blocks can be found under the Smartblocks tab and refined at any time. They can be re-opened by right-clicking on the smart block and selecting Edit from the pop-up menu.","title":"Creating a smart block"},{"location":"manual/smartphone-journalism/","text":"Using an ordinary smartphone and LibreTime, you can upload your audio reports to the studio library or put them straight on the air. Here's how... The basic voice recorder app on your phone may not have all the features you need for journalism, but there are plenty of more suitable recording apps available for both iPhone and Android. For instance, searching for 'ogg recorder' in the Play Store on an Android phone yields plenty of alternatives. The following example uses RecForge Lite because of its configurable recording formats. This free app is limited to three minutes per recording in Ogg and MP3 formats, but there is an unrestricted version available at very modest cost. In the Settings window of the app, set the recording format as Ogg Vorbis, 44.1KHz sample rate, mono. Disable automatic gain control to get a consistent recording level, rather than artificially boosting quiet sounds, which should result in less distortion. Under 'Limit folders browsing' give the app access to all of the SD Card storage of the phone. Back in the main recording window of RecForge, create a directory such as ' recordings ' under the /mnt/sdcard/media/audio/ path, which is normally used by the phone's music application. You can then make recordings using the big red button, watching the input level meter to ensure a good signal to noise ratio. The recorded files are automatically named with date and time stamps, but can be renamed in the app later by selecting the Edit feature. The latest recordings are listed in the main recording window; individual files can be auditioned by tapping on them. Open the web interface of your station's LibreTime server in the phone's browser, log in with your username and password, and tap Add Media on LibreTime's main menu. After tapping the Add Files button, the phone will offer a choice of file to upload. By tapping Select music track you can browse the /mnt/sdcard/media/audio/ directory on the SD card filesystem, without requiring the installation of a file manager app on the phone. Tap one of the date-and-time-stamped files listed from the ' recordings ' directory to select it, then tap the OK button. The files are credited to ' Unknown artist ' because they have not yet been tagged with creator metadata. After tapping the Start upload button on the Add Media page, the files are now copied into the remote LibreTime library. You can now add the uploaded files directly to a forthcoming show, use them to create smart blocks or playlists in the Library , or edit their metadata to make them easier to find in searches later. One of the limitations of mobile recording is that it isn't always convenient to enter large amounts of text metadata when you're on the move. So a phone app that tagged audio recordings with creator, location and other relevant metadata would be very useful. Going live Mobile apps which enable you to stream directly into LibreTime's live rebroadcast feature include KoalaSan for iOS: http://koalasan.net/ and BroadcastMySelf for Android: https://play.google.com/store/apps/details?id=sa.broadcastmyself DemoIcesShout for Android also shows promise, although it can only stream a static file, rather than stream from a microphone: http://droidtools.sourceforge.net/content/icecast-client-android A live workflow does of course depend on a steady network connection between the phone and LibreTime server. Because streaming media on a regular basis can use a lot of bandwidth, it is advisable to use WiFi rather than mobile data (3G/4G) whenever possible, especially when roaming across networks. KoalaSan can stream input from either the built-in microphone or the external jack of the iOS device. An example configuration for the Settings tab might be: Name: LibreTime Server: libretime.example.com Port: 8003 Mountpoint: mastermount Stream name: LibreTime Description: A live stream to LibreTime Genre: News Username: masterstreamer Password: masterpassword Codec: mp3 Bitrate: 128 Protocol: Icecast2 Stereo: off AudioBus: off Dump: on Broadcast: on You can start streaming from the iOS device by tapping the start button in KoalaSan's Stream! tab. To configure BroadcastMySelf, tap the gears icon in the top left corner to enter the settings page, then tap Output Settings . This action opens the Icecast Settings page, where example settings could be: Hostname libretime.example.com Port 8003 Path /mastermount Username masterstreamer Password masterpassword MP3 Encoder Bitrate 128 Kbit/s Metadata Template _song__artist Streaming Buffer Size MP3 buffer size X 8 You may also wish to configure the Tracks Folder setting, which enables you to stream static files from the storage of the device. Depending on where you keep your audio files, this could be a path such as: /mnt/sdcard/media/audio/ To connect the Android device to the LibreTime server, tap the square button in the lower middle of the main interface. The connection indicator on the button should turn blue, and the message connected should be shown. Push up the fader on the left to increase input level from the internal microphone, or push up the fader on the right and tap one of the named files in the upper right window to stream it. Tap either of the LOCK buttons to prevent the stream input level being changed accidentally. When the connection is made, LibreTime output will fade from scheduled play to the stream from your mobile device. See the chapter Stream settings for more details of connection preferences.","title":"Smartphone Journalism"},{"location":"manual/smartphone-journalism/#going-live","text":"Mobile apps which enable you to stream directly into LibreTime's live rebroadcast feature include KoalaSan for iOS: http://koalasan.net/ and BroadcastMySelf for Android: https://play.google.com/store/apps/details?id=sa.broadcastmyself DemoIcesShout for Android also shows promise, although it can only stream a static file, rather than stream from a microphone: http://droidtools.sourceforge.net/content/icecast-client-android A live workflow does of course depend on a steady network connection between the phone and LibreTime server. Because streaming media on a regular basis can use a lot of bandwidth, it is advisable to use WiFi rather than mobile data (3G/4G) whenever possible, especially when roaming across networks. KoalaSan can stream input from either the built-in microphone or the external jack of the iOS device. An example configuration for the Settings tab might be: Name: LibreTime Server: libretime.example.com Port: 8003 Mountpoint: mastermount Stream name: LibreTime Description: A live stream to LibreTime Genre: News Username: masterstreamer Password: masterpassword Codec: mp3 Bitrate: 128 Protocol: Icecast2 Stereo: off AudioBus: off Dump: on Broadcast: on You can start streaming from the iOS device by tapping the start button in KoalaSan's Stream! tab. To configure BroadcastMySelf, tap the gears icon in the top left corner to enter the settings page, then tap Output Settings . This action opens the Icecast Settings page, where example settings could be: Hostname libretime.example.com Port 8003 Path /mastermount Username masterstreamer Password masterpassword MP3 Encoder Bitrate 128 Kbit/s Metadata Template _song__artist Streaming Buffer Size MP3 buffer size X 8 You may also wish to configure the Tracks Folder setting, which enables you to stream static files from the storage of the device. Depending on where you keep your audio files, this could be a path such as: /mnt/sdcard/media/audio/ To connect the Android device to the LibreTime server, tap the square button in the lower middle of the main interface. The connection indicator on the button should turn blue, and the message connected should be shown. Push up the fader on the left to increase input level from the internal microphone, or push up the fader on the right and tap one of the named files in the upper right window to stream it. Tap either of the LOCK buttons to prevent the stream input level being changed accidentally. When the connection is made, LibreTime output will fade from scheduled play to the stream from your mobile device. See the chapter Stream settings for more details of connection preferences.","title":"Going live"},{"location":"manual/status/","text":"On the Settings menu, the Status page provides an overview of the health and resource usage of the various services that make up a LibreTime system. If all is well, you will only see green check mark icons in the Status column. This page also shows how much Disk Space you have used on the disk partition containing the main Import folder, as well as any disks or partitions with watched folders. If any of the check mark icons in the Status column have changed to a red warning sign, contact your system administrator for assistance. (The chapter Troubleshooting contains some tips). LibreTime will do its best to restart any failing services, but sometimes manual intervention may be required; for example, in the case of hardware failure. If you have run out of storage space, a LibreTime user with admin privileges could log in and delete media files that are no longer required from the Library . Alternatively, you could move some files to a watched folder on another disk, or ask your system administrator to install additional storage capacity.","title":"Status"},{"location":"manual/stream-player-for-your-website/","text":"If you are using Airtime with Icecast or SHOUTcast for web streaming, you can embed a player applet into your website. jPlayer is a player applet (available under the GNU GPL from http://jplayer.org/ ) which uses the <audio> tag feature of HTML5 to play your streams. If the listener's browser does not support HTML5, the applet falls back to using Adobe Flash for MP3 format streams. Proprietary browsers, such as Internet Explorer on Windows or Safari on Apple OS X, may not support Ogg Vorbis or Opus streams. Listeners who do not wish to install a browser with Ogg support (such as Mozilla Firefox , Google Chrome or Opera ) can listen to these streams using a separate media player such as VideoLAN Client , also known as VLC ( http://www.videolan.org/vlc/ ). Example code You can download the example code for this chapter from: http://sourcefabric.booktype.pro/airtime-25-for-broadcasters/help/static/jPlayer_demo4.zip Unzip this file on your computer, and then open the file jplayer-demo.html in your editor: nano jplayer-demo.html We'll focus on the two areas that you need to concern yourself with. Firstly, in the <head> tag of the document, you'll see some code like this: $(\"#jquery_jplayer_1\").jPlayer({ ready: function (event) { $(this).jPlayer(\"setMedia\", { oga:\"http://sourcefabric.out.airtime.pro:8000/sourcefabric_a\" }); }, swfPath: \"js\", supplied: \"oga\", wmode: \"window\", smoothPlayBar: true, keyEnabled: true }); This code loads jPlayer, and specifies the source of an Ogg Vorbis stream. When testing on your own server, you should change this setting to the IP address or domain name, port number and mount point of the Icecast server you are using, like so: oga: \"http://streaming.example.com:8000/airtime_128\" If your stream is in MP3 format, you will need to prefix the stream setting with mp3, like this: mp3: \"http://streaming.example.com:8000/airtime_128\" and change the supplied line from: supplied: \"oga\" to: supplied: \"mp3\" As soon as jPlayer has finished loading, it will automatically begin to play the stream. The parameters ready , ended , swfPath and supplied are arguments passed to jPlayer. A full list of constructor arguments is available in the jPlayer Developer Guide at http://www.jplayer.org/latest/developer-guide/ jPlayer controls Secondly, the <body> tag of the file jplayer-demo.html defines the controls displayed by jPlayer. These controls can be as simple as just one Play/Pause button, or a fully-fledged playback interface with a playlist, progress bar and volume control. This example code uses one of the simpler skins available for jPlayer, Blue Monday . A stop button or progress bar is not useful when we are streaming continuously from Icecast or SHOUTcast, so we can remove these tags from the demo code, along with the tags specifying the playback time and file duration. The simplified HTML creates a play/pause button and a mute button, and looks as follows: <ul class=\"jp-controls\"> <li><a href=\"javascript:;\" class=\"jp-play\" tabindex=\"1\">play</a></li> <li><a href=\"javascript:;\" class=\"jp-pause\" tabindex=\"1\">pause</a></li> <li><a href=\"javascript:;\" class=\"jp-mute\" tabindex=\"1\" title=\"mute\">mute</a></li> <li><a href=\"javascript:;\" class=\"jp-unmute\" tabindex=\"1\" title=\"unmute\">unmute</a></li> <li><a href=\"javascript:;\" class=\"jp-volume-max\" tabindex=\"1\" title=\"max volume\">max volume</a></li> </ul> When you open the HTML file jplayer-demo.html in a web browser, your player should appear as follows: The original version of this demo code and skin are available from http://jplayer.org/download/ for further experimentation.","title":"Stream Player for Your Website"},{"location":"manual/stream-player-for-your-website/#example-code","text":"You can download the example code for this chapter from: http://sourcefabric.booktype.pro/airtime-25-for-broadcasters/help/static/jPlayer_demo4.zip Unzip this file on your computer, and then open the file jplayer-demo.html in your editor: nano jplayer-demo.html We'll focus on the two areas that you need to concern yourself with. Firstly, in the <head> tag of the document, you'll see some code like this: $(\"#jquery_jplayer_1\").jPlayer({ ready: function (event) { $(this).jPlayer(\"setMedia\", { oga:\"http://sourcefabric.out.airtime.pro:8000/sourcefabric_a\" }); }, swfPath: \"js\", supplied: \"oga\", wmode: \"window\", smoothPlayBar: true, keyEnabled: true }); This code loads jPlayer, and specifies the source of an Ogg Vorbis stream. When testing on your own server, you should change this setting to the IP address or domain name, port number and mount point of the Icecast server you are using, like so: oga: \"http://streaming.example.com:8000/airtime_128\" If your stream is in MP3 format, you will need to prefix the stream setting with mp3, like this: mp3: \"http://streaming.example.com:8000/airtime_128\" and change the supplied line from: supplied: \"oga\" to: supplied: \"mp3\" As soon as jPlayer has finished loading, it will automatically begin to play the stream. The parameters ready , ended , swfPath and supplied are arguments passed to jPlayer. A full list of constructor arguments is available in the jPlayer Developer Guide at http://www.jplayer.org/latest/developer-guide/","title":"Example code"},{"location":"manual/stream-player-for-your-website/#jplayer-controls","text":"Secondly, the <body> tag of the file jplayer-demo.html defines the controls displayed by jPlayer. These controls can be as simple as just one Play/Pause button, or a fully-fledged playback interface with a playlist, progress bar and volume control. This example code uses one of the simpler skins available for jPlayer, Blue Monday . A stop button or progress bar is not useful when we are streaming continuously from Icecast or SHOUTcast, so we can remove these tags from the demo code, along with the tags specifying the playback time and file duration. The simplified HTML creates a play/pause button and a mute button, and looks as follows: <ul class=\"jp-controls\"> <li><a href=\"javascript:;\" class=\"jp-play\" tabindex=\"1\">play</a></li> <li><a href=\"javascript:;\" class=\"jp-pause\" tabindex=\"1\">pause</a></li> <li><a href=\"javascript:;\" class=\"jp-mute\" tabindex=\"1\" title=\"mute\">mute</a></li> <li><a href=\"javascript:;\" class=\"jp-unmute\" tabindex=\"1\" title=\"unmute\">unmute</a></li> <li><a href=\"javascript:;\" class=\"jp-volume-max\" tabindex=\"1\" title=\"max volume\">max volume</a></li> </ul> When you open the HTML file jplayer-demo.html in a web browser, your player should appear as follows: The original version of this demo code and skin are available from http://jplayer.org/download/ for further experimentation.","title":"jPlayer controls"},{"location":"manual/stream-settings/","text":"Note LibreTime installed via the install script does not currently change the default Icecast password and is insecure without intervention by the system admin. There is a tutorial on our wiki that walks you through the steps of how to fix this and an open issue #86 to track resolution of this. Global settings You can configure direct Icecast and SHOUTcast streams and sound card output by clicking Streams on the System menu. At the top left of the Stream Settings page are global settings including Hardware Audio Output , which enables playout from the default sound card on the server, if one is fitted. The default Output Type of ALSA on the drop-down menu will be suitable for most servers with a sound card. If not, you have the option to choose from other Liquidsoap interfaces available, such as OSS or PortAudio . The second checkbox under Global Settings enables the sending of Icecast Vorbis Metadata with direct streams. This setting is optional, because some media players have a bug which makes them disconnect from Ogg Vorbis streams when an Icecast server notifies the player that a new track is starting. The Stream Label radio button allows you to set the metadata that will be sent with direct streams; Artist and Title , Show , Artist and Title , or Station name and Show name . The Off Air Metadata field configures the text that will be sent to any configured streaming servers, and from there on to media players, when Airtime is not streaming any output. Below this is the Enable Replay Gain checkbox which, if checked, automatically adjusts Airtime's output level to an average of -14dBFS, based on prior analysis of the level of individual files in the Library . This feature helps guard against unwanted changes in Airtime's output level caused by the typical variation in average level of recordings made in different studios at different times. The correction value for each file can be viewed by enabling the ReplayGain column in the Library . If Replay Gain is enabled, output level can be adjusted up to 10dB louder or quieter from the reference level of -14dBFS by clicking and dragging the Replay Gain Modifier control. Increasing level too far is likely to result in clipping (distortion) since the output level is adjusted to be greater than that of the original files. This scenario is indicated by amplitude correction factors greater than 1.0 in the Liquidsoap log file. Click the Save button on the right side of the page to save any changes that you have made to global settings. If you are only using the hardware audio output, and will not be streaming to or from Airtime, you can leave the Stream Settings page after clicking the Save button. Input stream settings On the lower left side of the Stream Settings page you can configure remote live input streams from DJ programs such as Mixxx or IDJC , or smartphone applications used by broadcast journalists. A bug with Butt versions 1.14 to 1.16 causes streams not to connect to LibreTime. A fix has been introduced with Butt version 1.17 that allows it to be used by LibreTime. Airtime supports two types of live input stream; the Show Source , which enables a specific person to stream in during their own show, and the Master Source , which can override the Show Source if necessary. If neither type of live input is available, Airtime will fall back to Scheduled Play (playlists, smart blocks, remote streams and files scheduled in Airtime, in advance of or during a show). The Auto Switch Off and Auto Switch On checkboxes enable playout to be switched automatically to the highest priority source whenever an authenticated input source disconnects from or connects to Airtime, respectively. The field Switch Transition Fade sets the length of the audio fade as scheduled playout is switched to a remote input source, and back. Each type of input stream requires a username and password before the remote broadcaster can connect to Airtime. The Master Username and Master Password can be set in the Input Stream Settings box, while the authentication for individual Show Sources is set up in Airtime's schedule calendar. See the Calendar chapter for details. Input streams must have a Port for the remote broadcaster to connect to, which should be a number in the range from 1024 to 49151. If you have the Icecast or SHOUTcast streaming server running on the same machine as Airtime, you should avoid using port 8000 or 8001 for either type of Airtime input stream. This is because both Icecast and SHOUTcast use port 8000, and SHOUTcast also uses port 8001. If the usernames and passwords were similar, remote broadcasters might accidentally connect to the streaming server directly, bypassing Airtime. To avoid further confusion, it is also recommended that you set a different Mount Point (the specific filename for broadcasters and listeners to connect to) from that used on your public Icecast or SHOUTcast server. If your Airtime server is behind a firewall, and you wish remote broadcasters to connect input streams to it across the public Internet, you may need to click the Override link to set a Connection URL which is available from outside your local area network. This URL might be based on the domain name assigned to the router which forwards the appropriate port to your Airtime server. Then click OK to save the new connection URL. Switching input streams In the Master Panel, available input source streams are shown with an orange line connecting the source to the switch, which you could think of like a patch cable connecting a source to a broadcast mixer. When that switch is active, another orange line connects the switch to the On Air indicator, like a patch cable connecting a mixer to a transmitter. If you have checked the Auto Switch On box in the Stream Settings page, the Master Source switch will move automatically to the active position, on the left, when an authenticated master source connects to Airtime. Otherwise, you can activate the switches manually by clicking the left side of each switch, or deactivate them by clicking the right side. The switches do not have to be dragged with the mouse, in the way that a switch on a hardware mixer would be pushed sideways. Show Source live input streams can also be manually activated or deactivated in the same way. If neither the show source or master source is active then LibreTime will default to what is scheduled to play in the Calendar. If you have the Auto Switch Off box checked LibreTime will resume scheduled playback whenever a stream disconnects. Otherwise you will need to slide to disable a source after a DJ stops streaming. You can also force disconnection of a live remote source, for example when the remote input source has crashed and is no longer sending audio data, click the X icon to the left of the source name. Output stream settings The Default Streaming radio button that is configured by default currently relies upon an insecure icecast password. You will want to change the Icecast2 password and select Custom Streaming. See the notice above for a tutorial on how to fix this. On the right side of the page, you can configure up to three independent output streams with different bit rates or formats, and send these streams to different Icecast or SHOUTcast servers. By default, only Stream 1 is enabled, with this stream being sent the Icecast server configured at installation time. To configure another stream, click the bar with the stream number to expand its box, and make sure Enabled is checked. Enter at least the streaming Server IP address or domain name, and Port details. The default port for Icecast and SHOUTcast servers is 8000. Click Additional Options to expand a box in which you can enter the usernames, passwords and metadata to send to the streaming server. The default Username for Icecast servers is source , and if this the name in use on your streaming server, you can leave this field empty. The Admin User and Admin Password settings are optional, and are used to query the streaming server for audience numbers by the Listener Stats page on the System menu. You can also set the specific Mount Point that listeners will connect to here. Then click one of the Save buttons in the upper or lower right corner of the page to update the Airtime server's settings. Airtime supports output to Icecast in Ogg Vorbis, Ogg Opus, MP3 and AAC formats. When selecting a SHOUTcast server from the Service Type drop-down menu, you are restricted to using MP3 or AAC formats only, so the choice of Ogg Vorbis and Opus formats is greyed out in the Stream Type drop-down menu. The SHOUTcast username for stream sources is fixed, so you do not need to enter this value under Additional Options , but you will usually have to enter a password. Any connection problems between Liquidsoap and Icecast or SHOUTcast are shown on the Stream Settings page. For example, if you enter the wrong password, you will see an Authentication Required error message. To fix this, enter the correct password in the Additional Options box, and click the Save button. If the streaming server is down for any reason, or you have entered an incorrect Server name or Port number, you will see the message Can not connect to the streaming server .","title":"Streams"},{"location":"manual/stream-settings/#global-settings","text":"You can configure direct Icecast and SHOUTcast streams and sound card output by clicking Streams on the System menu. At the top left of the Stream Settings page are global settings including Hardware Audio Output , which enables playout from the default sound card on the server, if one is fitted. The default Output Type of ALSA on the drop-down menu will be suitable for most servers with a sound card. If not, you have the option to choose from other Liquidsoap interfaces available, such as OSS or PortAudio . The second checkbox under Global Settings enables the sending of Icecast Vorbis Metadata with direct streams. This setting is optional, because some media players have a bug which makes them disconnect from Ogg Vorbis streams when an Icecast server notifies the player that a new track is starting. The Stream Label radio button allows you to set the metadata that will be sent with direct streams; Artist and Title , Show , Artist and Title , or Station name and Show name . The Off Air Metadata field configures the text that will be sent to any configured streaming servers, and from there on to media players, when Airtime is not streaming any output. Below this is the Enable Replay Gain checkbox which, if checked, automatically adjusts Airtime's output level to an average of -14dBFS, based on prior analysis of the level of individual files in the Library . This feature helps guard against unwanted changes in Airtime's output level caused by the typical variation in average level of recordings made in different studios at different times. The correction value for each file can be viewed by enabling the ReplayGain column in the Library . If Replay Gain is enabled, output level can be adjusted up to 10dB louder or quieter from the reference level of -14dBFS by clicking and dragging the Replay Gain Modifier control. Increasing level too far is likely to result in clipping (distortion) since the output level is adjusted to be greater than that of the original files. This scenario is indicated by amplitude correction factors greater than 1.0 in the Liquidsoap log file. Click the Save button on the right side of the page to save any changes that you have made to global settings. If you are only using the hardware audio output, and will not be streaming to or from Airtime, you can leave the Stream Settings page after clicking the Save button.","title":"Global settings"},{"location":"manual/stream-settings/#input-stream-settings","text":"On the lower left side of the Stream Settings page you can configure remote live input streams from DJ programs such as Mixxx or IDJC , or smartphone applications used by broadcast journalists. A bug with Butt versions 1.14 to 1.16 causes streams not to connect to LibreTime. A fix has been introduced with Butt version 1.17 that allows it to be used by LibreTime. Airtime supports two types of live input stream; the Show Source , which enables a specific person to stream in during their own show, and the Master Source , which can override the Show Source if necessary. If neither type of live input is available, Airtime will fall back to Scheduled Play (playlists, smart blocks, remote streams and files scheduled in Airtime, in advance of or during a show). The Auto Switch Off and Auto Switch On checkboxes enable playout to be switched automatically to the highest priority source whenever an authenticated input source disconnects from or connects to Airtime, respectively. The field Switch Transition Fade sets the length of the audio fade as scheduled playout is switched to a remote input source, and back. Each type of input stream requires a username and password before the remote broadcaster can connect to Airtime. The Master Username and Master Password can be set in the Input Stream Settings box, while the authentication for individual Show Sources is set up in Airtime's schedule calendar. See the Calendar chapter for details. Input streams must have a Port for the remote broadcaster to connect to, which should be a number in the range from 1024 to 49151. If you have the Icecast or SHOUTcast streaming server running on the same machine as Airtime, you should avoid using port 8000 or 8001 for either type of Airtime input stream. This is because both Icecast and SHOUTcast use port 8000, and SHOUTcast also uses port 8001. If the usernames and passwords were similar, remote broadcasters might accidentally connect to the streaming server directly, bypassing Airtime. To avoid further confusion, it is also recommended that you set a different Mount Point (the specific filename for broadcasters and listeners to connect to) from that used on your public Icecast or SHOUTcast server. If your Airtime server is behind a firewall, and you wish remote broadcasters to connect input streams to it across the public Internet, you may need to click the Override link to set a Connection URL which is available from outside your local area network. This URL might be based on the domain name assigned to the router which forwards the appropriate port to your Airtime server. Then click OK to save the new connection URL.","title":"Input stream settings"},{"location":"manual/stream-settings/#switching-input-streams","text":"In the Master Panel, available input source streams are shown with an orange line connecting the source to the switch, which you could think of like a patch cable connecting a source to a broadcast mixer. When that switch is active, another orange line connects the switch to the On Air indicator, like a patch cable connecting a mixer to a transmitter. If you have checked the Auto Switch On box in the Stream Settings page, the Master Source switch will move automatically to the active position, on the left, when an authenticated master source connects to Airtime. Otherwise, you can activate the switches manually by clicking the left side of each switch, or deactivate them by clicking the right side. The switches do not have to be dragged with the mouse, in the way that a switch on a hardware mixer would be pushed sideways. Show Source live input streams can also be manually activated or deactivated in the same way. If neither the show source or master source is active then LibreTime will default to what is scheduled to play in the Calendar. If you have the Auto Switch Off box checked LibreTime will resume scheduled playback whenever a stream disconnects. Otherwise you will need to slide to disable a source after a DJ stops streaming. You can also force disconnection of a live remote source, for example when the remote input source has crashed and is no longer sending audio data, click the X icon to the left of the source name.","title":"Switching input streams"},{"location":"manual/stream-settings/#output-stream-settings","text":"The Default Streaming radio button that is configured by default currently relies upon an insecure icecast password. You will want to change the Icecast2 password and select Custom Streaming. See the notice above for a tutorial on how to fix this. On the right side of the page, you can configure up to three independent output streams with different bit rates or formats, and send these streams to different Icecast or SHOUTcast servers. By default, only Stream 1 is enabled, with this stream being sent the Icecast server configured at installation time. To configure another stream, click the bar with the stream number to expand its box, and make sure Enabled is checked. Enter at least the streaming Server IP address or domain name, and Port details. The default port for Icecast and SHOUTcast servers is 8000. Click Additional Options to expand a box in which you can enter the usernames, passwords and metadata to send to the streaming server. The default Username for Icecast servers is source , and if this the name in use on your streaming server, you can leave this field empty. The Admin User and Admin Password settings are optional, and are used to query the streaming server for audience numbers by the Listener Stats page on the System menu. You can also set the specific Mount Point that listeners will connect to here. Then click one of the Save buttons in the upper or lower right corner of the page to update the Airtime server's settings. Airtime supports output to Icecast in Ogg Vorbis, Ogg Opus, MP3 and AAC formats. When selecting a SHOUTcast server from the Service Type drop-down menu, you are restricted to using MP3 or AAC formats only, so the choice of Ogg Vorbis and Opus formats is greyed out in the Stream Type drop-down menu. The SHOUTcast username for stream sources is fixed, so you do not need to enter this value under Additional Options , but you will usually have to enter a password. Any connection problems between Liquidsoap and Icecast or SHOUTcast are shown on the Stream Settings page. For example, if you enter the wrong password, you will see an Authentication Required error message. To fix this, enter the correct password in the Additional Options box, and click the Save button. If the streaming server is down for any reason, or you have entered an incorrect Server name or Port number, you will see the message Can not connect to the streaming server .","title":"Output stream settings"},{"location":"manual/tracks/","text":"Tracks This page of the LibreTime interface enables you to search the media library, sort and display the search results by the criteria that you choose, audition library items, and drag and drop those items into a playlist. You can also adjust fade and cue points, create smart blocks (automatically generated playlists), or add incoming web streams to the library. The Library page is not visible to Guest users. Searching the library In the library table which opens, the upper section is for the Advanced Search Options , which enable you to search within individual fields of the database such as Title or Creator . Like an Internet search engine, you do not have to type in the correct upper or lower case, press the Enter key, or even type the whole of the search term before matches from the LibreTime library are displayed. At the bottom of the library table, click the First , Previous , Next , Last or individual page number buttons to browse the search results. Right-clicking an item in the search results will display the available options for that item in a pop-up window. The columns displayed in the search results correspond to the fields available for advanced searches (except for Scheduled and Playlist / Block , which indicate if a particular item is in use). To change the fields which can be searched, click the Show / hide columns button on the right side of the table, just above the search results. Click the metadata column headings such as Title , Creator , Album , or Genre to sort the entries in ascending or descending order. In the second column, audio files are represented by a loudspeaker icon, while playlists ares represented by a document icon. Smart blocks have a think bubble icon, and web streams have an arrow icon. To find all files uploaded by yourself, or another specific member of the station staff, click the Show / hide columns checkbox which enables the Owner column. After you have made your search, you can click the header of the Uploaded column to find the items that person added to the server most recently. Advanced search terms are matched using 'and' rather than 'or' logic, to narrow your search. Perhaps you have tagged some jazz-flavoured station idents intended for use in a particular show called 'Jazz Maverick' with the Album tag of Jazz Maverick and a Genre of Ident . You could then find exactly the idents you are searching for by typing maverick and ident into the respective advanced search fields. If your jingles are tagged with Jingle in the Genre or other fields, you can very easily find them by entering jingle into the search field. The same technique can be used to find advertising and promotional files. (See the chapter Preparing media for ingest for tips on batch tagging files with metadata). Unlike advanced searches, simple searches use 'or' logic for multiple search terms, so a simple search for jingle ident will return items matching either keyword. Clicking on an item in the library table opens a pop-up menu which enables you to audition the item, or remove it from the LibreTime library. Media types which cannot be auditioned directly in a web browser, such as FLAC, have a lock icon instead of a loudspeaker icon, but these files can be downloaded to your local computer for audition instead. The Delete option should be used with caution, because this action cannot be undone. For media files, you can also Edit Metadata stored for the file using this menu.","title":"Tracks"},{"location":"manual/tracks/#tracks","text":"This page of the LibreTime interface enables you to search the media library, sort and display the search results by the criteria that you choose, audition library items, and drag and drop those items into a playlist. You can also adjust fade and cue points, create smart blocks (automatically generated playlists), or add incoming web streams to the library. The Library page is not visible to Guest users.","title":"Tracks"},{"location":"manual/tracks/#searching-the-library","text":"In the library table which opens, the upper section is for the Advanced Search Options , which enable you to search within individual fields of the database such as Title or Creator . Like an Internet search engine, you do not have to type in the correct upper or lower case, press the Enter key, or even type the whole of the search term before matches from the LibreTime library are displayed. At the bottom of the library table, click the First , Previous , Next , Last or individual page number buttons to browse the search results. Right-clicking an item in the search results will display the available options for that item in a pop-up window. The columns displayed in the search results correspond to the fields available for advanced searches (except for Scheduled and Playlist / Block , which indicate if a particular item is in use). To change the fields which can be searched, click the Show / hide columns button on the right side of the table, just above the search results. Click the metadata column headings such as Title , Creator , Album , or Genre to sort the entries in ascending or descending order. In the second column, audio files are represented by a loudspeaker icon, while playlists ares represented by a document icon. Smart blocks have a think bubble icon, and web streams have an arrow icon. To find all files uploaded by yourself, or another specific member of the station staff, click the Show / hide columns checkbox which enables the Owner column. After you have made your search, you can click the header of the Uploaded column to find the items that person added to the server most recently. Advanced search terms are matched using 'and' rather than 'or' logic, to narrow your search. Perhaps you have tagged some jazz-flavoured station idents intended for use in a particular show called 'Jazz Maverick' with the Album tag of Jazz Maverick and a Genre of Ident . You could then find exactly the idents you are searching for by typing maverick and ident into the respective advanced search fields. If your jingles are tagged with Jingle in the Genre or other fields, you can very easily find them by entering jingle into the search field. The same technique can be used to find advertising and promotional files. (See the chapter Preparing media for ingest for tips on batch tagging files with metadata). Unlike advanced searches, simple searches use 'or' logic for multiple search terms, so a simple search for jingle ident will return items matching either keyword. Clicking on an item in the library table opens a pop-up menu which enables you to audition the item, or remove it from the LibreTime library. Media types which cannot be auditioned directly in a web browser, such as FLAC, have a lock icon instead of a loudspeaker icon, but these files can be downloaded to your local computer for audition instead. The Delete option should be used with caution, because this action cannot be undone. For media files, you can also Edit Metadata stored for the file using this menu.","title":"Searching the library"},{"location":"manual/troubleshooting/","text":"Troubleshooting If your Airtime server is not working as expected, individual components of the system can be started, stopped, restarted or checked in the server console using the systemctl command: sudo systemctl start|stop|restart|status airtime-liquidsoap sudo systemctl start|stop|restart|status airtime-playout sudo systemctl start|stop|restart|status airtime-celery sudo systemctl start|stop|restart|status airtime_analyzer sudo systemctl start|stop|restart|status apache2 sudo systemctl start|stop|restart|status rabbitmq-server For example, to restart the Airtime playout engine, you could enter the command: sudo systemctl restart airtime-analyzer Log files Airtime stores log files under the directory path /var/log/airtime/ which can be useful for diagnosing the cause of any problems. Copies of these log files may be requested by LibreTime developers while they are providing technical support for your Airtime deployment. Test tones Liquidsoap output can be tested using two commands provided by Airtime. The airtime-test-soundcard command enables you to send a test tone to the default sound card on the system, so you can check that your audio equipment is working. Press Ctrl+C on your keyboard to stop the tone. airtime-test-soundcard [-v] [-o alsa | ao | oss | portaudio | pulseaudio ] [-h] Where: -v verbose mode -o Linux Sound API (default: alsa) -h show help menu The airtime-test-stream command enables you to send a test tone to a local or remote streaming media server. Press Ctrl+C on your keyboard to stop the tone being streamed. airtime-test-stream [-v] [-o icecast | shoutcast ] [-H hostname] [-P port] [-u username] [-p password] [-m mount] [-h] Where: -v verbose mode -o stream server type (default: icecast) -H hostname (default: localhost) -P port (default: 8000) -u user (default: source) -p password (default: hackme) -m mount (default: test) -h show help menu RabbitMQ hostname changes If the Airtime logs indicate failures to connect to the RabbitMQ server, such as: 2013-10-31 08:21:11,255 ERROR - [pypomessagehandler.py : main() : line 99] - Error connecting to RabbitMQ Server. Trying again in few seconds 2013-10-31 08:21:11,255 ERROR - \\[pypomessagehandler.py : main() : line 99\\] - Error connecting to RabbitMQ Server. Trying again in few seconds - See more at: http://forum.sourcefabric.org/discussion/16050/\\#sthash.W8OJrNFm.dpuf but the RabbitMQ server is running normally, this error might be due to a change in the server's hostname since Airtime installation. Directory names under /var/lib/rabbitmq/mnesia/ indicate that RabbitMQ's database files are organised according to the hostname of the server, for example: rabbit@airtime where the hostname is airtime.example.com . If the hostname has changed, it may be necessary to reconfigure RabbitMQ manually, as follows: Delete the files in /var/lib/rabbitmq/mnesia/ sudo rm -r /var/lib/rabbitmq/mnesia/* Restart RabbitMQ: sudo systemctl restart rabbitmq-server Enter the following commands to set up authentication and grant permissions. The rabbitmqctl add_user command requires the RabbitMQ password from the /etc/airtime/airtime.conf file as an argument. The rabbitmqctl set_permissions command should be entered on one line, with the list of Airtime services repeated three times: rabbitmqctl add_vhost /airtime rabbitmqctl add_user airtime XXXXXXXXXXXXXXXXXXXX rabbitmqctl set_permissions -p /airtime airtime \"airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor\" \"airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor\" \"airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor\"","title":"Troubleshooting"},{"location":"manual/troubleshooting/#troubleshooting","text":"If your Airtime server is not working as expected, individual components of the system can be started, stopped, restarted or checked in the server console using the systemctl command: sudo systemctl start|stop|restart|status airtime-liquidsoap sudo systemctl start|stop|restart|status airtime-playout sudo systemctl start|stop|restart|status airtime-celery sudo systemctl start|stop|restart|status airtime_analyzer sudo systemctl start|stop|restart|status apache2 sudo systemctl start|stop|restart|status rabbitmq-server For example, to restart the Airtime playout engine, you could enter the command: sudo systemctl restart airtime-analyzer","title":"Troubleshooting"},{"location":"manual/troubleshooting/#log-files","text":"Airtime stores log files under the directory path /var/log/airtime/ which can be useful for diagnosing the cause of any problems. Copies of these log files may be requested by LibreTime developers while they are providing technical support for your Airtime deployment.","title":"Log files"},{"location":"manual/troubleshooting/#test-tones","text":"Liquidsoap output can be tested using two commands provided by Airtime. The airtime-test-soundcard command enables you to send a test tone to the default sound card on the system, so you can check that your audio equipment is working. Press Ctrl+C on your keyboard to stop the tone. airtime-test-soundcard [-v] [-o alsa | ao | oss | portaudio | pulseaudio ] [-h] Where: -v verbose mode -o Linux Sound API (default: alsa) -h show help menu The airtime-test-stream command enables you to send a test tone to a local or remote streaming media server. Press Ctrl+C on your keyboard to stop the tone being streamed. airtime-test-stream [-v] [-o icecast | shoutcast ] [-H hostname] [-P port] [-u username] [-p password] [-m mount] [-h] Where: -v verbose mode -o stream server type (default: icecast) -H hostname (default: localhost) -P port (default: 8000) -u user (default: source) -p password (default: hackme) -m mount (default: test) -h show help menu","title":"Test tones"},{"location":"manual/troubleshooting/#rabbitmq-hostname-changes","text":"If the Airtime logs indicate failures to connect to the RabbitMQ server, such as: 2013-10-31 08:21:11,255 ERROR - [pypomessagehandler.py : main() : line 99] - Error connecting to RabbitMQ Server. Trying again in few seconds 2013-10-31 08:21:11,255 ERROR - \\[pypomessagehandler.py : main() : line 99\\] - Error connecting to RabbitMQ Server. Trying again in few seconds - See more at: http://forum.sourcefabric.org/discussion/16050/\\#sthash.W8OJrNFm.dpuf but the RabbitMQ server is running normally, this error might be due to a change in the server's hostname since Airtime installation. Directory names under /var/lib/rabbitmq/mnesia/ indicate that RabbitMQ's database files are organised according to the hostname of the server, for example: rabbit@airtime where the hostname is airtime.example.com . If the hostname has changed, it may be necessary to reconfigure RabbitMQ manually, as follows: Delete the files in /var/lib/rabbitmq/mnesia/ sudo rm -r /var/lib/rabbitmq/mnesia/* Restart RabbitMQ: sudo systemctl restart rabbitmq-server Enter the following commands to set up authentication and grant permissions. The rabbitmqctl add_user command requires the RabbitMQ password from the /etc/airtime/airtime.conf file as an argument. The rabbitmqctl set_permissions command should be entered on one line, with the list of Airtime services repeated three times: rabbitmqctl add_vhost /airtime rabbitmqctl add_user airtime XXXXXXXXXXXXXXXXXXXX rabbitmqctl set_permissions -p /airtime airtime \"airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor\" \"airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor\" \"airtime-pypo|pypo-fetch|airtime-analyzer|media-monitor\"","title":"RabbitMQ hostname changes"},{"location":"manual/tutorials/","text":"Tutorials This page contains links to number of tutorials. Please provide any feedback on this discourse forum post . There are also a number of tutorials in Spanish on Vimeo DJ tutorials How to upload and schedule tracks on your show How to upload a promo How to livestream with butt Program Manager tutorials Building a schedule How to set up an automatic top of the hour ID with intro playlist feature How to schedule a podcast to play the newest episode on an automatic basis How to setup a Auto DJ to play music from certain genres for unscheduled shows Preventing dead air between shows without cutting off tracks How to schedule automatic underwriting/advertising announcements How to schedule a repeating webstream with a linked show Admin tutorials Installing LibreTime from Git on a stand-alone VPS Securing icecast and customizing stream settings How to install player and calendar widgets on your website Configuring track types","title":"Tutorials"},{"location":"manual/tutorials/#tutorials","text":"This page contains links to number of tutorials. Please provide any feedback on this discourse forum post . There are also a number of tutorials in Spanish on Vimeo","title":"Tutorials"},{"location":"manual/tutorials/#dj-tutorials","text":"How to upload and schedule tracks on your show How to upload a promo How to livestream with butt","title":"DJ tutorials"},{"location":"manual/tutorials/#program-manager-tutorials","text":"Building a schedule How to set up an automatic top of the hour ID with intro playlist feature How to schedule a podcast to play the newest episode on an automatic basis How to setup a Auto DJ to play music from certain genres for unscheduled shows Preventing dead air between shows without cutting off tracks How to schedule automatic underwriting/advertising announcements How to schedule a repeating webstream with a linked show","title":"Program Manager tutorials"},{"location":"manual/tutorials/#admin-tutorials","text":"Installing LibreTime from Git on a stand-alone VPS Securing icecast and customizing stream settings How to install player and calendar widgets on your website Configuring track types","title":"Admin tutorials"},{"location":"manual/tutorials/autodj/","text":"How to Setup Genre based AutoDJ YouTube video Text-based Step-by-step In this tutorial we will focus on how to build a traditional auto DJ system where we use a feature called smart blocks and auto loading playlists to play random music tracks of a certain genre during a show. This tutorial is primarily focused on program managers but users who are DJs can also benefit from smart blocks but will only be able to manually schedule them. So for the purposes of this tutorial we are going to assume that you have uploaded a number of files of music with the genre metadata all matching a specific genre, for instance, Alternative. This can be done ahead of time, but LibreTime has no way of automatically grouping sub genres and so it is important that you spend some time curating the track metadata before you upload it to LibreTime as there is not currently a way to bulk edit tracks from inside LibreTime. Also once tracks are uploaded the metadata of the track itself isn\u2019t changed but just how it is represented in the LibreTime database. This might change in the future but would only affect you if you were downloading tracks and uploading them to another instance and hoped that the changes you made were saved. So we can bulk upload a number of creative commons licensed tracks that have their genre all set to specific genres as one way of getting tracks if you don\u2019t have a mp3 collection of your own to draw from. See links below for some spots where you can procure tracks where the creators gave permission for everyone to redistribute play and share them. One the tracks are uploaded to the system and imported we can now create a smartblock that will select the tracks that match a certain genre. For this we will use Genre contains Jazz \u2013 this will match any track that has genre anywhere in its genre so \u2018big band jazz\u2019 and \u2018swing jazz\u2019 would match as well as \u2018acid jazz\u2019. Any subgenre that doesn\u2019t include jazz explicitly such as \u2018be bop\u2019 would need to be added as a new modifier. For the purposes of this smart block we want to select 4 random items. We also want to avoid really long tracks that are longer than 10 minutes. So we will add the modifier Length is less than 00:10:00 and now this smart block will pull 4 smart blocks. Be sure to preview it to make sure that you have some matches in your library. This will also save it. Now we are going to create a new smart block that plays one promo or station ID. Click smartblock and new and then type in the name promo OR ID and then change the criteria Genre to is promo and now click new modifier and then is TOTHID. And then change limit to 1 items. Now we are going to create a playlist that contains these two smart blocks. Click new and then type Jazz with promos and then click smartblocks and add the Jazz Songs followed by the Promo or ID smart block. Now this playlist can be dragged into a schedule show to add 3 random jazz songs followed by a promo. You can manually repeat the selection in the playlist to create a long auto DJ playlist. For instance lets add 3 more Jazz Songs and then add 3 Jazz Songs again followed by a Promo or ID. Now lets save this playlist and go and add it to a scheduled show. This is a quick and easy way for you to manually schedule a large chunk of time. You can also use this as an autoloading playlist. Lets assign this to a new 3 hour show. Called lots of Jazz. Now lets go under Autoloading Playlist and enable that and in this spot we will check repeat until full. This will mean that the system will keep scheduling this playlist until the show is completely full. The only problem here is that at the end of the show it is almost assured that a track will be cut off. If you are a web station and you just want to schedule music for long lengths of time you can schedule shows that are up to 24 hours long. On the other hand if you are an FCC licensed station you are required to have top of the hour IDs as close as possible to the top of the hour. In this case the random selection of tracks might not suffice for compliance. If you have a station ID playlist smartblock in your intro playlist (see previous tutorial linked below) and you have your tracks broken up hourly this shouldn\u2019t be an issue but it still might result in tracks being cut of in the middle. So the best option currently is to change the music tracks to fill the remaining show from the previous selection of 3 items. And then be sure to add a promos or musical sound bridges at the end that are also time remaining but allow overfill. It is possible that we could improve the way the autoloading playlists work in the future, please check out LibreTime.org for the latest release notes and feel free to ask any questions at our forum at https://discourse.LibreTime.org Thanks for tuning in to another LibreTime tutorial. Our next tutorial will show you how to use autoloading playlists to add show specific underwriting or advertisements.","title":"How to Setup Genre based AutoDJ"},{"location":"manual/tutorials/autodj/#how-to-setup-genre-based-autodj","text":"YouTube video","title":"How to Setup Genre based AutoDJ"},{"location":"manual/tutorials/autodj/#text-based-step-by-step","text":"In this tutorial we will focus on how to build a traditional auto DJ system where we use a feature called smart blocks and auto loading playlists to play random music tracks of a certain genre during a show. This tutorial is primarily focused on program managers but users who are DJs can also benefit from smart blocks but will only be able to manually schedule them. So for the purposes of this tutorial we are going to assume that you have uploaded a number of files of music with the genre metadata all matching a specific genre, for instance, Alternative. This can be done ahead of time, but LibreTime has no way of automatically grouping sub genres and so it is important that you spend some time curating the track metadata before you upload it to LibreTime as there is not currently a way to bulk edit tracks from inside LibreTime. Also once tracks are uploaded the metadata of the track itself isn\u2019t changed but just how it is represented in the LibreTime database. This might change in the future but would only affect you if you were downloading tracks and uploading them to another instance and hoped that the changes you made were saved. So we can bulk upload a number of creative commons licensed tracks that have their genre all set to specific genres as one way of getting tracks if you don\u2019t have a mp3 collection of your own to draw from. See links below for some spots where you can procure tracks where the creators gave permission for everyone to redistribute play and share them. One the tracks are uploaded to the system and imported we can now create a smartblock that will select the tracks that match a certain genre. For this we will use Genre contains Jazz \u2013 this will match any track that has genre anywhere in its genre so \u2018big band jazz\u2019 and \u2018swing jazz\u2019 would match as well as \u2018acid jazz\u2019. Any subgenre that doesn\u2019t include jazz explicitly such as \u2018be bop\u2019 would need to be added as a new modifier. For the purposes of this smart block we want to select 4 random items. We also want to avoid really long tracks that are longer than 10 minutes. So we will add the modifier Length is less than 00:10:00 and now this smart block will pull 4 smart blocks. Be sure to preview it to make sure that you have some matches in your library. This will also save it. Now we are going to create a new smart block that plays one promo or station ID. Click smartblock and new and then type in the name promo OR ID and then change the criteria Genre to is promo and now click new modifier and then is TOTHID. And then change limit to 1 items. Now we are going to create a playlist that contains these two smart blocks. Click new and then type Jazz with promos and then click smartblocks and add the Jazz Songs followed by the Promo or ID smart block. Now this playlist can be dragged into a schedule show to add 3 random jazz songs followed by a promo. You can manually repeat the selection in the playlist to create a long auto DJ playlist. For instance lets add 3 more Jazz Songs and then add 3 Jazz Songs again followed by a Promo or ID. Now lets save this playlist and go and add it to a scheduled show. This is a quick and easy way for you to manually schedule a large chunk of time. You can also use this as an autoloading playlist. Lets assign this to a new 3 hour show. Called lots of Jazz. Now lets go under Autoloading Playlist and enable that and in this spot we will check repeat until full. This will mean that the system will keep scheduling this playlist until the show is completely full. The only problem here is that at the end of the show it is almost assured that a track will be cut off. If you are a web station and you just want to schedule music for long lengths of time you can schedule shows that are up to 24 hours long. On the other hand if you are an FCC licensed station you are required to have top of the hour IDs as close as possible to the top of the hour. In this case the random selection of tracks might not suffice for compliance. If you have a station ID playlist smartblock in your intro playlist (see previous tutorial linked below) and you have your tracks broken up hourly this shouldn\u2019t be an issue but it still might result in tracks being cut of in the middle. So the best option currently is to change the music tracks to fill the remaining show from the previous selection of 3 items. And then be sure to add a promos or musical sound bridges at the end that are also time remaining but allow overfill. It is possible that we could improve the way the autoloading playlists work in the future, please check out LibreTime.org for the latest release notes and feel free to ask any questions at our forum at https://discourse.LibreTime.org Thanks for tuning in to another LibreTime tutorial. Our next tutorial will show you how to use autoloading playlists to add show specific underwriting or advertisements.","title":"Text-based Step-by-step"},{"location":"manual/tutorials/build-schedule/","text":"How to Build Your Schedule YouTube video Step-by-step Text Based A description of the steps involved in adding a show to the LibreTime calendar schedule for future playback including repeating shows Audience : Program Managers and Admins Click on the Calendar menu item on the left side of the screen Click on the blue New Show button Under What - type in a Name to replace Untitled Show Optional \u2013 add URL, Genre and Description Under When click In The Future Select a date and time for the Start Time and End Time Time is entered as 00:00 where the first 2 digits are the hour in 24 hour time and the second 2 digits are the minutes. So 15:00 is 3PM. Note: 24 hours is the maximum show time and Midnight is 00:00 of the next date. Click Repeats if this show will air more than once. If it airs at the same time of the day on more than one day of the week then check the boxes next to the Days it should repeat on. If this is a limited engagement show uncheck No End? and select the date at which this show should no longer be on the schedule. Autoloading Playlist is used if you will generate the content for this show using a playlist possibly containing smartblocks to dynamically generate it. Ihf this is checked and a playlist is selected, LibreTime will schedule it an hour before the show is set to air as well as any Intro & Outro Playlist configured in the Admin settings. See other How Tos for ideas about how to use Autoloading playlists. Live Stream Input contains the streaming information for DJs and if Use LibreTime Authentication is checked then DJs can login to stream live if they are added to the Who section. Who is where you can give DJ users permission to schedule tracks for this show and stream live during the show spot. You can check the box next to them or type their name and click the drop down. Style allows you to select a custom color and add a show Logo for this show.","title":"How to Build Your Schedule"},{"location":"manual/tutorials/build-schedule/#how-to-build-your-schedule","text":"YouTube video","title":"How to Build Your Schedule"},{"location":"manual/tutorials/build-schedule/#step-by-step-text-based","text":"A description of the steps involved in adding a show to the LibreTime calendar schedule for future playback including repeating shows Audience : Program Managers and Admins Click on the Calendar menu item on the left side of the screen Click on the blue New Show button Under What - type in a Name to replace Untitled Show Optional \u2013 add URL, Genre and Description Under When click In The Future Select a date and time for the Start Time and End Time Time is entered as 00:00 where the first 2 digits are the hour in 24 hour time and the second 2 digits are the minutes. So 15:00 is 3PM. Note: 24 hours is the maximum show time and Midnight is 00:00 of the next date. Click Repeats if this show will air more than once. If it airs at the same time of the day on more than one day of the week then check the boxes next to the Days it should repeat on. If this is a limited engagement show uncheck No End? and select the date at which this show should no longer be on the schedule. Autoloading Playlist is used if you will generate the content for this show using a playlist possibly containing smartblocks to dynamically generate it. Ihf this is checked and a playlist is selected, LibreTime will schedule it an hour before the show is set to air as well as any Intro & Outro Playlist configured in the Admin settings. See other How Tos for ideas about how to use Autoloading playlists. Live Stream Input contains the streaming information for DJs and if Use LibreTime Authentication is checked then DJs can login to stream live if they are added to the Who section. Who is where you can give DJ users permission to schedule tracks for this show and stream live during the show spot. You can check the box next to them or type their name and click the drop down. Style allows you to select a custom color and add a show Logo for this show.","title":"Step-by-step Text Based"},{"location":"manual/tutorials/install-vps/","text":"How to Install LibreTime on a VPS YouTube video","title":"How to Install LibreTime on a VPS"},{"location":"manual/tutorials/install-vps/#how-to-install-libretime-on-a-vps","text":"YouTube video","title":"How to Install LibreTime on a VPS"},{"location":"manual/tutorials/intro-playlist/","text":"How to automatically schedule an Intro Playlist Audience : Adminstrators Creating the Top of the hour smartblock Login to LibreTime Click Smart Blocks Click the blue +New button On the right (or below if screen width is limited), type in the Smart Block Name: Top of the Hour Station ID Under Search Criteria select Genre for the criteria Select is for modifier Type TOTHID in the third box. Note: all Top of The Hour Station ID tracks will need to have TOTHID as their Genre to match Under Limit To \u2013 click the second box and select items instead of hours Click Save Adding Smartblock to Intro Playlist Click Playlist Click + New Type Intro Playlist in the Name. Click Smart Blocks Click the box to the left of Top of the Hour Station ID Click + Add to current playlist or drag the smart block to the right bottom of the playlist window. Click Save . How to Set Default Intro Playlist Click Settings . 1, Click General and then scroll to Intro Autoloading Playlist and click the drop down to select the Intro Playlist Click Save . Now everytime an autoloading playlist is scheduled the system will select a random top of the hour ID and insert it before any other content. You can other content to the Intro Playlist to also have it scheduled before any shows with Autoloading Playlists enabled.","title":"How to automatically schedule an Intro Playlist"},{"location":"manual/tutorials/intro-playlist/#how-to-automatically-schedule-an-intro-playlist","text":"Audience : Adminstrators","title":"How to automatically schedule an Intro Playlist"},{"location":"manual/tutorials/intro-playlist/#creating-the-top-of-the-hour-smartblock","text":"Login to LibreTime Click Smart Blocks Click the blue +New button On the right (or below if screen width is limited), type in the Smart Block Name: Top of the Hour Station ID Under Search Criteria select Genre for the criteria Select is for modifier Type TOTHID in the third box. Note: all Top of The Hour Station ID tracks will need to have TOTHID as their Genre to match Under Limit To \u2013 click the second box and select items instead of hours Click Save","title":"Creating the Top of the hour smartblock"},{"location":"manual/tutorials/intro-playlist/#adding-smartblock-to-intro-playlist","text":"Click Playlist Click + New Type Intro Playlist in the Name. Click Smart Blocks Click the box to the left of Top of the Hour Station ID Click + Add to current playlist or drag the smart block to the right bottom of the playlist window. Click Save .","title":"Adding Smartblock to Intro Playlist"},{"location":"manual/tutorials/intro-playlist/#how-to-set-default-intro-playlist","text":"Click Settings . 1, Click General and then scroll to Intro Autoloading Playlist and click the drop down to select the Intro Playlist Click Save . Now everytime an autoloading playlist is scheduled the system will select a random top of the hour ID and insert it before any other content. You can other content to the Intro Playlist to also have it scheduled before any shows with Autoloading Playlists enabled.","title":"How to Set Default Intro Playlist"},{"location":"manual/tutorials/livestream/","text":"How to Livestream Your Show YouTube video Step-by-Step Text-based This how to is intended for DJs using butt to stream to their LibreTime server with an external USB audio card setup to route a mixer and sound. Audience : DJs Set Up Download and install butt from https://danielnoethen.de/ for your OS. Note: be sure you have butt version 0.1.17 or newer installed Open up butt Click settings Under Main under Server click ADD Type LibreTime (or your station) under Name Click the radio button next to IceCast under Type Type your stations URL (webpage address) under Address : Type 8002 under Port : Type your DJ login password under Password Type /show under IceCast mountpoint: Type your dj login under IceCast user: Click ADD Still in settings click, Audio and select your external sound card under Audio Device Note: if you only have an internal sound card you maybe able to use it but that is OS specific and outside of this tutorial. We are assuming you have a mic and mixer or a USB mixer hooked up to or as an external soundcard Show Time When its almost your show time go to your LibreTime page and look at the time in the top right when your show starts go to Butt. Click the white Play button (third button in the middle). If it says connecting\u2026 and then stream time with a counter\u2013 congratulations, your are connected! Go to the LibreTime page and at the top right under Source Streams the tab besides Show Source is to the left and Orange \u2013 if it is and Current shows Live Show you are connected. If it is gray, click on the Show Source switch to the right of it and it will toggle your show on and you will be broadcasting. Note: whether auto connect is turned on is a station specific setting so it could work either way Recording your show You can record your show under butt by clicking the red circle record button on the left. It will save a mp3 based upon the date and time in your home/user directory by default. Everything should now be working and you can broadcast for your entire time slot. If you choose to stop streaming before it is over click the white square Stop button to disconnect. Then go to the LibreTime page and if the Show Source didn\u2019t automatically disconnect you can click it to the right and it should turn gray. You are now done streaming. If you have issues connecting check with your system administrator to see if you have the details right.","title":"How to Livestream Your Show"},{"location":"manual/tutorials/livestream/#how-to-livestream-your-show","text":"YouTube video","title":"How to Livestream Your Show"},{"location":"manual/tutorials/livestream/#step-by-step-text-based","text":"This how to is intended for DJs using butt to stream to their LibreTime server with an external USB audio card setup to route a mixer and sound. Audience : DJs","title":"Step-by-Step Text-based"},{"location":"manual/tutorials/livestream/#set-up","text":"Download and install butt from https://danielnoethen.de/ for your OS. Note: be sure you have butt version 0.1.17 or newer installed Open up butt Click settings Under Main under Server click ADD Type LibreTime (or your station) under Name Click the radio button next to IceCast under Type Type your stations URL (webpage address) under Address : Type 8002 under Port : Type your DJ login password under Password Type /show under IceCast mountpoint: Type your dj login under IceCast user: Click ADD Still in settings click, Audio and select your external sound card under Audio Device Note: if you only have an internal sound card you maybe able to use it but that is OS specific and outside of this tutorial. We are assuming you have a mic and mixer or a USB mixer hooked up to or as an external soundcard","title":"Set Up"},{"location":"manual/tutorials/livestream/#show-time","text":"When its almost your show time go to your LibreTime page and look at the time in the top right when your show starts go to Butt. Click the white Play button (third button in the middle). If it says connecting\u2026 and then stream time with a counter\u2013 congratulations, your are connected! Go to the LibreTime page and at the top right under Source Streams the tab besides Show Source is to the left and Orange \u2013 if it is and Current shows Live Show you are connected. If it is gray, click on the Show Source switch to the right of it and it will toggle your show on and you will be broadcasting. Note: whether auto connect is turned on is a station specific setting so it could work either way","title":"Show Time"},{"location":"manual/tutorials/livestream/#recording-your-show","text":"You can record your show under butt by clicking the red circle record button on the left. It will save a mp3 based upon the date and time in your home/user directory by default. Everything should now be working and you can broadcast for your entire time slot. If you choose to stop streaming before it is over click the white square Stop button to disconnect. Then go to the LibreTime page and if the Show Source didn\u2019t automatically disconnect you can click it to the right and it should turn gray. You are now done streaming. If you have issues connecting check with your system administrator to see if you have the details right.","title":"Recording your show"},{"location":"manual/tutorials/outro-playlist/","text":"How to setup an Outro Playlist This how to describes the steps involved in setting up an outro playlist that will schedule promos without interrupting any tracks followed by a ambient musical bridge for all autoloading playlists to avoid dead air. Audience : Program Manager (and Admin to set Outro Playlist) Adding the Promo Fill smart block Click Smart Blocks Click the blue + New button Type in a name for the Smart Block (for instance Promo Fill ) Select Genre and the modifer of is and then type in promo in the 3^rd^ box. Under Limit to : we select time remaining in show To match on additional types of tracks based upon Genre, click + New Modifier under Genre and select is and type the \u201c name of genre \u201d to match on. Click preview to review and confirm tracks match your criteria below. Click Save Adding interuptible Ambient Fill smart block Click Smart Blocks Click the blue +New button Type in a name for the Smart Block (for instance Ambient Fill ) Now we select Genre and the modifer of is and then type in ambient fill in the 3^rd^ box. Under Limit to : we select time remaining in show Click Advanced options drop down Check box next to Allow last track to exceed time limit Click preview to review and confirm tracks match your criteria below. Click Save Create the Outro Playlist to hold the smart blocks Click Playlists Click + New Type in the name \u201c Outro Playlist \u201d Click on Smart Blocks Click box next to Promo Fill smart block and click + Add to current playlist or drag it to the bottom of the Outro playlist Click box next to Ambient Fill smart block and click + Add to current playlist or drag it to the bottom of the Outro playlist Make sure the Promo Fill is above the Ambient Fill smart block in the playlist Click Save Setting the station-wide Outro playlist Click Settings Click General Scroll down to Outro Playlist and with the drop down select the newly created Outro Playlist Scroll down or up on the form and click Save . Now every autoloading playlist show will have tracks scheduled to fill any potential dead air. Watch the tutorial on YouTube","title":"How to setup an Outro Playlist"},{"location":"manual/tutorials/outro-playlist/#how-to-setup-an-outro-playlist","text":"This how to describes the steps involved in setting up an outro playlist that will schedule promos without interrupting any tracks followed by a ambient musical bridge for all autoloading playlists to avoid dead air. Audience : Program Manager (and Admin to set Outro Playlist)","title":"How to setup an Outro Playlist"},{"location":"manual/tutorials/outro-playlist/#adding-the-promo-fill-smart-block","text":"Click Smart Blocks Click the blue + New button Type in a name for the Smart Block (for instance Promo Fill ) Select Genre and the modifer of is and then type in promo in the 3^rd^ box. Under Limit to : we select time remaining in show To match on additional types of tracks based upon Genre, click + New Modifier under Genre and select is and type the \u201c name of genre \u201d to match on. Click preview to review and confirm tracks match your criteria below. Click Save","title":"Adding the Promo Fill smart block"},{"location":"manual/tutorials/outro-playlist/#adding-interuptible-ambient-fill-smart-block","text":"Click Smart Blocks Click the blue +New button Type in a name for the Smart Block (for instance Ambient Fill ) Now we select Genre and the modifer of is and then type in ambient fill in the 3^rd^ box. Under Limit to : we select time remaining in show Click Advanced options drop down Check box next to Allow last track to exceed time limit Click preview to review and confirm tracks match your criteria below. Click Save","title":"Adding interuptible Ambient Fill smart block"},{"location":"manual/tutorials/outro-playlist/#create-the-outro-playlist-to-hold-the-smart-blocks","text":"Click Playlists Click + New Type in the name \u201c Outro Playlist \u201d Click on Smart Blocks Click box next to Promo Fill smart block and click + Add to current playlist or drag it to the bottom of the Outro playlist Click box next to Ambient Fill smart block and click + Add to current playlist or drag it to the bottom of the Outro playlist Make sure the Promo Fill is above the Ambient Fill smart block in the playlist Click Save","title":"Create the Outro Playlist to hold the smart blocks"},{"location":"manual/tutorials/outro-playlist/#setting-the-station-wide-outro-playlist","text":"Click Settings Click General Scroll down to Outro Playlist and with the drop down select the newly created Outro Playlist Scroll down or up on the form and click Save . Now every autoloading playlist show will have tracks scheduled to fill any potential dead air. Watch the tutorial on YouTube","title":"Setting the station-wide Outro playlist"},{"location":"manual/tutorials/podcast/","text":"How to add a Podcast to your LibreTime Calendar This tutorial uses smart blocks and autoloading playlists to add a podcast to your LibreTime calendar. Audience : Program Managers Adding a podcast Login to LibreTime with a user with the Program Manager or Admin role Copy the URL to the podcast RSS feed Click on Podcasts and then click the blue Add button and then past the feed URL and click Subscribe. Click the newly added Podcast and then click edit or double click it. Update the name of the podcast if you want to change it. On the right hand window should be open for your podcast click Generate Smartblock and Playlist Click the checkbox next the newest episode and then click the import button. Let podcast download in the background. Scheduling a podcast as a repeating show Click on Calendar Add a new show or edit a pre-existing show setup for this podcast. Check the time & click repeats and check the appropriate days of the week it should run. If it needs to run at different times of the day you will need to add a separate show for this. Click the drop-down next to Autoloading playlist. Check the box next to Add Autoloading Playlist. Select the playlist with the podcast name we created above. Click Add This Show and it should be added to your Calendar. The latest podcast will be automatically added one hour before your show is set to air. To add other tracks to play along with this show edit the playlist with the podcast name. Any tracks or smartblocks added to this playlist will be scheduled along with this playlist. To add tracks before or after all autoloading playlists see the Intro playlist and Outro playlist tutorials. Watch the tutorial on YouTube","title":"How to add a Podcast to your LibreTime Calendar"},{"location":"manual/tutorials/podcast/#how-to-add-a-podcast-to-your-libretime-calendar","text":"This tutorial uses smart blocks and autoloading playlists to add a podcast to your LibreTime calendar. Audience : Program Managers","title":"How to add a Podcast to your LibreTime Calendar"},{"location":"manual/tutorials/podcast/#adding-a-podcast","text":"Login to LibreTime with a user with the Program Manager or Admin role Copy the URL to the podcast RSS feed Click on Podcasts and then click the blue Add button and then past the feed URL and click Subscribe. Click the newly added Podcast and then click edit or double click it. Update the name of the podcast if you want to change it. On the right hand window should be open for your podcast click Generate Smartblock and Playlist Click the checkbox next the newest episode and then click the import button. Let podcast download in the background. Scheduling a podcast as a repeating show Click on Calendar Add a new show or edit a pre-existing show setup for this podcast. Check the time & click repeats and check the appropriate days of the week it should run. If it needs to run at different times of the day you will need to add a separate show for this. Click the drop-down next to Autoloading playlist. Check the box next to Add Autoloading Playlist. Select the playlist with the podcast name we created above. Click Add This Show and it should be added to your Calendar. The latest podcast will be automatically added one hour before your show is set to air. To add other tracks to play along with this show edit the playlist with the podcast name. Any tracks or smartblocks added to this playlist will be scheduled along with this playlist. To add tracks before or after all autoloading playlists see the Intro playlist and Outro playlist tutorials. Watch the tutorial on YouTube","title":"Adding a podcast"},{"location":"manual/tutorials/stream-settings/","text":"How to Customize the Stream Settings - YouTube link TBD","title":"How to Customize the Stream Settings - YouTube link"},{"location":"manual/tutorials/stream-settings/#how-to-customize-the-stream-settings-youtube-link","text":"TBD","title":"How to Customize the Stream Settings - YouTube link"},{"location":"manual/tutorials/top-of-hour-id/","text":"How to set up an automatic top of the hour ID with intro playlist feature YouTube video Step-by-step Text Based How-To","title":"How to set up an automatic top of the hour ID with intro playlist feature"},{"location":"manual/tutorials/top-of-hour-id/#how-to-set-up-an-automatic-top-of-the-hour-id-with-intro-playlist-feature","text":"YouTube video Step-by-step Text Based How-To","title":"How to set up an automatic top of the hour ID with intro playlist feature"},{"location":"manual/tutorials/track-types/","text":"How to add track types Audience : Adminstrators Using track types when uploading tracks Click Upload The default track type is 'Music' Click the drop down menu to select another type Now when uploading tracks, you have the option to set a track type. This helps better identify and organize track files. If you have a group of files for commercials that needs to be uploaded, you can \"Commercial\" in the drop down menu and then upload the files. Commercial is included by default with LT, but you can create your own type in settings. Create track types Click Settings Click Track Types Click New Track Type On the \"Code\" field, type a unique code that can be easily identifiable. Example, for Music use \"MUS\" or for Sound Effects use something like \"FX\". On the \"Type Name\" field, type a the name of the type of tracks. Example, \"Station IDs\". On the \"Description\" field, enter the description of the type given. On the \"Visibility\" drop down menu, choose to enable or disable the track type. By default, it is enabled. If disabled, it won't be shown across Libretime or in the API for developers. Click Save . Using track types with the uploaded tracks Click Tracks . Select a track and click Edit On \"Track Type\" drop down menu, select the type you would like use. Only the enabled track types that were added in Settings > Track Types will be shown here. Click Save . Using track types with advanced search Click Tracks . Click on the down caret \u25bc that is to the right inside search box On Type select the type of track you're searching for. Using track types in Smart Blocks Click Smart Blocks . On \"Select criteria\" drop down menu, select \"Track Type\" On \"Select modifier\" drop down menu, select \"is\" or \"is not\" On \"Select Track Type\" drop down menu, select the track type.","title":"How to add track types"},{"location":"manual/tutorials/track-types/#how-to-add-track-types","text":"Audience : Adminstrators","title":"How to add track types"},{"location":"manual/tutorials/track-types/#using-track-types-when-uploading-tracks","text":"Click Upload The default track type is 'Music' Click the drop down menu to select another type Now when uploading tracks, you have the option to set a track type. This helps better identify and organize track files. If you have a group of files for commercials that needs to be uploaded, you can \"Commercial\" in the drop down menu and then upload the files. Commercial is included by default with LT, but you can create your own type in settings.","title":"Using track types when uploading tracks"},{"location":"manual/tutorials/track-types/#create-track-types","text":"Click Settings Click Track Types Click New Track Type On the \"Code\" field, type a unique code that can be easily identifiable. Example, for Music use \"MUS\" or for Sound Effects use something like \"FX\". On the \"Type Name\" field, type a the name of the type of tracks. Example, \"Station IDs\". On the \"Description\" field, enter the description of the type given. On the \"Visibility\" drop down menu, choose to enable or disable the track type. By default, it is enabled. If disabled, it won't be shown across Libretime or in the API for developers. Click Save .","title":"Create track types"},{"location":"manual/tutorials/track-types/#using-track-types-with-the-uploaded-tracks","text":"Click Tracks . Select a track and click Edit On \"Track Type\" drop down menu, select the type you would like use. Only the enabled track types that were added in Settings > Track Types will be shown here. Click Save .","title":"Using track types with the uploaded tracks"},{"location":"manual/tutorials/track-types/#using-track-types-with-advanced-search","text":"Click Tracks . Click on the down caret \u25bc that is to the right inside search box On Type select the type of track you're searching for.","title":"Using track types with advanced search"},{"location":"manual/tutorials/track-types/#using-track-types-in-smart-blocks","text":"Click Smart Blocks . On \"Select criteria\" drop down menu, select \"Track Type\" On \"Select modifier\" drop down menu, select \"is\" or \"is not\" On \"Select Track Type\" drop down menu, select the track type.","title":"Using track types in Smart Blocks"},{"location":"manual/tutorials/underwriting/","text":"How to schedule underwriting announcements or ad spots YouTube video","title":"How to schedule underwriting announcements or ad spots"},{"location":"manual/tutorials/underwriting/#how-to-schedule-underwriting-announcements-or-ad-spots","text":"YouTube video","title":"How to schedule underwriting announcements or ad spots"},{"location":"manual/tutorials/upload-promo/","text":"How to Upload a Promo YouTube video Step-by-step Text Based Audience : DJs Record your promo and export it as a mp3. Note: if you can set the genre metadata to promo you can skip the final step below Login to LibreTime with your DJ username Click Upload and drag or click and browse to upload the track. Let the track upload. Once it is done and is shown as imported on the right, click Tracks Find the track in the list If it is not at the top click the Uploaded column until it sorts by the newest tracks first. If Uploaded doesn\u2019t show up click Columns to the top right scroll down and click the box next to Uploaded Now click Uploaded twice and it should display your track at the top. Click the box next your track and click the Edit button above the track listing. A box saying Editing \u201ctrack name\u201d should show up on the right. Find promo type in Genre (or whatever metadata classification your station uses) Scroll down and click Save If you match the metadata requirements for the station smart block then your track will be included in the track list it pulls from.","title":"How to Upload a Promo"},{"location":"manual/tutorials/upload-promo/#how-to-upload-a-promo","text":"YouTube video","title":"How to Upload a Promo"},{"location":"manual/tutorials/upload-promo/#step-by-step-text-based","text":"Audience : DJs Record your promo and export it as a mp3. Note: if you can set the genre metadata to promo you can skip the final step below Login to LibreTime with your DJ username Click Upload and drag or click and browse to upload the track. Let the track upload. Once it is done and is shown as imported on the right, click Tracks Find the track in the list If it is not at the top click the Uploaded column until it sorts by the newest tracks first. If Uploaded doesn\u2019t show up click Columns to the top right scroll down and click the box next to Uploaded Now click Uploaded twice and it should display your track at the top. Click the box next your track and click the Edit button above the track listing. A box saying Editing \u201ctrack name\u201d should show up on the right. Find promo type in Genre (or whatever metadata classification your station uses) Scroll down and click Save If you match the metadata requirements for the station smart block then your track will be included in the track list it pulls from.","title":"Step-by-step Text Based"},{"location":"manual/tutorials/upload-tracks/","text":"How to Upload Tracks and Schedule Your Show YouTube video Step-by-step Text Based Audience : DJ with permission to schedule a specific show Login to LibreTime with your DJ username and password at http://HOSTNAME/user Note: replace HOSTNAME with the web site address given to you by your station admin Click the blue Upload button in the top left of the screen. Click the background where it says Drop files here or click to browse your computer or drag on and drop your music files from your desktop. If you clicked then browse your file system to find the music files you want to play and click them and then click Open The tracks should start to upload and when they are completed show up on the right under Recent Uploads . Note: you will need to keep this window open while they are uploading You can also upload short segments to schedule between your tracks recorded, for instance, with Audacity. LibreTime in general supports mp3, ogg, flac, wav and m4a file types. If a track isn\u2019t supported the import will be marked as failed under Import Status Once you have uploaded all of the tracks you plan on airing you click on Calendar Find your upcoming show in the Calendar and click on it and click Schedule Tracks from the pop-up menu. Now click the tracks you want to add and click + Add to show or click and drag the tracks to the right. You can also add station Smart Blocks , Playlists and Webstreams by clicking those sections at the top of the screen. When you are done you can re-order your tracks by clicking and dragging them. When your tracks are in order and there is no empty time remaning click Ok to finish. Your next show should now be scheduled to play during its scheduled time slot.","title":"How to Upload Tracks and Schedule Your Show"},{"location":"manual/tutorials/upload-tracks/#how-to-upload-tracks-and-schedule-your-show","text":"YouTube video Step-by-step Text Based Audience : DJ with permission to schedule a specific show Login to LibreTime with your DJ username and password at http://HOSTNAME/user Note: replace HOSTNAME with the web site address given to you by your station admin Click the blue Upload button in the top left of the screen. Click the background where it says Drop files here or click to browse your computer or drag on and drop your music files from your desktop. If you clicked then browse your file system to find the music files you want to play and click them and then click Open The tracks should start to upload and when they are completed show up on the right under Recent Uploads . Note: you will need to keep this window open while they are uploading You can also upload short segments to schedule between your tracks recorded, for instance, with Audacity. LibreTime in general supports mp3, ogg, flac, wav and m4a file types. If a track isn\u2019t supported the import will be marked as failed under Import Status Once you have uploaded all of the tracks you plan on airing you click on Calendar Find your upcoming show in the Calendar and click on it and click Schedule Tracks from the pop-up menu. Now click the tracks you want to add and click + Add to show or click and drag the tracks to the right. You can also add station Smart Blocks , Playlists and Webstreams by clicking those sections at the top of the screen. When you are done you can re-order your tracks by clicking and dragging them. When your tracks are in order and there is no empty time remaning click Ok to finish. Your next show should now be scheduled to play during its scheduled time slot.","title":"How to Upload Tracks and Schedule Your Show"},{"location":"manual/tutorials/webstream-link/","text":"How to schedule a webstream with linked calendar YouTube video","title":"How to schedule a webstream with linked calendar"},{"location":"manual/tutorials/webstream-link/#how-to-schedule-a-webstream-with-linked-calendar","text":"YouTube video","title":"How to schedule a webstream with linked calendar"},{"location":"manual/tutorials/widgets/","text":"How to Upload a Promo YouTube video","title":"How to Upload a Promo"},{"location":"manual/tutorials/widgets/#how-to-upload-a-promo","text":"YouTube video","title":"How to Upload a Promo"},{"location":"manual/upgrading/","text":"LibreTime versioning LibreTime 3.x versions support upgrading from Airtime 2.5.x versions. LibreTime follows the Semantic Versioning (semver) standards. In a nutshell, given a version number MAJOR.MINOR.PATCH we increment the: MAJOR version when we make incompatible API changes, MINOR version when we add functionality in a backwards-compatible manner, and PATCH version when we make backwards-compatible bug fixes. Any pre-release versions of LibreTime are denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. This pre-release indicates that the version is unstable in a sense that it might contain incomplete features or not satisfy the intended compatibility requirements as per semver. Upgrading Before upgrading a production LibreTime server, you should back up both the PostgreSQL database and the storage server used by LibreTime. This is especially important if you have not already set up a regular back up routine. This extra back up is a safety measure in case of accidental data loss during the upgrade, for example due to the wrong command being entered when moving files. See Backing up the server in this manual for details of how to perform these back ups. The LibreTime installation script will detect an existing LibreTime or Airtime deployment and back up any configuration files that it finds. We recommend taking your own manual backups of the configuration yourself nevertheless. The install script also tries to restart the needed services during an upgrade. In any case you should monitor if this happened and also take a quick look at the logs files to be sure everything is still fine. Now might be the time to reboot the system or virtual machine LibreTime is running on since regular reboots are part of a healthy system anyway. After the upgrade has completed, you may need to clear your web browser's cache before logging into the new version of the LibreTime administration interface. If the playout engine starts up and detects that a show should be playing at the current time, it will skip to the correct point in the current item and start playing. There will be tested ways to switch from a LibreTime pre-release to a packaged version of LibreTime. Airtime 2.5.x versions support upgrading from version 2.3.0 and above. If you are running a production server with a version of Airtime prior to 2.3.0, you should upgrade it to version 2.3.0 before continuing. In Airtime 1.9.0 onwards, the concept of linked files was replaced with the concept of watched folders . If you are upgrading from a version of Airtime earlier than 1.9.0 and you have previously linked files, the folders they are in will not be watched until you add them to your watched folder list. See Media Folders for more details. Upgrading the server distribution After your LibreTime server has been deployed for a few years, you may need to upgrade the GNU/Linux distribution that it runs in order to maintain security update support. If the upgrade does not go smoothly, it may cause significant downtime, so you should always have a fallback system available during the upgrade to ensure broadcast continuity.","title":"Upgrading"},{"location":"manual/upgrading/#libretime-versioning","text":"LibreTime 3.x versions support upgrading from Airtime 2.5.x versions. LibreTime follows the Semantic Versioning (semver) standards. In a nutshell, given a version number MAJOR.MINOR.PATCH we increment the: MAJOR version when we make incompatible API changes, MINOR version when we add functionality in a backwards-compatible manner, and PATCH version when we make backwards-compatible bug fixes. Any pre-release versions of LibreTime are denoted by appending a hyphen and a series of dot separated identifiers immediately following the patch version. This pre-release indicates that the version is unstable in a sense that it might contain incomplete features or not satisfy the intended compatibility requirements as per semver.","title":"LibreTime versioning"},{"location":"manual/upgrading/#upgrading","text":"Before upgrading a production LibreTime server, you should back up both the PostgreSQL database and the storage server used by LibreTime. This is especially important if you have not already set up a regular back up routine. This extra back up is a safety measure in case of accidental data loss during the upgrade, for example due to the wrong command being entered when moving files. See Backing up the server in this manual for details of how to perform these back ups. The LibreTime installation script will detect an existing LibreTime or Airtime deployment and back up any configuration files that it finds. We recommend taking your own manual backups of the configuration yourself nevertheless. The install script also tries to restart the needed services during an upgrade. In any case you should monitor if this happened and also take a quick look at the logs files to be sure everything is still fine. Now might be the time to reboot the system or virtual machine LibreTime is running on since regular reboots are part of a healthy system anyway. After the upgrade has completed, you may need to clear your web browser's cache before logging into the new version of the LibreTime administration interface. If the playout engine starts up and detects that a show should be playing at the current time, it will skip to the correct point in the current item and start playing. There will be tested ways to switch from a LibreTime pre-release to a packaged version of LibreTime. Airtime 2.5.x versions support upgrading from version 2.3.0 and above. If you are running a production server with a version of Airtime prior to 2.3.0, you should upgrade it to version 2.3.0 before continuing. In Airtime 1.9.0 onwards, the concept of linked files was replaced with the concept of watched folders . If you are upgrading from a version of Airtime earlier than 1.9.0 and you have previously linked files, the folders they are in will not be watched until you add them to your watched folder list. See Media Folders for more details.","title":"Upgrading"},{"location":"manual/upgrading/#upgrading-the-server-distribution","text":"After your LibreTime server has been deployed for a few years, you may need to upgrade the GNU/Linux distribution that it runs in order to maintain security update support. If the upgrade does not go smoothly, it may cause significant downtime, so you should always have a fallback system available during the upgrade to ensure broadcast continuity.","title":"Upgrading the server distribution"},{"location":"manual/upload/","text":"Upload The primary way you can add files to the LibreTime library is using the Upload page of the administration interface. (The Upload page is not visible to Guest users). This page includes an upload queue for media files, which supports drag and drop from your computer's file manager if you are using a recent web browser, such as Mozilla Firefox 16 or later. Some web browsers may set an upload limit for a single file, between 200MB and 2GB. In addition the default LibreTime webserver configuration limits file size to 500M. If you need to upload files larger than 500MB to the LibreTime server on a regular basis, you will need to have your admin update the configuration at /etc/apache2/sites-available/airtime.conf (see here ). Airtime previously supported import via SFTP but this functionality is still under development for LibreTime. If your web browser does not support drag and drop, you can click the background of the screen on the Upload page , to open up a file browser dialog. LibreTime will automatically attempt to upload files once you select them. You can track the file upload progress via the gray progress bar in the upload window. The upload speed will depend on the network connection between your computer and the LibreTime server. While files are uploading you need to keep this browser window open or it will interrupt the file transfer. After the file transfer is complete, the file is then processed by the analyzer service and if it has been succesfully uploaded the Import Status will change from Pending Import to Succesfully imported . If it fails there was some reason your file was rejected by LibreTime and you will need to try again or contact your Admin to have them consult the logs and open up a bug report. It sometimes takes a few minutes for files to be processed but if they are all stuck at Pending Import then it is possible that the airtime_analyzer process has crashed and the admin will need to restart it. See Troubleshooting for more information. You can look specifically at any failed imports by clicking the radio button next to Failed. Once they are done procesing your files ready to be included in your broadcast playlists, smart blocks and shows and can be viewed in the Tracks section of the Library.","title":"Upload"},{"location":"manual/upload/#upload","text":"The primary way you can add files to the LibreTime library is using the Upload page of the administration interface. (The Upload page is not visible to Guest users). This page includes an upload queue for media files, which supports drag and drop from your computer's file manager if you are using a recent web browser, such as Mozilla Firefox 16 or later. Some web browsers may set an upload limit for a single file, between 200MB and 2GB. In addition the default LibreTime webserver configuration limits file size to 500M. If you need to upload files larger than 500MB to the LibreTime server on a regular basis, you will need to have your admin update the configuration at /etc/apache2/sites-available/airtime.conf (see here ). Airtime previously supported import via SFTP but this functionality is still under development for LibreTime. If your web browser does not support drag and drop, you can click the background of the screen on the Upload page , to open up a file browser dialog. LibreTime will automatically attempt to upload files once you select them. You can track the file upload progress via the gray progress bar in the upload window. The upload speed will depend on the network connection between your computer and the LibreTime server. While files are uploading you need to keep this browser window open or it will interrupt the file transfer. After the file transfer is complete, the file is then processed by the analyzer service and if it has been succesfully uploaded the Import Status will change from Pending Import to Succesfully imported . If it fails there was some reason your file was rejected by LibreTime and you will need to try again or contact your Admin to have them consult the logs and open up a bug report. It sometimes takes a few minutes for files to be processed but if they are all stuck at Pending Import then it is possible that the airtime_analyzer process has crashed and the admin will need to restart it. See Troubleshooting for more information. You can look specifically at any failed imports by clicking the radio button next to Failed. Once they are done procesing your files ready to be included in your broadcast playlists, smart blocks and shows and can be viewed in the Tracks section of the Library.","title":"Upload"},{"location":"manual/users/","text":"If your Airtime server is accessible from the public Internet, it will not be secure until you set your own, strong password for the all-powerful admin user. Should the password for the admin user still be set to admin or some other easily guessed word, you should set a new password immediately, via the Users page on the System menu. Only users with the User Type of Admin can see the System menu when they log in. Setting passwords and contact details On the left side of the Users page, click on admin in the table. The details for this user will appear in the box on the right side. To begin with, on a freshly installed Airtime server, the admin user only has a Username , Password and User Type set. To set a new password for the admin user, enter a string of letters and numbers (as long and as varied as is practical) into the Password field, then again into the Verify Password field to guard against typing errors. Keeping this password secret is essential for the smooth running of your station, because it enables access to all scheduling and management features. You can also enter other details for the admin user account on this page, including full name and contact details. Then click the Save button. Adding user accounts To add further user accounts to the system, one for each of your station staff that need access to Airtime, click the New User button with the plus icon. Enter a user name, password and contact details, and then select the User Type from the drop down menu, which can be Admin , Program Manager , DJ , or Guest . The difference between these user types is: An Admin (station manager) has read and write access to all the features of Airtime. This role should be reserved for trusted staff members only. If you give the Admin role to too many people, there could be arguments at the station! A Program Manager has write access to the entire broadcast schedule, but cannot see the System menu and therefore cannot adjust Airtime preferences, manage user accounts, change media folder or stream settings, check the server status, or see the Listener Stats. A Program Manager can view the History menu and the Playout History page, but cannot edit History Templates. ** A DJ (presenter) only has write access to features related to the specific shows assigned to them by an Admin or Program Manager . The DJ can read data for other shows in the Calendar , but not write to them. This read access to other shows helps staff plan their own shows, for instance avoiding the scenario where two DJs play the same music by coincidence. Like a Program Manager , a DJ cannot see the System menu when they log in, and cannot edit History Templates. A Guest can log in to read the forthcoming schedule or playlists, but has no write permission for any feature. Guest users cannot see the Add Media , Library , System or History menus when they log in. The group of guest users might include the station accountant, or the show assistants. Editing or deleting user accounts New user accounts that you add will be shown in the table on the left side of the Users page. If you have a large number of users on the system, you can use the search tool above the table (which has a magnifying glass icon) to identify specific user accounts. Click the white chevrons in the table headings to sort the search results by Username , First Name , Last Name or User Type . To edit a user account, click on that user's row in the table, change the user's details in the box on the right side, and then click the Save button. To remove a user account, click the small x icon to the right side of its row in the table. You cannot delete your own user account, and usernames cannot be changed once created. If the Airtime server is running in demo mode, user accounts cannot be created or updated. See the chapter Host configuration for details of how to enable demo mode. Updating your own account Users can update their own password, and their contact, language and time zone details, by clicking their username on the right side of the main menu bar, next to the Logout link. This action opens a separate, individual page which the user can update regardless of their User Type and access to the System menu. Click the Save button to update your account.","title":"Users"},{"location":"manual/users/#setting-passwords-and-contact-details","text":"On the left side of the Users page, click on admin in the table. The details for this user will appear in the box on the right side. To begin with, on a freshly installed Airtime server, the admin user only has a Username , Password and User Type set. To set a new password for the admin user, enter a string of letters and numbers (as long and as varied as is practical) into the Password field, then again into the Verify Password field to guard against typing errors. Keeping this password secret is essential for the smooth running of your station, because it enables access to all scheduling and management features. You can also enter other details for the admin user account on this page, including full name and contact details. Then click the Save button.","title":"Setting passwords and contact details"},{"location":"manual/users/#adding-user-accounts","text":"To add further user accounts to the system, one for each of your station staff that need access to Airtime, click the New User button with the plus icon. Enter a user name, password and contact details, and then select the User Type from the drop down menu, which can be Admin , Program Manager , DJ , or Guest . The difference between these user types is: An Admin (station manager) has read and write access to all the features of Airtime. This role should be reserved for trusted staff members only. If you give the Admin role to too many people, there could be arguments at the station! A Program Manager has write access to the entire broadcast schedule, but cannot see the System menu and therefore cannot adjust Airtime preferences, manage user accounts, change media folder or stream settings, check the server status, or see the Listener Stats. A Program Manager can view the History menu and the Playout History page, but cannot edit History Templates. ** A DJ (presenter) only has write access to features related to the specific shows assigned to them by an Admin or Program Manager . The DJ can read data for other shows in the Calendar , but not write to them. This read access to other shows helps staff plan their own shows, for instance avoiding the scenario where two DJs play the same music by coincidence. Like a Program Manager , a DJ cannot see the System menu when they log in, and cannot edit History Templates. A Guest can log in to read the forthcoming schedule or playlists, but has no write permission for any feature. Guest users cannot see the Add Media , Library , System or History menus when they log in. The group of guest users might include the station accountant, or the show assistants.","title":"Adding user accounts"},{"location":"manual/users/#editing-or-deleting-user-accounts","text":"New user accounts that you add will be shown in the table on the left side of the Users page. If you have a large number of users on the system, you can use the search tool above the table (which has a magnifying glass icon) to identify specific user accounts. Click the white chevrons in the table headings to sort the search results by Username , First Name , Last Name or User Type . To edit a user account, click on that user's row in the table, change the user's details in the box on the right side, and then click the Save button. To remove a user account, click the small x icon to the right side of its row in the table. You cannot delete your own user account, and usernames cannot be changed once created. If the Airtime server is running in demo mode, user accounts cannot be created or updated. See the chapter Host configuration for details of how to enable demo mode.","title":"Editing or deleting user accounts"},{"location":"manual/users/#updating-your-own-account","text":"Users can update their own password, and their contact, language and time zone details, by clicking their username on the right side of the main menu bar, next to the Logout link. This action opens a separate, individual page which the user can update regardless of their User Type and access to the System menu. Click the Save button to update your account.","title":"Updating your own account"},{"location":"manual/using-the-airtime-import-script/","text":"Using the import script NOTE: This page has issues, as the import script is not currently functional If you have a large number of files in your media library, importing these files one at a time into a broadcast automation system would be time-consuming and tedious. That's why Airtime includes a script that can import an entire directory of files in one go. Copying versus watching There are three main options when using the airtime-import script: Either to copy or move files into Airtime's main storage folder, or to watch files elsewhere. Each option has advantages and disadvantages, so you will have to think about how the files will be used in your station in the long term. For files that are copied or moved , you may run into problems with hard disk space if you do not remove files from the storage server periodically. For files that are watched , you must make sure that the files are actually going to be there at playout time, otherwise they will be skipped. For this reason, it is not recommended to use the watch option for easily-removable storage (like MP3 players or USB memory sticks). There's a strong likelihood that the storage might be unplugged and taken away before playout time. It is also important to make sure that any external hard disk with watched files is powered on, and stays on. The airtime-import script works from the command line, so you must first log into a console on the Airtime server. In recent versions of Airtime, you no longer need to specify the full file system path to the media files that you wish to import. Copying is specified with the copy sub-command: airtime-import --copy <directory> where <directory> is the base directory of the media files that you wish to import. Alternatively, you may wish to delete the files from the original location after copying them to the storage archive, which is accomplished with the move sub-command: airtime-import --move <directory> If the new files are exact duplicates of files that have already been imported, the airtime-import script will detect this. Any users logged into the administration interface will be warned if a File import is in progress ... Users assigned the admin privilege should not attempt to change Airtime's default storage directory while an import is taking place. Watching a new folder on the command line is specified by using the watch add sub-command: airtime-import --watch-add <directory> The script will report the name of the folder now being watched, for example: airtime-import --watch-add /home/Music/ /home/Music/ added to watched folder list successfully The watched folder will also be listed on the Media Folders page on the System menu of the Airtime administration interface. (See the chapter Media Folders for making changes to watched folders via the administration interface). To obtain a list of currently watched folders in the server console, you can use the watch list sub-command: airtime-import --watch-list /home/Music/ Any new files copied to a watched folder (for example, using your desktop computer's file manager) will automatically appear in the Airtime database, and are then ready for playout. In the same way, if you delete a media file using your file manager, it will be automatically removed from the Airtime database, and will no longer be available for playout. If you wish to no longer watch a particular folder, you can use the watch remove sub-command: airtime-import --watch-remove /home/Music/ /home/Music/ removed from watched folder list successfully Get or set the storage folder path See the chapter Media Folders for making changes to the storage folder path via the administration interface. The airtime-import script also enables you to read or write Airtime's storage path configuration. You can find out the current setting with the storage-dir get sub-command: airtime-import --storage-dir-get /srv/airtime/stor A new storage folder path can be configured using the storage-dir set sub-command: airtime-import --storage-dir-set /home/Music/ Successfully set storage folder to /home/Music/ The storage-dir set sub-command should be used with caution on a production server, because moving the storage folder during scheduled programming has the potential to disrupt your broadcast playout. The Airtime playout engine caches files up to 24 hours ahead, but any last-minute additions to the schedule during storage migration could cause problems. There has been error in communication with Booktype server. Not sure right now where is the problem. You should refresh this page. OK Back Create Cancel Next Import Save changes Couldn't create a group! enter epub URL enter Archive.org ID enter Wikibooks URL enter Booktype URL Delete book","title":"Index"},{"location":"manual/using-the-airtime-import-script/#using-the-import-script","text":"","title":"Using the import script"},{"location":"manual/using-the-airtime-import-script/#note-this-page-has-issues-as-the-import-script-is-not-currently-functional","text":"If you have a large number of files in your media library, importing these files one at a time into a broadcast automation system would be time-consuming and tedious. That's why Airtime includes a script that can import an entire directory of files in one go.","title":"NOTE: This page has issues, as the import script is not currently functional"},{"location":"manual/using-the-airtime-import-script/#copying-versus-watching","text":"There are three main options when using the airtime-import script: Either to copy or move files into Airtime's main storage folder, or to watch files elsewhere. Each option has advantages and disadvantages, so you will have to think about how the files will be used in your station in the long term. For files that are copied or moved , you may run into problems with hard disk space if you do not remove files from the storage server periodically. For files that are watched , you must make sure that the files are actually going to be there at playout time, otherwise they will be skipped. For this reason, it is not recommended to use the watch option for easily-removable storage (like MP3 players or USB memory sticks). There's a strong likelihood that the storage might be unplugged and taken away before playout time. It is also important to make sure that any external hard disk with watched files is powered on, and stays on. The airtime-import script works from the command line, so you must first log into a console on the Airtime server. In recent versions of Airtime, you no longer need to specify the full file system path to the media files that you wish to import. Copying is specified with the copy sub-command: airtime-import --copy <directory> where <directory> is the base directory of the media files that you wish to import. Alternatively, you may wish to delete the files from the original location after copying them to the storage archive, which is accomplished with the move sub-command: airtime-import --move <directory> If the new files are exact duplicates of files that have already been imported, the airtime-import script will detect this. Any users logged into the administration interface will be warned if a File import is in progress ... Users assigned the admin privilege should not attempt to change Airtime's default storage directory while an import is taking place. Watching a new folder on the command line is specified by using the watch add sub-command: airtime-import --watch-add <directory> The script will report the name of the folder now being watched, for example: airtime-import --watch-add /home/Music/ /home/Music/ added to watched folder list successfully The watched folder will also be listed on the Media Folders page on the System menu of the Airtime administration interface. (See the chapter Media Folders for making changes to watched folders via the administration interface). To obtain a list of currently watched folders in the server console, you can use the watch list sub-command: airtime-import --watch-list /home/Music/ Any new files copied to a watched folder (for example, using your desktop computer's file manager) will automatically appear in the Airtime database, and are then ready for playout. In the same way, if you delete a media file using your file manager, it will be automatically removed from the Airtime database, and will no longer be available for playout. If you wish to no longer watch a particular folder, you can use the watch remove sub-command: airtime-import --watch-remove /home/Music/ /home/Music/ removed from watched folder list successfully","title":"Copying versus watching"},{"location":"manual/using-the-airtime-import-script/#get-or-set-the-storage-folder-path","text":"See the chapter Media Folders for making changes to the storage folder path via the administration interface. The airtime-import script also enables you to read or write Airtime's storage path configuration. You can find out the current setting with the storage-dir get sub-command: airtime-import --storage-dir-get /srv/airtime/stor A new storage folder path can be configured using the storage-dir set sub-command: airtime-import --storage-dir-set /home/Music/ Successfully set storage folder to /home/Music/ The storage-dir set sub-command should be used with caution on a production server, because moving the storage folder during scheduled programming has the potential to disrupt your broadcast playout. The Airtime playout engine caches files up to 24 hours ahead, but any last-minute additions to the schedule during storage migration could cause problems. There has been error in communication with Booktype server. Not sure right now where is the problem. You should refresh this page. OK Back Create Cancel Next Import Save changes Couldn't create a group! enter epub URL enter Archive.org ID enter Wikibooks URL enter Booktype URL Delete book","title":"Get or set the storage folder path"},{"location":"manual/webstreams/","text":"Adding a web stream A web stream URL and metadata can be added to the LibreTime library, so that a remote stream can be searched for and scheduled to be pulled into a show. For example, at the top of the hour your station may pull a news report from journalists working in another studio. This is a different concept from Master Source and Show Source remote streams which are pushed into the LibreTime playout schedule. To add a web stream, click the + New button on the left side of the Webstreams page. Like a playlist, web streams in the Library can have a title and Description , which may help you find them in searches later. The Stream URL setting must include the port number (such as 8000) and mount point (such as remote_stream) of the remote stream, in addition to the streaming server name. A Default Length for the remote stream can also be set. If the stream is added at the end of a show which becomes overbooked as a result, it will be faded out when the show ends. Note: LibreTime checks the remote webstream's status upon editing stream settings, so an offline stream will result in an error. There are many tools such as BUTT and MIXXX that can be used to send a test stream to LibreTime can save it; read more here .","title":"Webstreams"},{"location":"manual/webstreams/#adding-a-web-stream","text":"A web stream URL and metadata can be added to the LibreTime library, so that a remote stream can be searched for and scheduled to be pulled into a show. For example, at the top of the hour your station may pull a news report from journalists working in another studio. This is a different concept from Master Source and Show Source remote streams which are pushed into the LibreTime playout schedule. To add a web stream, click the + New button on the left side of the Webstreams page. Like a playlist, web streams in the Library can have a title and Description , which may help you find them in searches later. The Stream URL setting must include the port number (such as 8000) and mount point (such as remote_stream) of the remote stream, in addition to the streaming server name. A Default Length for the remote stream can also be set. If the stream is added at the end of a show which becomes overbooked as a result, it will be faded out when the show ends. Note: LibreTime checks the remote webstream's status upon editing stream settings, so an offline stream will result in an error. There are many tools such as BUTT and MIXXX that can be used to send a test stream to LibreTime can save it; read more here .","title":"Adding a web stream"},{"location":"manual/widgets/","text":"TBD","title":"Widgets"}]}